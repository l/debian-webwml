#use wml::debian::template title="Debian BTS - developer info" NOHEADER=yes NOCOPYRIGHT=true
#use wml::debian::translation-check translation="1.23"

<h1><A name="developers">버그 처리 시스템에 관한 개발자 정보</A></h1>

<p>맨 처음에, 사용자가 <code>submit@bugs.debian.org</code>에 전자우편을
보냄으로써 버그 보고가 제출됩니다. 그 다음에 그 버그 보고에 고유 번호가
주어지고, 사용자에게 확인 메일을 보내고, <code>debian-bugs-dist</code>에
포워드합니다(그렇게 설정되어 있다면). 버그 제출자가 <code>Package</code>에
패키지 이름을 쓰고, 그 패키지의 관리자가 알려진 경우에는 그 관리자도
버그 보고의 사본을 받게 됩니다. </p>
</p>

<p>포워드되는 메일의 <code>Subject</code> 줄은 앞에
<code>Bug#</code><var>nnn</var><code>:</code>가 추가되고,
<code>Reply-To</code>는 처음 보고를 제출한 사람과
<var>nnn</var><code>@bugs.debian.org</code>가 들어가게 됩니다. 
</p>

<h2>버그 보고 종료하기</h2>

<p>추적 시스템으로부터 버그 보고를 받거나, <code>debian-bugs-dist</code>에서
이 보고를 본 사람 중에서 책임자는 이에 대한 답장을 적절한 메일링 리스트로
보내야 합니다. 이 때, <code>To</code> 필드를 편집해서
<var>nnn</var><code>@bugs</code> 대신에
<var>nnn</var><code>-done@bugs.debian.org</code>를
씁니다(<var>nnn</var><code>-close</code>는
<var>nnn</var><code>-done</code>와 같습니다). 
</p>

<p>버그 보고의 원 제출자의 주소는 기본적으로 <code>To</code> 필드에 포함됩니다.
버그 시스템이 이 주소를 <code>Reply-To</code>에 포함시키기 때문입니다.
</p>


<p>`Done'(해결됨) 메세지는 자동으로 메일링 리스트로 포워드되지 않습니다.
만일, 해당 버그가 다른 개발자들의 관심을 끌 만한 내용이라면
<code>debian-devel@lists.debian.org</code> 메일링 리스트를 포함시키는 것도
괜찮습니다.
</p>

<p>버그를 종료하는 사람과 버그를 제출하는 사람은 그 버그의 보고의 상태가
바뀔 때마다 알림메일을 받게 됩니다. </p>

<h2>댓글 메세지</h2>

<p>개발자가 버그를 종료하지 <b>않은</b> 채로 버그 보고에 대해 답을
하고 싶다면 간단히 그 메세지에 답장을 보낼 수 있습니다. 답장은 (기본적으로)
<var>nnn</var><code>@bugs</code>와 원래 버그 보고를 제출한 사람에게 가게
됩니다. 버그 추적 시스템에서는 그 답장을 버그 보고에 대한 기록에 추가할
것이고, <code>debian-bugs-dist</code>에 포워드합니다. 여기서는 버그가
종료되었다고 표시되지 않습니다. <var>nnn</var><code>-submitter@bugs</code>에게
메일을 보내면 버그 보고를 제출한 사람에게 직접 메일이 전달됩니다.
</p>

<P>A developer may explicitly mail the bug's submitter with an email to
<VAR>nnn</VAR><CODE>-submitter@bugs</CODE>.</P>

<p><code>debian-bugs-dist</code>에 적합하지 않은 답장 메세지를 보내려면
<var>nnn</var><code>-quiet@bugs</code>나
<var>nnn</var><code>-maintonly@bugs</code>로 보냅니다. 전자의 경우에는
Mail to <VAR>nnn</VAR><CODE>-quiet@bugs</CODE> is filed in the Bug Tracking
System but is not delivered to any individuals or mailing lists.  Mail to
<VAR>nnn</VAR><CODE>-maintonly@bugs</CODE> is filed in the Bug Tracking
System and is delivered only to the maintainer of the package in question.</P>

<p>수신자를 손으로 하나하나 확실하게 편집할 생각이 아니라면
`모든 수신자에게 답장하기'나 `followup' 기능을 사용하지 <em>마십시오</em>.
특히, 댓글을 <code>submit@bugs.debian.org</code>에 모두 보내서는 안 됩니다.
</p>

<h2><A name="severities">심각도 단계</A></h2>

<p>버그 시스템에서는 각 버그 보고에 대해 심각도 단계를 기록하게 됩니다.
이 단계는 기본적으로 <code>normal</code>이지만, 버그를 제출할 때
<code>Severity</code>를 가짜-헤더에 써 주거나
(<A href="Reporting#pseudoheader">버그를 보고하는 방법</A>을 참고하세요),
<A href="#requestserv">컨트롤 요청 서버</A>에 <code>severity</code>
명령을 사용해서 바꿀 수 있습니다.
</p>

<p>실제 심각도 단계는:

<dl>
<dt><code>심각한(critical)</code>
<dd>시스템에서 관계없는 소프트웨어가 (혹은 전체 시스템이) 동작하지 않도록
하거나, 심각한 데이타 손실을 야기하거나, 이 패키지를 설치한 시스템에 보안상
구멍을 만드는 경우.

<dt><code>중대한(grave)</code>
<dd>해당 패키지를 아예 사용할 수 없거나, 거의 사용할 수 없는 경우, 혹은
데이타 손실을 야기하거나, 이 패키지의 사용자가 허락되지 않은 접근을 할 수
있는 보안 구멍을 만드는 경우.

<DT><CODE>serious</CODE>
<DD>is a severe violation of Debian policy (that is, it violates a "must"
or "required" directive), or, in the package maintainer's opinion, makes
the package unsuitable for release.

<dt><code>중요한(important)</code>
<dd>a bug which has a major effect on the usability of a package, without
rendering it completely unusable to everyone.

<dt><code>보통(normal)</code>
<dd>보통의 버그에 대한 기본 값.

<DT><CODE>minor</CODE>
<DD>패키지의 유용성에 영향을 미치지 않는 문제로 어렵지 않게 고칠 수
있는 버그.
 
<dt><code>희망사항(wishlist)</code>
<dd>기능요청, 혹은 원래 설계상 고치기가 매우 힘든 버그.

<dt><code>고쳐진(fixed)</code>
<dd>고쳐졌지만, 아직 종료되지 않은 버그. non-maintainer-uploads에 의해
고쳐진 버그의 심각도가 fixed가 됩니다. Note: the "fixed"
<strong>tag</strong> should be used instead.
</dl>

<H2><a name="tags">버그 보고에 대한 태그</a></H2>

<p>Each bug can have zero or more of a set of given tags. 이 태그들은
패키지 페이지를 보거나 전체 버그 기록(log)을 볼 때 버그 목록에 나타납니다.

<p>태그는 버그를 제출할 때(<a href="Reporting#pseudoheader">버그
보고하는 방법</a> 참고) pseudo-header의 <code>Tags</code> 행이나 <a
href="#requestserv">제어 요청 서버(control request server)</a>의
<code>tags</code> 명령으로 설정합니다.

<p>버그 태그는 다음과 같습니다.

<dl>

<dt><code>patch</code>
  <dd>패치나 버그를 고치는 데 필요한 다른 간단한 프로시저가 버그
기록에 포함됩니다. 패치가 있지만 버그를 정확하게 해결하지 못하거나 다른
문제를 일으키면 이 태그를 사용하면 안 됩니다.

<dt><code>wontfix</code>
  <dd>이 버그는 고쳐지지 않을 것입니다. Possibly because this is a choice between two arbitrary ways of doing things and the maintainer and submitter prefer
  different ways of doing things, possibly because changing the behaviour
  will cause other, worse, problems for others, or possibly for other
  reasons.

<dt><code>moreinfo</code>
  <dd>이 버그는 버그 제출자가 더 자세한 정보를 제공할 때까지는 처리될
수 없습니다. 제출자가 적당한(몇 달) timeframe이 지나도록 자세한 정보를
제공하지 않으면 버그는 닫힐 것입니다. 이것은 "동작하지 않아요" 따위의
버그나 다름 없기 때문입니다. 뭐가 동작하지 않는다는 것인가요?

<dt><code>unreproducible</code>
  <dd>이 버그는 메인테이너의 시스템에서 재현될 수 없습니다. 문제의
원인을 분석하는 데 다른 사람의 도움이 필요합니다.

<dt><code>help</code>
  <dd>메인테이너가 이 버그를 처리하는 데 도움을 필요로 하고 있습니다.

<dt><code>pending</code>
  <dd>The problem described in the bug is being actively worked on,
  i.e. a solution is pending.

<dt><code>fixed</code>
  <dd>This bug is fixed or worked around (by a non-maintainer upload, for
  example), but there's still an issue that needs to be resolved. 이
태그는 오래된 "fixed" severity를 대체합니다.

<dt><code>security</code>
  <dd>이 버그는 패키지의 보안 문제를 설명합니다(e.g., bad
  permissions allowing access to data that shouldn't be accessible; buffer
  overruns allowing people to control a system in ways they shouldn't be
  able to; denial of service attacks that should be fixed,
etc). 대부분의 보안 버그는 critical이나 grave severity로 설정할 수 있습니다.

<dt><code>upstream</code>
  <dd>이 버그는 패키지의 upstream 부분에 적용됩니다.

<dt><code>potato</code>
  <dd>이 버그는 데비안 potato 릴리스에만 적용됩니다.

<dt><code>woody</code>
  <dd>이 버그는 (아직 릴리스되지 않은) woody 배포판에만 적용됩니다.

<dt><code>sid</code>
  <dd>이 버그는 현재 아직 릴리스되지 않은(즉 sid 배포판) 아키텍처에만 적용됩니다.
</dl>

<p>The latter three tags are intended to be used mainly for release critical
bugs, for which it's important to know which distributions are affected to
make sure fixes (or removals) happen in the right place.

<h2><A name="forward">버그 보고를 다른 곳에 넘겼을 경우 기록하는 법</A></h2>

<p>어떤 개발자가 버그 보고를 상위 소스 패키지(버그에 대한 패키지가 여기서부터
나왔을 때) 개발자에게 포워드할 때, 버그 추적 시스템에 다음과 같이 알려 줘야
합니다:
</p>

<p>원 개발자에게 보내는 메세지의 <code>To</code> 필드에는 원 개발자의 주소만
들어 있도록 하십시오. 버그를 보고한 사람과
<var>nnn</var><code>-forwarded@bugs.debian.org</code>의 주소는
<code>CC</code> 필드에 씁니다.
</p>

<p>원 개발자에게 메일을 보낼 때 <code>CC</code>에 있는
<var>nnn</var><code>-forwarded@bugs</code> 주소를 유지해 달라고 요청합니다;
그래야 버그 추적 시스템에 원 개발자의 답장이 버그 보고에 대한 다른
메세지들에 이어서 기록됩니다. 
</p>

<p>버그 추적 시스템이 <var>nnn</var><code>-forwarded</code>로 메세지를 받으면,
시스템은 그 메세지의 <code>To</code> 필드에 있는 주소로 해당 버그를
포워드했다고 표시합니다.</p>
<p>

<p>이 `포워드' 정보는
<A href="server-control"><code>control@bugs.debian.org</code></A>에 메일을
보내서 처리할 수도 있습니다.</p>

<h2><CODE>debian-bugs-reports</CODE>에 요약 포스팅</h2>

<p>금요일마다, 미처리 상태의 버그의 리스트가 보고가 오래된 순서대로 정렬되어,
<code>debian-bugs-reports</code>에 포스팅됩니다. 화요일마다 너무 오랫동안
아무 얘기가 없었던 버그 보고의 리스트가 패키지 관리자 순서대로 정렬되어
포스팅됩니다.
</p>

<p>어떤 패키지의 관리자가 바뀐다면, 새로운 관리자는 그 패키지의
컨트롤 파일에서 <code>Maintainer</code> 필드를 고쳐서 새 버전의 패키지를
올려야 한다. 만약, <A name="maintincorrect">어떤 패키지의 관리자가 잘못
표시되어 있다면</A>, 위와 같은 변경이 아직 이루어지지 않았기
때문입니다. 이 문제는 패키지가 업로드되면 해결될 것입니다. 그러나
예를 들어, 가까운 장래에 패키지를 새로 빌드하여 올려 놓을 필요가 없다면,
override 파일을 고쳐달라고 요청하는 방법도 있습니다.
<code>override-change@debian.org</code>로 메일을 보내면 됩니다.</p>


<h2><A name="requestserv">버그 다시 열기, 재할당, 처리</A></h2>

<p>버그 보고를 다른 패키지로 넘기거나, 잘못 종료된 버그를 다시 열거나,
버그 보고가 포워드되었다는 정보를 변경하거나, 심각도와 제목을 변경하거나,
다른 버그 레포트와 통합하거나 분리할 수 있습니다. 이 기능은
<code>control@bugs.debian.org</code>로 전자우편을 보내서 사용할 수 있습니다. 
</p>

<p><A href="server-control">이 메세지의 형식</A>은 웹이나
<code>bug-maint-mailcontrol.txt</code>에 있는 다른 문서에서 읽을 수
있습니다. 위의 메일 서버 주소로 본문에 <code>help</code>라고 써서 메일을
보내면 텍스트 버전을 얻을 수 있습니다. 

<h2>거의 없어진 제목스캐닝 기능</h2>

<p><code>submit</code>이나 <code>bugs</code>에 도착한 메세지 중
<code>Bug#</code><var>nnn</var>로 시작하는 제목을 가진 메세지는
<var>nnn</var><code>@bugs</code>로 보 집니다. 이 기능은 과거의 주소에서
포워드된 메일에 대한 하위 호환성을 위한 것이기도 하고, 실수로
<code>submit</code>으로 보내진 답장을 처리하기 위한 것이기도 합니다(예를 들어, `모든 수신자에게 답장을 보내는' 기능을 사용하는 경우).</p>

<p>
비슷한 원칙이 <code>maintonly</code>,<code>done</code>, <code>quiet</code>와
<code>forwarded</code>에서도 사용됩니다. 제목이
<code>Bug#</code><var>nnn</var>로 시작하면 해당
<var>nnn-whatever</var><code>@bugs</code> 주소로 메일을 보낸다. </p>

<p>
<code>forwarded</code>나 <code>done</code>주소, 즉 전자우편 주소에 버그 번호가
없는 주소로 보내는 메세지나 제목에 버그 번호가 없는 메세지의
경우는 `junk'에 들어가고 몇 주동안 보관되긴 하지만, 그 밖에는 무시됩니다.</p>

<h2>없어진 <code>X-Debian-PR: quiet</code> 기능</h2>

<p>예전에는 <code>debian-bugs</code>에 도착하는 메일을 버그 추적 시스템이
다른 곳으로 포워드하는 것을 막기 위해서 메일의 실제 헤더 부분에
<code>X-Debian-PR: quiet</code>를 한 줄 적어 넣으면 되었습니다.
</p>

<p>그러나 이제 이 헤더는 무시됩니다. 대신에 <code>quiet</code>이나
<var>nnn</var><code>-quiet</code>로(또는
<code>maintonly</code>나 <var>nnn</var><code>-maintonly</code>로) 보내면
됩니다.</p>


<hr>

#use "otherpages.inc"

#use "footer.inc"
