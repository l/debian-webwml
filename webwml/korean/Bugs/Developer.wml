#use wml::debian::template title="Debian bug tracking system" NOHEADER=yes WEBMASTER=bugs
#use wml::debian::translation-check translation="1.1"
<h1><A name="developers">버그 처리 시스템에 관한 개발자 정보</A></h1>

맨 처음에, 사용자가 <code>submit@bugs.debian.org</code>에 이메일을
보냄으로써 버그 보고가 제출됩니다. 그 다음에 그 버그 보고에 고유번호가
주어지게 되고, 사용자에게 확인 메일을 보내고, <code>debian-bugs-dist</code>에
포워드합니다 (그렇게 설정되어 있다면). 버그 제출자가 <code>Package</code>에
패키지 이름을 쓰고, 그 패키지의 관리자가 알려진 경우에는 그 관리자도
버그 보고의 사본을 받게 됩니다. 
<p>

포워드되는 메일의 <code>Subject</code> 줄은 앞에
<code>Bug#</code><var>nnn</var><code>:</code>가 추가되고,
<code>Reply-To</code>는 처음 보고를 제출한 사람과
<var>nnn</var><code>@bugs.debian.org</code>가 들어가게 됩니다. 
<p>

<h2>버그 보고 종료하기</h2>

추적 시스템으로부터 버그 보고를 받거나, <code>debian-bugs-dist</code>에서
이 보고를 본 사람 중에서 책임자는 이에 대한 답장을 적절한 메일링 리스트로
보내야 합니다. 이 때, <code>To</code> 필드를 편집해서
<var>nnn</var><code>@bugs</code>대신에
<var>nnn</var><code>-done@bugs.debian.org</code> 를 씁니다.
(<var>nnn</var><code>-close</code>는 <var>nnn</var><code>-done</code>와
같습니다.). 
<p>

버그 보고의 원 제출자의 주소는 기본적으로 <code>To</code>에 포함됩니다;
버그 시스템이 이 주소를 <code>Reply-To</code>에 포함시키기 때문입니다.
<p>


`Done' (해결됨) 메세지는 자동으로 메일링 리스트로 포워드되지 않습니다.
만일, 해당 버그가 다른 개발자들의 관심을 끌 만한 내용이라면
<code>debian-devel@lists.debian.org</code> 메일링 리스트를 포함시키는 것도
괜찮습니다.
<p>

버그를 종료하는 사람과 버그를 제출하는 사람은 그 버그의 보고의 상태가
바뀔 때마다 알림메일을 받게 됩니다. 

<h2>댓글 메세지</h2>

개발자가 버그를 종료하지 않은 채로 버그 보고에 대해 답을 하고 싶을 경우에,
간단히 그 메세지에 답장을 보낼 수 있습니다. 답장은 (기본적으로)
<var>nnn</var><code>@bugs</code>와 원래 버그 보고를 제출한 사람에게 가게
됩니다. 버그 추적 시스템에서는 그 답장을 버그 보고에 대한 기록에 추가할
것이고, <code>debian-bugs-dist</code>에 포워드합니다. 여기서는 버그가
종료되었다고 표시되지 않습니다. <var>nnn</var><code>-submitter@bugs</code>에게
메일을 보내면 버그 보고를 제출한 사람에게 직접 메일이 전달됩니다.
<p>

<code>debian-bugs-dist</code>에 적합하지 않은 답장 메세지를 보내려면
<var>nnn</var><code>-quiet@bugs</code>나
<var>nnn</var><code>-maintonly@bugs</code>로 보냅니다. 전자의 경우에는
답장을 기록해 두기만 하고 (어디에도 포워드하지 않습니다), 후자의 경우에는
해당 패키지의 관리자에게만 그 메일을 보냅니다. 
<p>

수신자를 손으로 하나하나 확실하게 편집할 생각이 아니라면
`모든 수신자에게 답장하기'나 `followup' 기능을 사용하지 <em>마십시오</em>.
특히, 댓글을 <var>nnn</var><code>@bugs.debian.org</code>와
<code>submit@bugs.debian.org</code> 두 군데에 모두 보내서는 안됩니다.
버그 시스템은 두 개의 메일을 받을 것이고, 각각을 따로따로
<code>debian-bugs-dist</code>에 포워드할 것이기 때문입니다. 
<p>

<h2><A name="severities">심각도 단계</A></h2>

버그 시스템에서는 각 버그 보고에 대해 심각도 단계를 기록하게 됩니다.
이 단계는 기본적으로 <code>normal</code>이지만, 버그를 제출할 때
<code>Severity</code>를 가짜-헤더에 써 주거나
(<A href="Reporting#pseudoheader">버그를 보고하는 방법</A>을 참고하세요),
<A href="#requestserv">컨트롤 요청 서버</A>에 <code>severity</code>
명령을 사용해서 바꿀 수 있습니다.
<p>

실제 심각도 단계는:

<dl>
<dt><code>심각한(critical)</code>
<dd>시스템에서 관계없는 소프트웨어가 (혹은 전체 시스템이) 동작하지 않도록
하거나, 심각한 데이타 손실을 야기하거나, 이 패키지를 설치한 시스템에 보안상
구멍을 만드는 경우.

<dt><code>중대한(grave)</code>
<dd>해당 패키지를 아예 사용할 수 없거나, 거의 사용할 수 없는 경우, 혹은
데이타 손실을 야기하거나, 이 패키지의 사용자가 허락되지 않은 접근을 할 수
있는 보안 구멍을 만드는 경우.

<dt><code>중요한(important)</code>
<dd>어떤 버그든 그 버그로 인해 패키지를 릴리즈하기에 부적합한 경우

<dt><code>보통(normal)</code>
<dd>보통의 버그에 대한 기본 값.
 
<dt><code>희망사항(wishlist)</code>
<dd>기능요청, 혹은 원래 설계상 고치기가 매우 힘든 버그.

<dt><code>고쳐진(fixed)</code>
<dd>고쳐졌지만, 아직 종료되지 않은 버그. non-maintainer-uploads에 의해
고쳐진 버그의 심각도가 fixed가 됩니다.

</dl>

<h2><A name="forward">버그 보고를 다른 곳에 넘겼을 경우 기록하는 법</A></h2>

어떤 개발자가 버그 보고를 상위 소스 패키지 (버그에 대한 패키지가 여기서부터
나왔을 때) 개발자에게 포워드할 때, 버그 추적 시스템에 다음과 같이 알려 줘야
합니다:
<p>

원 개발자에게 보내는 메세지의 <code>To</code>필드에는 원 개발자의 주소만
들어 있도록 하십시오; 버그를 보고한 사람과
<var>nnn</var><code>-forwarded@bugs.debian.org</code>의 주소는
<code>CC</code> 필드에 씁니다.
<p>

원 개발자에게 메일을 보낼 때 <code>CC</code>에 있는
<var>nnn</var><code>-forwarded@bugs</code>주소를 유지해 달라고 요청합니다;
그래야 버그 추적 시스템에 원 개발자의 답장이 버그 보고에 대한 다른
메세지들에 이어서 기록됩니다. 
<p>

버그 추적 시스템이 <var>nnn</var><code>-forwarded</code>로 메세지를 받으면,
시스템은 그 메세지의 <code>To</code> 필드에 있는 주소로 해당 버그를
포워드했다고 표시합니다.
<p>

이 `포워드' 정보는
<A href="server-control"><code>control@bugs.debian.org</code></A>에 메일을
보내서 처리할 수도 있습니다.

<h2>요약 포스팅</h2>

매 금요일마다, 미처리 상태의 버그의 리스트가 보고가 오래된 순서대로 정렬되어,
<code>debian-bugs-reports</code>에 포스팅된다. 매 화요일에, 너무 오랫동안
아무 얘기가 없었던 버그 보고의 리스트가 패키지 관리자 순서대로 정렬되어
포스팅됩니다.
<p>

<A name="maintincorrect">
어떤 패키지의 관리자가 바뀐다면, 새로운 관리자는 그 패키지의
컨트롤 파일에서 <code>Maintainer</code> 필드를 고쳐서 새 버전의 패키지를
올려야 한다. 만약, <A name="maintincorrect">어떤 패키지의 관리자가 잘못
표시되어 있다면</A>, 그 이유는 위와 같은 변경이 아직 이루어지지 않았기
때문입니다. 이 문제는 패키지가 업로드 되면 해결 될 것입니다. 그러나,
예를 들어, 가까운 장래에 패키지를 새로이 빌드하여 올려 놓을 필요가 없다면,
override 파일을 고쳐달라고 요청하는 방법도 있습니다.
<code>override-change@debian.org</code>로 메일을 보내면 됩니다.


<h2><A name="requestserv">버그 다시 열기, 재할당, 그리고 처리</A></h2>

버그 보고를 다른 패키지로 넘기거나, 잘못 종료된 버그를 다시 열거나,
버그 보고가 포워드되었다는 정보를 변경하거나, 심각도 및 제목을 변경하거나,
다른 버그 레포트와 통합하거나 분리할 수 있습니다. 이 기능은
<code>control@bugs.debian.org</code>로 이메일을 보내서 사용할 수 있습니다. 
<p>

<A href="server-control">이 메세지의 형식</A>은 웹이나
<code>bug-maint-mailcontrol.txt</code>에 있는 다른 문서에서 읽을 수
있습니다. 위의 메일서버 주소로 본문에 <code>help</code>라고 써서 메일을
보내면 텍스트 버전을 얻을 수 있습니다. 

<h2>거의 없어진 제목스캐닝 기능</h2>

<code>submit</code>나 <code>bugs</code>에 도착한 메세지중
<code>Bug#</code><var>nnn</var>로 시작하는 제목을 가진 메세지는
<var>nnn</var><code>@bugs</code>로 보내 집니다. 이 기능은 과거의 주소에서
포워드된 메일에 대한 호환성을 위한 것이기도 하고, 실수로
<code>submit</code>로 보내진 답장을 처리하기 위한 것이기도 합니다
(예를 들어, `모든 수신자에게 답장을 보내는' 기능을 사용하는 경우).

<p>

비슷한 원칙이 <code>maintonly</code>,<code>done</code>, <code>quiet</code>와
<code>forwarded</code>에서도 사용됩니다. 제목이
<code>Bug#</code><var>nnn</var>로 시작하면 해당
<var>nnn-whatever</var><code>@bugs</code> 주소로 메일을 보낸다. 

<p>

<code>forwarded</code>나 <code>done</code>주소, 즉 이메일 주소에 버그 번호가
없는 주소로 보내는 메세지나 및 제목에 버그 번호가 없는 메세지의
경우는 `junk'에 들어가고 몇 주동안 보관되긴 하지만, 그 밖에는 무시됩니다.

<h2><A name="future">앞으로의 계획</A></h2>

앞으로는 <code>Package:</code> 헤더를 꼭 써야 하도록 변경될 수 있습니다
- 지금은 이 헤더를 안 썼을 때 경고 메세지를 낼 뿐입니다. 

<h2>없어진 <code>X-Debian-PR: quiet</code> 기능</h2>

예전에는 <code>debian-bugs</code>에 도착하는 메일을 버그 추적 시스템이
다른 곳으로 포워드하는 것을 막기 위해서 메일의 실제 헤더 부분에
<code>X-Debian-PR: quiet</code>를 한 줄 적어 넣으면 되었습니다.
<p>

그러나 이제 이 헤더는 무시됩니다. 대신에 <code>quiet</code> 또는
<var>nnn</var><code>-quiet</code>로 (또는
<code>maintonly</code>나 <var>nnn</var><code>-maintonly</code>로) 보내면
됩니다.


<hr>
Other pages:
<ul>
<li><A href="./">버그 추적 시스템 메인 페이지.</A>
<li><A href="Reporting">버그를 보고하는 방법.</A>
<li><A href="Access">웹 이외의 방법으로 버그 추적 기록을 접근하기.</A>
<li><A href="server-refcard">메일서버의 참고 카드.</A>
<li><A href="db/ix/full.html">미해결 혹은 최근의 버그 보고의 완전한 리스트.</A>
<li><A href="db/ix/packages.html">버그 보고가 있는 패키지.</A>
<li><A href="db/ix/maintainers.html">버그 보고가 있는 패키지의 관리자.</A>
 <li><A href="../">Debian GNU/Linux 홈 페이지.</A>

</ul>

<hr>

#use "footer.inc"
