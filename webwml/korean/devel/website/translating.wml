#use wml::debian::template title="페이지 번역하기"

<P>번역 작업을 가능한 한 쉽게 하기 위해 웹 페이지가 조금 다르게
만들어졌다. 웹 페이지는 실제로 <tt>wml</tt>로 마크업한 소스로
만든다. 각 언어마다 별도의 디렉토리가 있다. 


<h3>개요</h3>

<p>새로운 번역을 시작하려면 서식
파일(<tt>english/template/debian/*.wml</tt>)을 먼저 편집해야
한다. 그리고 각 언어에 맞게 번역 slice를 추가한다. <a
href="using_wml">wml 사용하기</a> 페이지 slice에 관한 정보가
있다. 서식 파일을 번역할 때 도움이 될 것이다. 


<p>다음으로 번역할 새 디렉토리를 만들고 english/ 디렉토리에서
<tt>Make*</tt>과 <tt>.wmlrc</tt>를 새로 만든 디렉토리로 복사한다.


<p>Makefiles은 번역을 위해 새로 만든 언어 디렉토리에 복사할 때 거의
수정할 필요가 없게 디자인됐다. 


<p>다음과 같은 것을 수정할 수 있다.

<ol>
  <li>webwml/&lt;language&gt;/Make.lang 파일의 LANGUAGE 변수는 반드시
수정해야 한다.

  <li>webwml/&lt;language&gt;/.wmlrc 파일의 CUR_LANG, CUR_ISO_LANG,
CHARSET 변수는 반드시 수정해야 한다.


  <li>몇몇 언어는 문자셋을 처리하기 위해 부수적인 처리가
필요하다. 이것은 wml의 --prolog, --epilog 옵션으로
처리한다. Make.lang에서 WMLPROLOG와 WMLEPILOG 변수를 사용하면 된다. 
</ol>

<p>파일에 있는 주석은 번역하지 않아야 할 부분이 있다면
알려준다. 주석을 존중하라.


<p>주의: 고쳐야 할 것이 있다면 고쳐야 할 것과 그 이유를 debian-www
메일링 리스트로 보내면 된다. 문제를 고칠 수 있을 것이다.


<p>번역할 디렉토리에 Makefile의 SUBS 변수에 열거된 서브디렉토리가
없더라도 무시할 수 있다. 단 서브디렉토리를 번역할 때 부모 디렉토리의
Makefile의 SUBS 변수에 해당 서브디렉토리가 정의되어 있는지
확인하라. 그렇지 않으면 웹 페이지를 빌드할 수 없을 것이다.


<p>이제 *.wml 파일들을 번역할 수 있다. ../english 디렉토리의 파일을
복사하고 번역한다. <tt>make</tt>(그리고 <tt>weblint file.wml</tt>)로
테스트한다. 테스트가 끝나면 <a href="using_cvs">to
CVS</a>로 commit한다.


<p>주의: 웹 페이지가 번역되면 다른 언어는 그 페이지가 다시 만들어지기
전까지는 새로 번역한 페이지에 대한 링크를 만들지 않을 것이다.


<h3>나머지 이야기(The rest of the story)</h3>

<p>앞에서 설명한 것만으로는 번역을 시작하기에 충분하지 않을
것이다. 다음 링크는 앞에서 설명한 과정을 좀더 자세히 설명하고 추가적인
유용한 정보를 제공할 것이다.


<ul>
<li>번역 방법에 대해 좀더 분명한 아이디어를 주는 많은 <a
href="examples">예</a>가 있다.

<li><a href="translation_hints">번역에 대한 힌트</a> 페이지에는
일반적인 질문에 대한 대답과 도움이 될만한 힌트가 있다.

<li>번역한 페이지에 professional look을 주려면 <a
href="navbar_images">네비게이션바용 이미지를 만들어야 한다</a>.

<li>대부분의 번역은 프로그램을 사용한다. <a
href="uptodate">check_trans</a>는 번역을 최신 상태로 유지하는 데
유용하다. 

</ul>

<P> 이 방식대로 하면 웹 페이지 번역이 어렵지 않을 것이다(We hope you
find the work we've done will make translating the pages as easy as
possible). 앞에서 언급한 것처럼 질문이 있으면 debian-www 메일링
리스트에 물어보기 바란다.

