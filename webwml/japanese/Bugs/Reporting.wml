#use wml::debian::template title="Debian BTS - バグを報告する" NOHEADER=yes NOCOPYRIGHT=true
#use wml::debian::translation-check translation="1.25"

<h1>Debian にバグを報告する方法</h1>

<h2>報告する <strong>前</strong> に注意する重要事項</h2>

<p>関係のない複数のバグ、特に異なるパッケージのものをひとつのバグ報告と
しないでください。

<p>バグ報告をする前に、すでに誰かにそのバグが報告されていないか確認すべき
です。現在の未解決バグの一覧は、<a href="./">WWW</a> や
<a href="Access">他のところ</a>にあります。詳細は他のドキュメントを参照して
ください。すでに報告されている #<var>&lt;number&gt;</var>
というバグに対してコメントを加えるには、
<var>&lt;number&gt;</var>@bugs.debian.org にメールを送ってください。
</p>

<p>どのパッケージに問題があるのか判らないときは、
<a href="mailto:debian-user@lists.debian.org">Debian ユーザ・メーリングリスト</a>で助言を求めてください。問題がひとつのパッケージではなくて一般的な
Debian のサービスに関わる場合は、いくつかの
<a href="pseudo-packages">擬似パッケージ</a> や
<a href="../MailingLists/subscribe">メーリングリスト</a>に対して
報告するのが良いでしょう。

<p>バグ報告を、メーリングリストなどの他の人にも送りたい場合は、
電子メールのヘッダではなく<a href="#xcc">別の方法</a>を使うように
してください。

<h2>自動バグ報告ツールを使ってバグ報告を送る</h2>

<p>バグ報告のために Debian で開発された 2 つのプログラムがあります。
<code><a href="http://packages.debian.org/stable/utils/bug.html">bug</a></code>
と
<code><a href="http://packages.debian.org/stable/utils/reportbug.html">reportbug</a></code>
です。
どちらも、バグ報告のやりかたを順をおって示してくれますので、
簡単にバグ報告ができるでしょう。


<h2>電子メールを使ってバグ報告を送る</h2>

<P>以下に説明する手順に従って、
<A href="mailto:submit@bugs.debian.org"><code>submit@bugs.debian.org</code></A>
に電子メールを送ってください。</P>

<P>もちろんどのような電子メールでも同じですが、メールヘッダの <code>Subject</code>
行には明解でわかりやすい説明を含めなくてはいけません。あなたがつけ
たサブジェクトはバグ追跡システムにおいてバグの最初のタイトルとして
使用されます。バグの内容がわかるようなサブジェクトをつけるよう心掛けて
ください！</P>

<P>メール本文の先頭に「擬似ヘッダ」を記述しなければいけません。
つまり、メール本文の 1 行目は以下のようになります:

<pre>
Package: &lt;something&gt;
</pre>

<p><code>&lt;something&gt;</code>の部分を、バグのあるパッケージ名に
置き換えてください。

<p>2 行目は以下のようになります:

<pre>
Version: &lt;something&gt;
</pre>

<p><code>&lt;something&gt;</code>は、パッケージのバージョンに置き換えて
ください。

<p>擬似ヘッダの <code>Package</code>行は正しく記述してください。
バグ追跡システムはパッケージのメンテナにメッセージを送るために
この行を使っています。この情報を調べる方法の
<a href="#findpkgver">例</a>を参照してください。

<p>擬似ヘッダのフィールドは、それぞれ行の先頭からはじまらなければ
いけません。また、バグ追跡システムは今のところ MIME や PGP 形式の
メールを処理できないので、そのようなメールでは擬似ヘッダの認識に
失敗するでしょう。

<p>バグ報告には以下の情報を記述してください:</p>

<ul>
<li>画面に出力されたか、ログファイルに残されたエラーメッセージ
の<em>正確</em> で <em>完全</em> な写し。これは非常に重要です！
<li>問題を再現するための正確なキー操作や手順。
<li>不正な動作についての説明。正常時に期待される動作と、実際に起
きた振舞いを正確に。これらを示すには、実際の実行例の写しを添付す
ると良いでしょう。
<li>もしあれば、修正案またはパッチ。
<li>問題がおきたプログラムの詳細な設定。設定ファイルのすべての内容を
含めて下さい。
<li>バグのあるパッケージが依存しているすべてのパッケージのバージョン。
<li>現在使用しているカーネルのバージョン(<code>uname -a</code> で調べられます)。
現在使用している共有 C ライブラリのバージョン
(<code>ls -l /lib/libc.so.6</code> や
<code>dpkg -s libc6 | grep ^Version</code>で調べられます)。
その他、必要と思われるあなたの Debian システムの詳細はなんでも。
例えば、Perl スクリプトに問題がある場合は、おそらく 'perl'
バイナリのバージョンも報告すべきでしょう
(<code>perl -v</code> や <code>dpkg -s perl-5.005 | grep ^Version:</code>で
調べられます)。
<li>あなたのシステムにおける必要と思われるハードウェアの詳細。
デバイスドライバの問題を報告する場合は、システム上のすべてのハードウェア
を列挙して下さい。IRQ や I/O アドレスの衝突が原因であることがよくあり
ますから。
</ul>

<P>その他関係ありそうな詳しい情報はなんでも書いて下さい。情報をつめ込み
すぎても長大なバグ報告になってしまう恐れはほとんどありません。問題を
再現するために使用するファイルも、小さいものでしたら一緒にバグ報告に
含めて下さい(テキスト以外のファイルは uuencode して下さい)。</P>

<h2><A name="example">報告例</A></h2>

<P>バグ報告はメールヘッダも含めて以下のようなものになります。
<PRE>
  To: submit@bugs.debian.org
  From: diligent@testing.linux.org
  Subject: Hello says `goodbye'

  <A name="pseudoheader">Package: hello</A>
  Version: 1.3-16

  When I invoke `hello' without arguments from an ordinary shell
  prompt it prints `goodbye', rather than the expected `hello, world'.
  Here is a transcript:

  $ hello
  goodbye
  $ /usr/bin/hello
  goodbye
  $

  I suggest that the output string, in hello.c, be corrected.

  I am using Debian GNU/Linux 2.2, kernel 2.2.17-pre-patch-13
  and libc6 2.1.3-10.
</PRE>



<h2><A name="xcc">バグ報告の写しを他のアドレスへ送る</A></h2>

<P>バグ報告の写しを、通常の送付先である <code>debian-bugs-dist</code> や
パッケージメンテナ以外に送らなければならないこともあります。</P>

<P>アドレスを CC 行に記述することで、バグ報告を別のアドレスにも送付
することができますが、その写しの方には <code>Reply-To</code> 行や
<code>Subject</code> 行にバグ報告番号が付加されません。このような
メールに返事をする場合、おそらくヘッダに
<code>submit@bugs.debian.org</code> エントリが残されたままになりま
すので、そのメッセージは新しいバグ報告として記録されてしまいます。
そのため、重複したバグ報告が多数発生してしまいます。</P>

<P><em>正しい</em> 方法は <code>X-Debbugs-CC</code> ヘッダを使用することで
す。以下のような行を(<code>Package</code> フィールドがある擬似ヘッダで
はなく)メッセージのメールヘッダに追加して下さい。</P>
<pre>
 X-Debbugs-CC: other-list@cosmic.edu
</pre>
<P>このように記述すると、バグ追跡システムは <code>debian-bugs-dist</code>
と同様に <code>X-Debbugs-CC</code> 行に書いてあるアドレスにもバグ報告を
送付します。</P>

<P>この機能は、<code>quiet</code> へ送付する時に組みあわせると有効である
ことが多いです。- 以下を参照して下さい。</P>


<h2><A name="severities">重要度(severity レベル)</A></h2>

<P>報告するバグが特に深刻である場合や、単に将来的な要望である場合、
バグ報告を行う際にそのバグの重要度 (severity レベル) を設定するこ
とができます。しかし、これは必須ではありません。あなたが指定して
いない場合は、開発者があなたの報告に対して適切な severity レベル
を指定することもあります。</P>

<p>重要度を設定するには、以下のように擬似ヘッダを記述してください:

<pre>
Severity: &lt;<var>severity</var>&gt;
</pre>

<p>&lt;<var>severity</var>&gt; は有効な重要度に置き換えてください。
重要度については、<A href="Developer#severities">開発者用文書</A>
に記載されています。</P>


<h2>別の報告用アドレス (ちょっとした、あるいは大量のバグ報告)</h2>

<p>バグ報告がささいなこと、たとえばドキュメントの誤字やちょっとした
パッケージ構築の問題などの場合は、適切な重要度を設定したうえで
<code>submit@bugs</code> のかわりに <code>maintonly@bugs</code>に
報告してください。
<code>maintonly</code> は、バグ報告をパッケージメンテナだけに転送して
BTS メーリングリストには転送しません。

<p>一度にたくさんのバグ報告をする場合は、絶対に
<code>maintonly@bugs</code> を使うべきです。これにより、BTS メーリングリスト
に冗長なトラフィックをおこすことを避けられます。
たくさんの同じようなバグ報告をする前に、要約を <code>debian-bugs-dist</code>
にポストする方が良いでしょう。

<p>すでにメンテナに知らせてあるバグ報告をバグ追跡システムに送りたい
場合には、<code>quiet@bugs</code> が使えます。<code>quiet@bugs</code>
に送ったバグ報告はどこにも転送されずに、ただ記録だけされます。

<p>別の報告用アドレスを使った場合は、バグ報告システムは転送する
メッセージに対して、その返信がデフォルトで元の報告と同様に処理されるように
<code>Reply-To</code> を設定します。つまり、<code>maintonly</code>への
返信は <var>nnn</var><code>@bugs</code> ではなく
<var>nnn</var><code>-maintonly@bugs</code> になるということです。
もちろん、返信者がわざと書き換えていなければ、ですが。


<h3>不明なパッケージに対するバグ報告</h3>

<P>関連するパッケージのメンテナが不明の場合、
宛て先が <code>maintonly</code> であっても、
バグ追跡システムはそのバグ報告を <code>debian-bugs-dist</code> に
転送します。</P>

<P><code>maintonly@bugs</code> または <var>nnn</var><code>-maintonly@bugs</code> に
送付する際は、送付するバグ報告がパッケージを正しく指定していることを
確認して下さい。
新たにバグ報告を発行する場合は、その本文先頭に <code>Package</code>
行を正しく記載してください。既に報告されているバグ報告のパッケージ
名等が誤っている場合は、先に
<A href="server-control"><code>control@bugs</code> サービス</A>
を利用して適切なものへ(再)指定してください。</P>

<h2>Using <code>dpkg</code> to find the package and
version for the report</a></h2>

<h2><a name="findpkgver"><code>dpkg</code> を使ってバグ報告に必要な
パッケージ名とバージョンを調べる</a></h2>

<P>あるコマンドについてバグ報告をする場合は、<code>dpkg --search</code>
を使うと、どのパッケージからインストールされたか調べられます。
<code>dpkg --list</code> や <code>dpkg --status</code> を使うと
インストール済パッケージのバージョンがわかります。
</P>

<P>例:
<pre>
$ which apt-get
/usr/bin/apt-get
$ type apt-get
apt-get is /usr/bin/apt-get
$ dpkg --search /usr/bin/apt-get
apt: /usr/bin/apt-get
$ dpkg --list apt
Desired=Unknown/Install/Remove/Purge/Hold
| Status=Not/Installed/Config-files/Unpacked/Failed-config/Half-installed
|/ Err?=(none)/Hold/Reinst-required/X=both-problems (Status,Err: uppercase=bad)
||/ Name           Version        Description
+++-==============-==============-============================================
ii  apt            0.3.19         Advanced front-end for dpkg
$ dpkg --status apt
Package: apt
Status: install ok installed
Priority: standard
Section: base
Installed-Size: 1391
Maintainer: APT Development Team &lt;deity@lists.debian.org&gt;
Version: 0.3.19
Replaces: deity, libapt-pkg-doc (&lt;&lt; 0.3.7), libapt-pkg-dev (&lt;&lt; 0.3.7)
Provides: libapt-pkg2.7
Depends: libapt-pkg2.7, libc6 (&gt;= 2.1.2), libstdc++2.10
Suggests: dpkg-dev
Conflicts: deity
Description: Advanced front-end for dpkg
 This is Debian's next generation front-end for the dpkg package manager.
 It provides the apt-get utility and APT dselect method that provides a
 simpler, safer way to install and upgrade packages.
 .
 APT features complete installation ordering, multiple source capability
 and several other unique features, see the Users Guide in
 /usr/doc/apt/guide.text.gz

</pre>

<hr>

#use "otherpages.inc"

#use "footer.inc"
