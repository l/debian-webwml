#use wml::debian::template title="push サーバを設定する"
#use wml::debian::translation-check translation="1.19"
#use wml::debian::toc

<p>push サーバの設定は、基本的に 2 つの作業からなります。
ひとつは rsync 接続 (通常の<q>pull</q>ミラー) の設定、
もうひとつは ssh のトリガ機構 (pull ミラーを<q>push</q>するためのもの)
の設定です。
</p>

<p><small>
(push サーバに関する詳細は <a href="push_mirroring">push ミラーの説明</a>
をご覧ください。)</small>
</p>

<toc-display />

<toc-add-entry name="rsync">rsync の設定</toc-add-entry>

<p><code>rsync</code> 2.1.1 以降をインストールします。
もし Debian を使っているサイトでしたら、単に
<a href="http://packages.debian.org/stable/net/rsync">rsync</a>
パッケージの最新版をインストールするだけです。
</p>

<p><code>rsyncd.conf</code> ファイルを作り、
以下のような内容を追加します。
</p>

<pre>
uid = nobody
gid = nogroup
max connections = 25
socket options = SO_KEEPALIVE

[debian]
  path = /srv/debian/mirror
  comment = The Debian Archive (~250 GB)
  auth users = authorized_account1,authorized_account2,authorized_accountN
  read only = true
  secrets file = /etc/rsyncd/debian.secrets
</pre>

<p>push する各サイトに対応するエントリを、
<code>/etc/rsyncd/debian.secrets</code> ファイルに追加します。
</p>

<pre>
authorized_account1:a_password
authorized_account2:another_password
authorized_accountN:password
</pre>

<p>これで下流のミラーに、あなたのマシンのアーカイブへの
接続を許したことになります。
</p>

<p>rsync デーモンは inetd から起動することになるでしょう。
これにはまず、<code>/etc/services</code> ファイルに
次のような rsync サービスを (まだなければ) 追加します。
</p>

<pre>
rsync           873/tcp
</pre>

<p>
デーモンを inetd から起動させるには、次の行を
<code>/etc/inetd.conf</code> ファイルに加えます。
</p>

<pre>
rsync      stream      tcp         nowait      root /usr/bin/rsync rsyncd --daemon
</pre>

<p>
(修正後に inetd に HUP シグナルを送り、
修正された設定ファイルを読み込ませるのを忘れないこと)
</p>

<toc-add-entry name="sshtrigger">ssh トリガ機構の設定</toc-add-entry>

<p>Debian のミラーに用いるアカウントの ssh 鍵を新しく作ります。
すでにある自分の鍵を上書きしないよう、-f オプションを用いましょう。
たとえば次のようになります。
</p>

<pre>
ssh-keygen -f ~/.ssh/identity.mysite
</pre>

<p>公開鍵 (~/.ssh/identity.mysite.pub) の先頭に、
IPADDRESS をあなたの上流ミラーに置き換えて、次の内容を追加してください。
</p>

<pre>
no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty,command="~/bin/ftpsync,from="IPADDRESS" &amp;"
</pre>

<p>次に、下流のミラーに接続するスクリプトを書きます。
<code>signal</code> という名前のファイルを作り、
以下の内容を書き込みます。
</p>

<protect>
<pre>
#!/bin/sh

# This script is called to signal the remote host that it is time to
# mirror the archive.

echo Signalling $1
ssh -o"BatchMode yes" -o"user $2" "$1" -i $HOME/.ssh/identity.mysite sleep 1
</pre>
</protect>

<p>このスクリプトは先に作った専用の ssh 鍵でリモートホストにログインします。
このとき、下流の各ミラーの運営者がその鍵を自分の ~/.ssh/authorized_keys
に追加済みである必要があります (また、<q>ftpsync</q>を、ミラー開始用の
コマンドの名前に書き換えてある必要があります)。
このスクリプト自身はリモートでなんら作業を行いませんが、
鍵の設定によって指定されたミラー開始用のコマンドだけが実行されます。</p>

<p>実際にミラーを開始させるには、
rsync で自分のサイトを更新し終えた後に
<code>./signal &lt;site&gt; &lt;username&gt;</code>
というコマンドを実行する必要があります。
こうすると、あなたのサイトが上流からのミラーを終えると、
すぐさま下流への push を開始することになります。
</p>

<p>これらのコマンドは、<code>ftpsync.conf</code> または次のような別のスクリプトに書いて、そのスクリプトを <code>anonftpsync</code>
から呼び出す形の方が便利なら、それでもかまいません。
</p>

<protect>
<pre>
#!/bin/sh

# This script is called by websync to signal the downstream mirrors.

./signal some.other.site archvsync
./signal and.another.site othersiteaccount
</pre>
</protect>

<p>もし問題が起こったら、
<a href="mailto:mirrors@debian.org">連絡してください</a>。
</p>
