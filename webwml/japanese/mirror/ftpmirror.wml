#use wml::debian::template title="Debian アーカイブミラーの構築"
#use wml::debian::toc
#include "$(ENGLISHDIR)/releases/sid/archive.data"
#include "$(ENGLISHDIR)/releases/arches.data"
#use wml::debian::translation-check translation="1.76"

<toc-display />

<toc-add-entry name="whether">ミラーすべきかどうか</toc-add-entry>

<p>私たちはすべての新しいミラーに感謝しますが、
ミラーメンテナ志望の方々は、
自身のミラーを開始する前に以下の質問に答えられるかどうか確認してください。</p>

<ul>
  <li>ミラーはその地域に不可欠か。もしかして近くにミラーがすでにあるのではないか。</li>
  <li>ミラーをホストするためのリソースを持っているか。
  ミラーはかなりの<a href="size">ディスク領域</a>と帯域幅を消費するので、コスト負担を約束できなければならない。</li>
  <li>ミラーすることは正しい選択か。ときどき人は、本当は
  <a href="https://packages.debian.org/apt-cacher-ng">apt-cacher-ng</a>
  のようなキャッシュプロキシを実行したいところを、誤ってミラーを開始する。</li>
</ul>

<toc-add-entry name="what">ミラーの対象</toc-add-entry>

<p><a href="./">メインのミラーページ</a>にミラーできるアーカイブのリストがあります。</p>

<ul>
<li>
Debian をネットワークからインストールするため、CD を (jigdo
を使って) 作成するため、あるいはインストール済みのシステムを更新するために、
debian/ アーカイブをユーザは期待します。</li>

<li>
debian-cd/ はミラーサーバによって内容が異なるアーカイブです。
CD イメージの作成に使われる jigdo (debian/ のファイルと組み合わせて使用されます)
のテンプレートが置かれているサイトや、出来上がっている CD
イメージが置かれているサイト、あるいは両方が置かれているサイトがあります。<br/>
詳細は <a href="$(HOME)/CD/mirroring/">Debian CD
イメージのミラーサイトになるには</a>のページを見てください。</li>

<li>
debian-archive/ には実際の<em>アーカイブ</em>、古い、obsolete なバージョンの
Debian があります。これは通常、特定少数のユーザしか関心を持たないものでしょう。</li>

</ul>

<p>ミラーサイズについてのより正確な情報については、<a href="size">ミラーサイズ</a> ページを参照してください。</p>

<p>debian-security/ アーカイブには Debian
セキュリティチームによりリリースされる、セキュリティ更新が置かれます。
これは誰しも関心をもつ対象となるでしょうが、セキュリティ更新は散発的に起こるので、
最新を保つのに頻繁なミラー処理 (あるいは <a href="push_mirroring">push
ミラー</a>) が要求されるため、推奨しません。Debian では、代わりに
security.debian.org の高い可用性を保つのにあらゆる努力をします。</p>

<toc-add-entry name="wherefrom">どこからミラーするのか</toc-add-entry>

<p><code>ftp.debian.org</code> が Debian パッケージの正当な場所で、
そこからミラーするのがベストだと考える人が多くいますが、
これは<strong>正しくありません</strong>。</p>
<p><code>ftp.debian.org</code> は内部の Debian サーバから更新しているサーバのうちの一つに過ぎません。
そのアドレスは単一のサーバに目下割り当てられており、主に後方互換性のためにまだ存在します。</p>

<p><a href="official">公式ミラー</a>は、ここからミラーするのに適切な場所であることを意味します。</p>
<p><a href="list-full">ミラー全リスト</a>にあるサーバのうち、
<q><kbd>Type: Push-Primary</kbd></q> か <q><kbd>Type: Push-Secondary</kbd></q>
タグがあるものがミラー元として適切です。
その中からネットワーク的、地理的に近いものを使用してください。</p>

<p>ミラー処理がなされている限り、異なる <em>Push-Primary</em>
のミラーサーバの間に実質的な違いはありません。言い換えれば、
多くの人が ftp.debian.org を使う (残念ながらそうなっています) と、
提供された帯域を活かせずに無駄にしているということになります。</p>

<p>米国のミラー管理者は、ftp.us.debian.org (Push-Primary ミラーである、米国での公式ミラーアドレス) からミラーすべきです。
ただし、このアドレスは複数のマシンのラウンドロビンのエイリアスでもあるので、
そのうちのどれが最適かを確認して、その特定の1つからミラーするのが普通です。
<br/>
<small>こうすることの良い面は、2段階の rsync を行うとの失敗のリスクを
避けられることです (それぞれの段階は、
その時間差の間に、競合状態を引き起こすことになる異なるデータを持つ
異なるマシンを見に行く可能性があります)。
悪い面は、このことでパフォーマンスがさまざまなな単一サイトに集中する
というものですが、これは現時点では一般に私たちのミラーネットワークに
つきものです。</small></p>

<toc-add-entry name="how">どうやってミラーするのか</toc-add-entry>

<p>推奨するミラー方法は、次の2種類の形式で利用可能な、ftpsync
というスクリプトセットを使用する方法です。</p>
<ul>
    <li><url "https://ftp-master.debian.org/ftpsync.tar.gz"> の tarball</li>
    <li>git リポジトリ: <kbd>git clone https://ftp-master.debian.org/git/archvsync.git</kbd></li>
</ul>

<p>強く推奨するミラー用のプロトコルは <a
href="https://packages.debian.org/stable/net/rsync">rsync</a>
です。</p>

<p><kbd>wget</kbd> やその他の FTP ベースのミラーツールを用いて Debian
をミラーするのは控えるようお願いします。
これらのツールでも可能なように思われるかもしれませんが、
これらには様々な問題 (ハードリンクを検出できない、部分的なミラーをするのが大変、など)
があります。</p>

<h3>匿名 rsync</h3>

<p>アーカイブのミラーには <a href="https://ftp-master.debian.org/ftpsync.tar.gz">ftpsync スクリプトセット</a>
の使用を推奨します。中にある README ファイルに従ってミラーを構築してください。</p>

<p>あなた自身のスクリプトを使う場合、サポートしなければならない
最低限の機能は次のとおりです:</p>

<ul>
   <li><p>2段階の同期を行うようにしてください。</p>
   <p>アーカイブミラーは、2 段階で行われなければなりません。最初の rsync は
   インデックスファイルを無視して実行する必要があります。最初の rsync 実行での
   正しい exclude オプション は次のとおりです:</p>
   <kbd>--exclude Packages* --exclude Sources* --exclude Release* --exclude InRelease --exclude i18n/* --exclude ls-lR*</kbd>
   <p>最初の段階ではどのファイルも削除してはなりません。</p>
   <p>次の段階では、上記で除外されたファイルを転送し、もうミラーに属さない
      ファイルを削除するようにします。</p>

   <p>根拠: アーカイブミラーを 1 段階だけで行うようにすると、インデックスファイル
      がまだミラーされていないファイルを参照する期間ができてしまいます。</p>
   </li>

   <li><p>実行中に push を無視してはなりません (<a href="push_mirroring">push ミラー</a> 向け)。</p>
   <p>ミラー同期の実行中に push を受け取った場合、それを無視しては*いけません*。
      全同期処理を再実行する必要があります。</p>

   <p>根拠: Debian ミラースクリプトのほとんどの実装は、
      最初の同期がまだ実行されているときに2回目の push イベントを受け取った場合、
      ミラーを矛盾した状態のままにしてしまいます。おそらく近い将来、push の頻度は
      増える予定です。</p>
   </li>

  <li>rsync には最低限このオプションを付けてください:
      <kbd>--recursive --times --links --hard-links --delete</kbd></li>

  <li>ディスク容量に余裕がある場合は、<kbd>--delete-after</kbd>
      オプションも使って更新時の一時的な問題も回避するようにしてください。</li>

  <li>rsync でのミラー作業が終わったら、
      あなたのサーバ名を付けたタイムスタンプファイルを Debian ミラーの
      <code>project/trace/</code> サブディレクトリに追加してください。
      つまり、日々の rsync が終わったら
      <kbd>date -u &gt; .../debian/project/trace/<var>your.server</var></kbd>
      を実行するということです。</li>

  <li><tt>project/</tt>, <tt>doc/</tt>
      その他のサブディレクトリについてはできるだけ除外しないようにしてください。
      これらは通常、サイズは小さく、それでいてユーザにとって有益です。
      特に、<tt>project/trace</tt> はミラーに問題があった場合非常に役に立ちます。</li>

</ul>

<toc-add-entry name="partial">部分的なミラー</toc-add-entry>

<p>既に <a href="size">Debian
アーカイブのサイズは巨大になっている</a>ので、必要な一部だけのミラーをしたいという人もいます。
何か除外する場合は、アーキテクチャを除外してください。</p>

<p>推奨の <a href="https://ftp-master.debian.org/ftpsync.tar.gz">ftpsync</a> の場合は、ARCH_EXCLUDE
変数を編集することで可能になります。</p>

<p><tt>project/</tt>, <tt>doc/</tt>
その他のサブディレクトリについてはできるだけ除外しないようにしてください。
これらは通常、サイズは小さく、それでいてユーザにとって有益です。
特に、<tt>project/trace</tt> はミラーに問題があった場合非常に役に立ちます。</p>

<p>その他の専用スクリプトも使用することはできますが、通常は不要でしょうし、
公式ミラーに使うのはお勧めできません。</p>

<toc-add-entry name="when">いつミラーするのか</toc-add-entry>

<p>メインのアーカイブは1日4回更新されます。
ミラーは通常 3:00、9:00、15:00 及び 21:00 (ともに UTC) 頃に更新を始めますが、
これは決まっているわけではなく、これに執着すべきでもありません。</p>

<p>ミラー更新はメインのアーカイブミラーの数時間後に行うべきです。
ミラー元のサイトが <kbd>project/trace/</kbd>
サブディレクトリにタイムスタンプファイルを残しているか確認してください。
タイムスタンプファイルはそのサイトのような名前で、
その内容は最後のミラー更新完了時刻です。(安全を見て)
これから数時間とってミラーしてください。</p>

<p><b>ミラーはメインのアーカイブと同期していることが不可欠です</b>。最低でもミラーを
24 時間に 4 回更新すれば、アーカイブの正確な反映を保証できます。
メインのアーカイブと同期していないミラーは公式ミラー一覧に掲載されないことを
認識しておいてください。</p>

<p>毎日のミラー作業を自動化するのに最も簡単なのは cron です。詳細は
<kbd>man crontab</kbd> してください。</p>

<p>注: あなたのサイトが push
機構を採用する場合にはこの項目はまったく気にする必要がありません。</p>

<h3>push トリガーによるミラー</h3>

<p><q>push</q> ミラーとは、私たちが開発した、
アーカイブへの変更がミラーに行き渡るまでの時間を最小にとどめるミラー方法です。
上流のミラーが SSH トリガーを用いて下流のミラーに更新を開始させます。
<q>データを押し込むこと (push)</q>ができるのは、通常、
変数データを使用しない安全なトリガー (引き金) のみです。したがって、
ミラープロセスの残りの部分は、cron ジョブのような単なる<q>pull</q>となります。</p>

<p>push 型のミラー作業は (<tt>ftp.us.debian.org</tt> のように DNS
ラウンドロビンの別名となっているような場合に)、
複数のサーバを同期させ続けるのに必要です。また、私たちは第 1 層、
第 2 層のミラーに対してこれを使用します。
ただし、この方法は準備にやや手間がかかるので
<q>私的</q>なミラーで広くは行われていません。</p>

<p>この仕組みについて、さらに突っ込んだ説明や、どうして安全なのか、
push ミラーの構築方法については、<a
href="push_mirroring">完全な説明</a>を参照してください。</p>

<toc-add-entry name="settings">追加の推奨設定</toc-add-entry>

<p>Debian ミラーを HTTP から利用できるようにする場合は、Apache の設定の
<code>&lt;Directory <var>/path/to/your/debian/mirror</var>&gt;</code>
ブロック内に以下を加えてください (恐らく Apache を使っているでしょう)。
<var>/path/to/your/debian/mirror</var>
には実際にミラーを置いているディレクトリが入ります:</p>

<pre>
   Options +Indexes +SymlinksIfOwnerMatch
   IndexOptions NameWidth=* +SuppressDescription
</pre>

<p>これによりディレクトリインデクスが有効になり、symlink
追跡が効くようになります。ディレクトリインデクスでファイル名が切られなくなり、
(ほとんど存在しない) 説明は表示されなくなります。</p>

<p>Apache 1.3.x においては、以下のオプションを追加することもできます。</p>

<pre>
   DirectoryIndex .
</pre>

<p>このオプションは Apache 2.x では追加しないでください。</p>

<toc-add-entry name="submit">ミラーリストにミラーを追加するには</toc-add-entry>

<p>ミラーが構築できたら、<a href="submit">Debian に登録</a>して<a
href="list">ミラーリスト</a>に追加してもらうようにしてください。手続きは<a
href="submit">簡単なウェブフォーム</a>から行うことができます。</p>

<p>問題や疑問があれば、<email mirrors@debian.org> 宛にお願いします。</p>
