#use wml::debian::translation-check translation="1.3"
<define-tag description>バッファオーバフロー</define-tag>
<define-tag moreinfo>
<p>James Ralston さんにより、Simple Authentication and Security Layer の
フリーなライブラリ実装の sasl_encode64() 関数に特定条件で NULL 終端さ
れていない文字列を正しく扱えない欠陥が発見されました。この欠陥を、
cyrus-sasl2 が NULL 終端を要求する状況で攻撃することにより複数箇所で
バッファオーバフローが発生し、サービス拒否攻撃や任意のコードの実行な
どが可能です。</p>

<p>重要な注意 (US-CERT からの引用)
このパッチは現在欠陥のあるコードを修正しますが、これにより現在欠陥のな
いコードが動かなくなる可能性があります。以下は私の説明を明確化するため
の include/saslutil.h からの関数プロトタイプの引用です。</p>

<pre>/* base64 encode
* in -- input data
* inlen -- input data length
* out -- output buffer (will be NUL terminated)
* outmax -- max size of output buffer
* result:
* outlen -- gets actual length of output buffer (optional)
*
* Returns SASL_OK on success, SASL_BUFOVER if result won't fit
*/
LIBSASL_API int sasl_encode64(const char *in, unsigned inlen,
char *out, unsigned outmax,
unsigned *outlen);</pre>

<p>呼び出しもとのコードが base64 エンコードに必要な領域のサイズを事前に計
算して、正確な大きさのバッファを割り当て、そのバッファへのポインタを
*out として sasl_encode64() に渡している場合を考えます。そのコードがバ
ッファの NULL 終端を期待していない限り (つまり、strlen() のような文字
列操作関数を呼ばない場合) コードは動きますし、欠陥もありません。</p>

<p>一方このパッチ適用後は、同じコードが sasl_encode64() が SASL_BUFOVER を
返すようになるため、動かなくなります。</p>


<p>旧安定版 (oldstable) ディストリビューション (etch) では、この問題は cyrus-sasl2
のバージョン 2.1.22.dfsg1-8+etch1 で修正されています。</p>

<p>安定版 (stable) ディストリビューション (lenny) では、この問題は cyrus-sasl2 および cyrus-sasl2-heimdal の
バージョン 2.1.22.dfsg1-23+lenny1 で修正されています。</p>

<p>テスト版ディストリビューション (squeeze) では、この問題は近く修正予定です。</p>

<p>不安定版 (unstable) ディストリビューション (sid) では、この問題はバージョ
ン 2.1.23.dfsg1-1 の cyrus-sasl2 と cyrus-sasl2-heimdal で修正されていま
す。</p>


<p>cyrus-sasl2/cyrus-sasl2-heimdal パッケージを更新することを勧めます。</p>
</define-tag>

# do not modify the following line
#include "$(ENGLISHDIR)/security/2009/dsa-1807.data"
# $Id$
