#use wml::debian::translation-check translation="1.2"
<define-tag description>設計上の誤り</define-tag>
<define-tag moreinfo>
<p>設計上の誤りが、Debian
に収録されているクロスプラットフォームの分散ファイルシステム
OpenAFS に確認されています。</p>

<p>OpenAFS は伝統的にローカルのセルに対して setuid 
ファイルシステムのサポートを有効にしています。しかし、既存のプロトコルで OpenAFS
が利用できるのは暗号化と、ユーザが認証されている場合に完全性保護だけです。
認証されていないアクセスには完全性保護はありません。実際の結果としては、AFS 
の知識のある攻撃者が AFS FetchStatus コールを偽造し、AFS
クライアントホストに対して任意のバイナリファイルが
setuid されているように見せかけることが可能です。
それからバイナリを実行するように仕組むことができるなら、
特権の昇格に成功することも可能でしょう。</p>

<p>OpenAFS 1.3.81-3sarge2 ではこのデフォルトでの挙動を変更し、setuid
ファイルをローカルのセルを含めて全体で無効化しています。openafs-modules-source
パッケージからビルドされる AFS
カーネルモジュールが再ビルドされてカーネルにロードされるまで、
この変更は反映されないということに十分注意してください。一時的な対処としては、
カーネルモジュールをロードし直すことが可能になるまで、
以下のコマンドを root で実行し、ローカルのセルに対する
setuid サポートを手作業により無効化することも可能です。</p>

<p><kbd>fs setcell -cell &lt;ローカルのセル&gt; -nosuid</kbd></p>

<p>この更新の適用後、攻撃者が AFS
ファイルサーバの応答を改ざんするセキュリティリスクが
ないことが確信できる場合は以下のコマンドにより
setuid 状態を選択的に再有効化できますが、
これはインターネットから見えるサイトでは行うべきではありません。</p>

<p><kbd>fs setcell -cell &lt;ローカルのセル&gt; -suid</kbd></p>

<p>安定版 (stable) ディストリビューション (sarge)
では、この問題はバージョン 1.3.81-3sarge2 で修正されています。</p>

<p>不安定版 (unstable) ディストリビューション (sid)
および次期安定版 (stable) ディストリビューション (etch)
では、この問題はバージョン 1.4.2-6 で修正される予定です。</p>

<p>直ちに openafs パッケージをアップグレードすることを勧めます。</p>
</define-tag>

# do not modify the following line
#include "$(ENGLISHDIR)/security/2007/dsa-1271.data"
