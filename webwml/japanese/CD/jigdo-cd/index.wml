#use wml::debian::cdimage title="jigdo をつかって Debian CD イメージをダウンロードする" BARETITLE=true
#use wml::debian::translation-check translation="1.15"

<p>jigsaw (糸鋸) ダウンロード、あるいは短く <a href="http://atterer.net/jigdo/">jigdo</a>
は、将来 Debian CD イメージを配布する主となる方法として考えられたものです。
現在のところシステムは動作していますが、ダウンロードマネージャアプリケーションがまだ完成していないため、快適に使うことができるものにはなっていません。<p>

<p><strong>なぜ直接ダウンロードするより jigdo の方が良いのでしょうか?</strong>
なぜならば、<em>速いからです</em>。様々な理由から、通常の Debian
アーカイブをミラーしているサイトより CD
イメージをミラーしているサイトの方が遙かに少ないのです。この結果、CD
イメージをミラーからダウンロードしようとした場合、それがあなたの所から遠いだけでなく、時にリリース直後は過負荷になっている可能性が高くなります。
</p>

<p>もちろん、「通常の」Debian ミラーは CD イメージをおいていません。
それでは jigdo がどうやってそこからダウンロードするのかと言いますと、jigdo
は CD 中の全部のファイルを個別にダウンロードするのです。
次にダウンロードしたファイルを一つのファイルに集めて、CD
イメージと全く同じものを作成します。
ただし、これは舞台裏で行われていることであり、<em>あなたの</em>
すべきことは、ダウンロードツールに処理すべき "<tt>.jigdo</tt>"
ファイルの場所を教えることだけです。</p>

<p><strong>どのようなイメージが提供されているのでしょう?</strong></p>

<ul>

  <li>公式の jigdoファイル: <a
  href="http://cdimage.debian.org/~atterer/jigdo/">最新の「安定版」
  ディストリビューション</a>向け CD</li>

  <li>非公式の jigdoファイル: <a
  href="ftp://ftp.fsn.hu/pub/CDROM-Images/debian-unofficial/woody/jigdo/">\
  テスト版 (testing) ディストリビューション</a> CD, <em>毎日作成</em></li>

  <li>非公式の jigdoファイル: <a
  href="ftp://ftp.fsn.hu/pub/CDROM-Images/debian-unofficial/sid/jigdo/">\
  不安定版 (unstable) ディストリビューション</a> CD, <em>毎日作成</em></li>

  <li>非公式の jigdoファイル: <a
  href="ftp://ftp.fsn.hu/pub/CDROM-Images/debian-unofficial/woody-dvd/jigdo/">\
  テスト版 (testing) ディストリビューション</a> DVD, <em>毎日作成</em></li>

  <li>非公式の jigdoファイル: <a
  href="ftp://ftp.fsn.hu/pub/CDROM-Images/debian-unofficial/sid-dvd/jigdo/">\
  不安定版 (unstable) ディストリビューション</a> DVD, <em>毎日作成</em>
  <br>
  今のところ、DVD は Windows からダウンロードすることは
  <strong>できません</strong> !</li>

  <li>非公式の <a
  href="http://cdimage.debian.org/jigdo-area/"> pre-release/testing
  イメージのありか</a>。ここからのものを試す前に <a
  href="../faq/#mailing-list">メーリングリストに当たってください</a>。

</ul>

<p><strong>jigdo を使ってイメージをダウンロードする手順を教えてください</strong>
Linux を使っている場合: </p>

<ul>

  <li><tt>jigdo-file</tt> を含むパッケージをダウンロードします。jigdo-file
  は <a href="http://atterer.net/jigdo/">jigdo homepage</a>
  に様々な形で置かれています。パッケージには、<tt>jigdo-lite</tt>
  スクリプトが同封されています。</li>

  <li><tt>jigdo-lite</tt> スクリプトを実行します。処理する "<tt>.jigdo</tt>"
  ファイルの URL を聞かれますので、それに答えます
  (好みに応じてコマンドラインから URL を与えることもできます)。</li>

  <li>上に挙げてある場所のうちのお好みのものを選び、"<tt>.jigdo</tt>"
  ファイルの URL を入力してください。</li>

  <li>スクリプトの出力する指示に従ってください。
  すべてが上手くいけば、スクリプトは作成したイメージのチェックサムを計算して、それがもとのイメージと同じであることを報告し、終了します。</li>

</ul>

<p>Windows を使っている場合は、Debian CD イメージをダウンロードする手順は
<a href="http://cdimage.debian.org/~costar/jigdo/">jigdo-easy</a>
ページを参照下さい。</p>

<p>イメージをダウンロードして、CD に焼いた後は、<a
href="$(HOME)/releases/stable/installmanual">インストールのための詳しい情報</a>
を見るようにしてください。</p>

<p>jigdo は古い版の CD
イメージを提供されているイメージで更新することもできます。
この場合、変更されたもののみがダウンロードされます。
また、自前でローカルの Debian ミラーを走らせているところでは、ミラー URI
を聞かれた際に "file:" URL を指定することもできます。</p>

<p>GUI のダウンロードアプリケーションや、まだ実験段階の Windows
アプリケーション群を試したいなら <a href="http://atterer.net/jigdo/">jigdo homepage</a>
をご覧ください。
jigdo の開発に参加していただけるボランティアはいつでも大歓迎です。</p>

<hr>

<p><strong>jigdo で proxy サーバを使うようにするにはどうすればいいのでしょう?</strong></p>

<p>どのような proxy を使う場合でも、<tt>http_proxy</tt> および/または
<tt>ftp_proxy</tt> 環境変数に proxy サーバのアドレスを指定する必要があります。
Linux では、ホームディレクトリの <tt>.bashrc</tt> ファイルに
<tt>export&nbsp;http_proxy=http://myproxy:8088/</tt>
のような行を付け加えるのが一番手っ取り早いやりかたです。
jigdo-easy を Windows で使っている場合は、同様の行を <tt>jigdo-easy.sh</tt>
スクリプトの最初に足すのが一番簡単でしょう。</p>

<p><strong>あ痛ぁ! スクリプトがエラーで落ちてしまいました。これまでダウンロードした何百 MB は無駄になってしまうんですか?</strong></p>

<p>もちろん、「こういうことは起こってはならない」(tm)
んですが、様々な理由から大きな "<tt>.iso.tmp</tt>"
ファイルはすでに作成されているが、<tt>jigdo-lite</tt>
は問題を発見してダウンロードを再開しろと繰り返し伝えてくる、という状態になることがあります。
この場合、試せることが幾つかあります。</p>

<ul>

  <li>単にダウンロードを再開してリターンキーをたたいてみてください。
  たぶん一部のファイルがタイムアウトやその他の一時的なエラーでダウンロードできなかったのでしょう。
  再試行によって、不足したファイルをダウンロードできるかもしれません。</li>

  <li>別のミラーを試してみます。一部の Debian ミラーサイトは更新の同期が多少狂っています。
  別のミラーは、あなたが指定したミラーではすでに消されたファイルをまだ持っているかもしれませんし、指定したミラーにまだない更新済みのファイルを持っていることもあります。</li>

  <li>イメージの不足部分を <tt><a href="http://rsync.samba.org/">rsync</a></tt>
  で回復してみてください。最初にダウンロードしようとしているイメージの正しい
  rsync URL を見つける必要があります。rsync イメージアクセスを提供しているサーバを
  <a href="../mirroring/rsync-mirrors">安定版 (stable)</a> か
  <a href="../http-ftp/#testing">テスト版 (testing) </a>
  から選び、正しいパスとファイル名を決めます。ディレクトリの内容一覧は、
  <tt>rsync&nbsp;rsync://cdimage.debian.org/debian-cd/</tt>
  コマンドで得られます。

  <br>次に、<tt>jigdo-lite</tt> の一時ファイルをリネームして "<tt>.tmp</tt>"
  拡張子を削除し、リモートの URL とローカルのファイル名の両方を以下のように
  rsync に与えます。
    <tt>rsync&nbsp;rsync://server.org/path/binary-i386-1.iso
  binary-i386-1.iso</tt>

  <br>rsync の <tt>--verbose</tt> と <tt>--progress</tt>
  スイッチで状態情報を得られます。また、<tt>--block-size=8192</tt>
  で速度が改善されます。試してみてください。</li>

  <li>これら全てが失敗したとしても、ダウンロードしたデータはまだ失われたわけではありません。
  Linux 下では、それまでにダウンロードしたファイルを、<tt>.tmp</tt>
  ファイルを loop ファイルシステムとしてマウントすることでアクセスでき、
  またそれを新たに作成する jigdo
  ファイルを作成する際に再利用することも出来ます
  (例えば、ダウンロードに失敗したのが毎日作成のスナップショットだった場合、
  最新のスナップショットを作成する際、このファイルを利用できます)。
  具体的には、まず失敗したダウンロード結果の置かれたディレクトリで root
  になって、以下のコマンドを実行してください。
  <tt>mkdir&nbsp;mnt;
  mount&nbsp;-t&nbsp;iso9660&nbsp;-o&nbsp;loop&nbsp;*.tmp&nbsp;mnt</tt>
  次に、新規のダウンロードは別のディレクトリを使って行い、"Files to scan"
  プロンプトがでたときに <tt>mnt</tt> ディレクトリを指定してください。</li>

</ul>

