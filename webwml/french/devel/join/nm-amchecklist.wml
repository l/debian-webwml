#use wml::debian::template title="Liste de contrôle pour les responsables de candidature"
#use wml::debian::translation-check translation="1.27" maintainer="Nicolas Bertolissio"

<ul>
  <li><a href="#identification">vérification de l'identité</a>&nbsp;;</li>
  <li><a href="#philosophy">philosophie et procédures</a>&nbsp;;</li>
  <li><a href="#skills">compétences et tâches</a>&nbsp;;</li>
  <li><a href="#finalreport">rapport final d'un responsable de candidature au
      comité du nouveau responsable</a>&nbsp;;</li>
  <li><a href="#onhold">comment mettre un candidat en attente</a>&nbsp;;</li>
  <li><a href="#gpgversion">compatibilité des versions de GnuPG</a>&nbsp;;</li>
  <li><a href="#signverify">vérification des signatures de clef</a>.</li>
</ul>

<p>
Voir également le <a href="nm-amhowto">mini-guide pour les responsables de
candidature</a>.
</p>


<h2><a name="identification">Vérification de l'identité</a></h2>

<p>
Si le candidat fournit une clef publique signée par un <a
href="./newmaint#Member">membre</a> Debian en place, alors le processus
d'identification est accompli. La pièce d'identité du candidat ne sera
nécessaire que si la clef n'est pas signée par un membre Debian. Veuillez vous
reporter à la page <a href="./nm-step2">identification</a> de la liste de
contrôle.
</p>

<p>
Il existe un problème de compatibilité avec certaines versions de GnuPG.
Veuillez vous reporter à la section <a href="#gpgversion">compatibilité de
version GnuPG</a>.
</p>

<p>
Veuillez consulter également <a href="#signverify">ces notes</a> pour
d'importantes informations concernant la vérification de signatures.
</p>

<p>
Si votre candidat a besoin de l'ancienne clef pour vérification, il peut
l'envoyer avec la nouvelle clef.
</p>

<p>
De même, si le candidat possède uniquement une clef PGP signée par un membre
Debian, il peut l'utiliser pour vérification.
</p>

<p>
Des options de vérification supplémentaires peuvent être appliquées s'il existe
des doutes à propos d'une information particulière ou de la personne l'ayant
fournie. Aux États-Unis certains sites internet font de la «&nbsp;résolution
inverse&nbsp;» à partir d'un numéro de téléphone et vous fournissent ainsi le
nom et l'adresse de l'abonné. Utiliser ces services pour faire des
vérifications croisées sur les informations fournies par le candidat peut faire
émerger des incohérences, mais l'existence de ces incohérences n'implique pas
le rejet automatique du candidat. Dans ces situations, les négociations
devraient trouver leur place.
</p>

<p>
Par exemple, si la recherche grâce à la résolution inverse fournit un autre nom
que celui du candidat, demandez au candidat quel numéro de téléphone il vous a
donné. Il peut vous répondre&nbsp;: «&nbsp;C'est le numéro de mon
colocataire&nbsp;» ou «&nbsp;C'est le numéro de mon père&nbsp;» ou encore
«&nbsp;C'est le numéro de ma résidence universitaire&nbsp;» ce qui vous donne
alors un autre contact. Si vous pouvez vérifier l'information fournie par le
candidat, le contact nécessaire est obtenu.
</p>

<p>
Si, du fait d'une incertitude, il ne manque plus qu'un contact au candidat,
(c.-à-d. le contact dit qu'il ne pense pas connaître cette personne), il est
possible, en dernier recours, d'utiliser le FAI du candidat pour résoudre le
problème. La plupart du temps, le candidat devra autoriser son FAI à donner les
informations sur son adresse et son numéro de téléphone.  Contactez ensuite le
FAI pour lui demander confirmation des informations.
</p>


<h2><a name="philosophy">Philosophie et procédures</a></h2>

<p>
Il n'y a pas grand chose à dire sur la vérification de la philosophie du
candidat. Voir le paragraphe du  <a href="nm-amhowto#ap3">mini-guide</a> qui
parle de cela.
</p>

<p>
Pour s'assurer que les candidats connaissent les procédures utilisées dans
Debian, on pourra vérifier qu'ils savent ce que dit la «&nbsp;Référence du
développeur&nbsp;» à propos d'une procédure en particulier, par exemple comment
fermer un bogue, faire des NMU, etc.
</p>


<h2><a name="skills">Compétences et tâches</a></h2>

<p>
Si un candidat rejoint Debian en tant qu'<i>empaqueteur</i>, il doit avoir un
paquet présent dans l'archive Debian, ce qu'il peut accomplir grâce au
programme de parrainage. Le responsable des comptes des développeurs
n'acceptera <strong>pas</strong> les candidats qui ont <em>peut-être</em>
l'intention de mettre quelque chose en paquet à une date non encore déterminée.
</p>

<p>
Si un candidat rejoint Debian <em>pour rédiger de la documentation</em>, il est
également recommandé qu'il ait une vision lucide du type de documents à écrire
ou à améliorer dans Debian (la vérification de documentation éventuellement
rédigée auparavant est envisageable).
</p>


<h2><a name="finalreport">Le rapport final d'un responsable de candidature au
    comité du nouveau responsable</a></h2>

<p>
Le rapport final d'un responsable de candidature sur un candidat comporte deux 
étapes&nbsp;:
</p>

<ol>
  <li>un courrier électronique au <a href="./newmaint#Committee">comité du
      nouveau responsable</a> expliquant comment le candidat a passé avec
      succès les étapes de la liste de contrôle&nbsp;;</li>
  <li>le même rapport envoyé au <a href="./newmaint#FrontDesk">secrétariat 
      &lt;new-maintainer@debian.org&gt;</a> et au <a href="./newmaint#DAM">\
      responsable des comptes des développeurs
      &lt;da-manager@debian.org&gt;</a> en y incluant en sus&nbsp;:
      <ul>
	 <li>la clef publique GPG du candidat <a href="#keynote">[1]</a> (la
	     clef RSA/IDEA créée avec PGP n'est pas acceptée pour l'instant)
	     afin de l'intégrer dans le trousseau de clefs Debian,
	     <ul>
	       <li>si la clef GPG ci-dessus n'est signée par aucun membre
		   actuel de Debian, mais que le candidat possède la clef PGP
		   signée, alors cette clef publique PGP peut être utilisée
		   pour identification,</li>
	       <li>si le candidat ne possède pas de clef signée par un membre
		   actuel de Debian, alors une pièce d'identité numérisée et
		   signée par ses soins peut être utilisée en guise
		   d'identification,</li>
	     </ul>
         </li>
	 <li>les comptes rendus des discussions avec le candidat pour valider
	     les étapes 2-4 de <a href="./nm-checklist">la liste de
	     contrôle</a>,</li>
	 <li>la demande du candidat pour son nom de compte chez Debian (utilisé
	     dans &lt;compte&gt;@debian.org) <a href="#account">[2]</a>,</li>
	 <li>la demande du candidat pour une redirection d'une adresse de
	     courrier sur &lt;compte&gt;@debian.org.</li>
      </ul>
      <p>
      <a name="keynote">[1] Les candidats ne doivent PAS avoir qu'une clef
      signée (absolument PAS).</a> Vous pouvez le vérifier en effectuant sur
      leur clef «&nbsp;gpg --list-key &lt;nom du candidat ou ID
      clef&gt;&nbsp;».  Si vous obtenez uniquement
      «&nbsp;&lt;nombre&gt;D/&nbsp;» (généralement 1024) et pas
      «&nbsp;&lt;nombre&gt;E/IDclef&nbsp;»,
      «&nbsp;&lt;nombre&gt;e/IDclef&nbsp;», ni
      «&nbsp;&lt;nombre&gt;g/IDclef&nbsp;», alors c'est une clef signée DSA.
      Dans ce cas vous, responsable de candidature, devez demander à votre
      candidat de générer une clef correcte. Ceci est indispensable pour être
      enregistré.
      </p>
      <p>
      <a name="account">[2]</a> Les noms de comptes doivent comporter au
      minimum 2&nbsp;caractères, 3&nbsp;serait mieux.
      </p>
  </li>
</ol>

<p>
Ceci achève la liste des obligations du responsable de candidature dans le
processus de candidature. <a href="./newmaint#DAM">Le responsable des comptes
des développeurs</a> doit à présent décider si la candidature s'est terminée
correctement.
</p>


<h2><a name="onhold">Comment mettre un candidat en attente</a></h2>

<p>
Contexte&nbsp;: actuellement, le meilleur moyen de mettre la candidature
«&nbsp;en attente&nbsp;» est de la rejeter avec commentaires. Lorsque le
candidat est mieux préparé à travailler sur sa candidature, il n'a qu'à envoyer
une demande à son ancien responsable de candidature.
</p>
<p>
À noter&nbsp;: tous les refus des responsables de candidature sont procéduraux.
À tout moment, quand le candidat sent qu'il remplit mieux les conditions pour
la candidature, il est libre de postuler à nouveau, et de réessayer.
</p>

<dl>
  <dt>Premièrement, quand une candidature doit-elle être mise en attente par un
      responsable de candidature&nbsp;?</dt>
   <dd>
     <ul>
       <li>Quand un élément de la liste de contrôle n'est pas
           satisfait&nbsp;;</li>
       <li>Quand le candidat a été inactif pendant trop longtemps.</li>
     </ul>
   </dd>
  <dt>Deuxièmement, comment un responsable de candidature peut-il le
      faire&nbsp;?</dt>
   <dd>
     <ul>
       <li>Tout d'abord laissez le champ «&nbsp;AM Confirms Assignment&nbsp;» à
	   «&nbsp;yes&nbsp;», ne changez pas ce champ à «&nbsp;no&nbsp;» ce qui
	   voudrait dire qu'un autre responsable de candidature doit être
	   affecté à ce candidat, ce qui n'est pas le cas&nbsp;;</li>
       <li>Ensuite réglez le champ «&nbsp;AM approves&nbsp;» sur
	   «&nbsp;no&nbsp;», et donnez des détails sur le refus dans le champ
	   «&nbsp;Application Manager Comments&nbsp;».</li>
     </ul>
   </dd>
</dl>


<p>
À tous les responsables de candidature&nbsp;: libre à vous de mettre en attente
tout candidat qui ne serait ni prêt, ni volontaire, ni capable de poursuivre
avec ténacité sa candidature, au même titre qu'un autre qui n'aurait pas les
compétences ou les intentions requises par la liste de contrôle.
</p>


<h2><a name="gpgversion">Problème de compatibilité de version de GnuPG avec la
    gestion des clefs ElGamal</a></h2>
<p>
&lt;Voici une note de notre responsable des comptes des développeurs à propos
de problèmes d'incompatibilité avec GnuPG.&gt;
</p>

<blockquote>

<p>
Malheureusement, du fait d'un bogue dans la gestion des clefs ElGamal de GnuPG,
il existe maintenant un problème déplaisant de compatibilité.
</p>

<p>
La version posant problème&nbsp;: les clefs ElG générées avec
GnuPG&nbsp;&lt;=&nbsp;1.0.1 peuvent générer anormalement de mauvaises
signatures quand elles sont vérifiées avec GnuPG&nbsp;&gt;=&nbsp;1.0.2. Et
<em>vice versa</em>, les clefs ElG générées avec GnuPG&nbsp;&gt;=&nbsp;1.0.2
peuvent générer anormalement de mauvaises signatures quand elles sont vérifiées
avec GnuPG&nbsp;&lt;=&nbsp;1.0.1.
</p>

<p>
La version sans problème&nbsp;: tous les responsables de candidature doivent
mettre à jour leur version de GnuPG à la version&nbsp;1.0.4 (elle se trouve
dans Debian&nbsp;2.2&nbsp;r2 et dans Woody. À noter que la version&nbsp;1.0.3
comporte également des bogues, et quiconque utilise GnuPG devrait mettre à jour
à la version&nbsp;1.0.4)&nbsp;; si vous rencontrez des problèmes pour vérifier
les signatures d'un candidat, essayez d'ajouter
«&nbsp;--emulate-md-encode-bug&nbsp;» à la ligne de commande. Si cela résout le
problème, c'est que votre candidat possède une clef ElG boguée. Faites-lui
installer GnuPG&nbsp;1.0.4 et générer une nouvelle clef (s'il a besoin de
l'ancienne pour vérification, joignez simplement les deux dans le rapport à
da-manager@).
</p>

</blockquote>


<h2><a name="signverify">Notes importantes concernant la vérification de
    signatures</a></h2>

<p>
Il est <b>essentiel</b> que vous utilisiez --check-sigs pour vérifier les
signatures de clefs des candidats et <b>non pas</b> --list-sigs, ceci ne
validant pas les signatures.
</p>

<p>
Rappelez-vous également qu'il est toujours mieux de faire référence à
«&nbsp;l'empreinte digitale&nbsp;» (<em>fingerprint</em>) d'une clef plutôt
qu'à l'identifiant court, la probabilité d'une collision étant nettement plus
faible du fait du plus grand univers.
</p>

<hr>

<a href="newmaint">Retour au coin du nouveau responsable</a>
