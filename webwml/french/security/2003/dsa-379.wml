#use wml::debian::translation-check translation="1.6" maintainer="DFS Task Force"
<define-tag description>Plusieurs vulnérabilités</define-tag>
<define-tag moreinfo>
<p>Alexander Hvostov, Julien Blache et Aurelien Jarno ont découvert
plusieurs problèmes liés à la sécurité dans le paquet sane-backends, qui
contient une bibliothèque API pour les scanners, incluant un
démon pour scanner (dans le paquet libsane) qui peut être exploité
à distance. Ces problèmes permettent à un attaquant distant de provoquer
une faute de segmentation et/ou d'utiliser une quantité arbitraire de
mémoire. L'attaque réussit toujours, même si l'ordinateur de l'attaquant
n'est pas listé dans saned.conf.</p>

<p>Vous êtes vulnérable seulement si vous lancez saned à
partir de xinetd ou d'inetd. Si les entrées dans le fichier de configuration
de xinetd ou inetd sont commentées ou n'existent pas, il n'y a pas de
danger.</p>

<p>Essayez «&nbsp;<kbd>telnet localhost 6566</kbd>&nbsp;» sur le serveur
qui lance saned. Si vous obtenez <tt>connection refused</tt>, saned ne
fonctionne pas et vous êtes hors de danger.</p>

<p>Le projet <i>Common Vulnerabilities and Exposures</i> a identifié les
problèmes suivants&nbsp;:

<ul>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0773">CAN-2003-0773</a>&nbsp;:

<p>saned vérifie l'identité (l'adresse IP) de l'hôte distant seulement
   après la mise en place de la première communication (SANE_NET_INIT).
   Ainsi, tout le monde peut envoyer ce RPC, même si l'hôte distant
   n'a pas la permission de scanner (quand il n'est pas listé dans
   saned.conf).</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0774">CAN-2003-0774</a>&nbsp;:

<p>saned ne vérifie pas les erreurs partout dans le code. Ainsi, les
   fins de connexion sont détectées très tard. Si la coupure de la connexion
   n'est pas détectée, l'accès au tampon de lien interne laisse les limites de
   la mémoire allouée. Ainsi, de la mémoire aléatoire «&nbsp;après&nbsp;»
   le tampon de lien est lue, ce qui est suivi par une faute de
   segmentation.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0775">CAN-2003-0775</a>&nbsp;:

<p>Si saned s'attend à des chaînes de caractères, il alloue avec malloc
   la mémoire nécessaire pour enregistrer la chaîne complète lorsqu'il
   a reçu la taille de cette chaîne. Si la connexion est coupée avant
   de transmettre la taille, malloc réservera une taille arbitraire de
   mémoire. En fonction de cette taille et de la quantité de mémoire
   disponible, soit malloc plante (&ndash;&gt;&nbsp;saned s'arrête
   élégamment), soit une quantité énorme de mémoire est allouée.
   L'utilisation de la mémoire d'échange et des mesures OOM peuvent
   apparaître, en fonction du noyau.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0776">CAN-2003-0776</a>&nbsp;:

<p>saned ne vérifie pas la validité des nombres RPC qu'il reçoit
   avant d'obtenir les paramètres.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0777">CAN-2003-0777</a>&nbsp;:

<p>Si les messages de débogage sont activés et une connexion coupée,
   les chaînes qui ne sont pas terminées par <i>null</i> peuvent
   être affichées et une faute de segmentation peut avoir lieu.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0778">CAN-2003-0778</a>&nbsp;:

<p>Il est possible d'allouer une quantité arbitraire de mémoire sur le
   serveur lançant saned, même si la connexion n'est pas coupée. Pour le
   moment, cela ne peut pas être facilement corrigé, si l'on en croit
   l'auteur. Il vaut mieux limiter la quantité totale de mémoire
   que saned peut utiliser (ulimit).</p></li>
</ul>

<p>Pour la distribution stable (<em>Woody</em>), ce problème a été
corrigé dans la version&nbsp;1.0.7-4.</p>

<p>Pour la distribution instable (<em>Sid</em>), ce problème a été corrigé
dans les versions&nbsp;1.0.11-1 et suivantes.</p>

<p>Nous vous recommandons de mettre à jour vos paquets libsane.</p>
</define-tag>

# do not modify the following line
#include "$(ENGLISHDIR)/security/2003/dsa-379.data"
# $Id$
