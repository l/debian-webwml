#use wml::debian::translation-check translation="1.7" maintainer="Simon Paillard"
<define-tag description>Plusieurs vulnérabilités</define-tag>
<define-tag moreinfo>
<p>Plusieurs vulnérabilités locales et distantes ont été découvertes dans le
noyau Linux, qui pouvaient permettre un déni de service ou l'exécution de code
arbitraire. Le projet «&nbsp;Common Vulnerabilities and Exposures&nbsp;» a
identifié les problèmes suivants&nbsp;:</p>

<ul>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1017">CVE-2004-1017</a>

    <p>Plusieurs dépassements dans le pilote io_edgeport pouvaient être
    utilisés pour mener une attaque par déni de service.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0124">CVE-2005-0124</a>

    <p>Bryan Fulton a signalé un bogue de vérification des limites dans la
    fonction coda_pioctl, qui pouvait permettre aux utilisateurs locaux
    d'exécuter du code arbitraire ou de provoquer un déni de service.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0449">CVE-2005-0449</a>
    
    <p>Une erreur dans la fonction skb_checksum_help() issue de netfilter
    permettait de contourner les règles de filtrage des paquets ou de provoquer
    un déni de service.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2457">CVE-2005-2457</a>

    <p>Tim Yamin a découvert que les entrées n'étaient pas correctement
    vérifiées par le pilote zisofs destiné aux systèmes de fichiers ISO
    compressés, ce qui permettait des attaques par déni de service en utilisant
    des images ISO malveillantes.</p></li>
    
<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2490">CVE-2005-2490</a>

    <p>Un dépassement de tampon dans la fonction sendmsg() permettait aux
    utilisateurs locaux d'exécuter du code arbitraire.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2555">CVE-2005-2555</a>

    <p>Herbert Xu a découvert que la fonction setsockopt() n'était pas
    restreinte aux utilisateurs et processus avec le droit CAP_NET_ADMIN, ce
    qui permettait à des attaquants de manipuler les politiques IPSEC et de
    mener des attaques par déni de service.</p></li>
    
<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2709">CVE-2005-2709</a>

    <p>Al Viro a découvert une condition de concurrence dans la gestion
    <em>via</em> /proc des périphériques de réseau. Un attaquant local pouvait
    exploiter une référence bancale après l'arrêt de l'interface, afin de
    provoquer un déni de service et peut-être d'exécuter du code dans l'espace
    noyau.</p></li> 

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2800">CVE-2005-2800</a>

    <p>Jan Blunck a découvert que des lectures répétées en échec de
    /proc/scsi/sg/devices provoquaient des fuites de mémoire, permettant
    une attaque par déni de service.</p></li>
    
<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2973">CVE-2005-2973</a>
 
    <p>Tetsuo Handa a découvert que la fonction udp_v6_get_port() du code IPv6
    pouvait être entraînée dans une boucle sans fin, permettant une attaque par
    déni de service.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3044">CVE-2005-3044</a>

    <p>Vasiliy Averin a découvert que les compteurs de référence des fonctions
    sockfd_put() et fput() pouvaient être amenés à se chevaucher, ce qui
    permettait une attaque par déni de service en utilisant un déférencement de
    pointeur nul.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3053">CVE-2005-3053</a>

    <p>Eric Dumazet a découvert que l'appel système set_mempolicy() acceptait
    une valeur négative pour premier paramètre, déclenchant une réponse BUG().
    Ceci permettait une attaque par déni de service.</p></li>
    
<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3055">CVE-2005-3055</a>

    <p>Harald Welte a découvert que si un processus délivrait une requête URB
    («&nbsp;USB Request Block&nbsp;») à un périphérique et terminait avant la
    fin de l'URB, un pointeur bancal serait déréférencé. Ceci pouvait être
    utilisé pour provoquer un déni de service.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3180">CVE-2005-3180</a>

    <p>Pavel Roskin a découvert que le pilote des cartes sans-fils Orinoco ne
    nettoyait pas ses tampons correctement. Ceci pouvait mener à la fuite
    d'informations sensibles vers l'espace utilisateur.</p></li>
    
<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3181">CVE-2005-3181</a>

    <p>Robert Derr a découvert que le sous-système d'audit utilisait une
    fonction incorrecte pour libérer la mémoire, ce qui permettait une attaque
    par déni de service.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3257">CVE-2005-3257</a>

    <p>Rudolf Polzer a découvert que le noyau ne restreignait pas correctement
    l'accès à l'ioctl KDSKBSENT, ce qui pouvait peut-être permettre
    l'usurpation de droits.</p></li>
    
<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3356">CVE-2005-3356</a>

    <p>Doug Chapman a découvert que l'appel système mq_open pouvait être amené
    à décrémenter deux fois un compteur interne, ce qui permettait de provoquer
    un déni de service par un arrêt inopiné du noyau («&nbsp;kernel
    panic&nbsp;»).</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3358">CVE-2005-3358</a>

    <p>Doug Chapman a découvert que passer un masque à 0 comme paramètre de
    l'appel système set_mempolicy() provoquait un arrêt inopiné du noyau
    («&nbsp;kernel panic&nbsp;»), ce qui permettait une attaque par déni de
    service.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3783">CVE-2005-3783</a>

    <p>Le code de ptrace qui utilise CLONE_THREAD n'utilisait pas l'identifiant
    de groupe du processus léger pour déterminer si l'appelant est attaché ou
    pas à lui-même. Ceci permettait une attaque par déni de service.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3784">CVE-2005-3784</a>

    <p>La fonctionnalité de nettoyage automatique des processus fils incluait
    des processus tracés avec ptrace(), ce qui permettait un déni de service en
    utilisant des références bancales.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3806">CVE-2005-3806</a>

    <p>Yen Zheng a découvert que le code pour le champ d'étiquette de flux
    (&nbsp;flow label&nbsp;) dans IPv6 ne modifiait pas la bonne variable, ce
    qui pouvait provoquer la corruption de la mémoire et un déni de
    service.</p></li>
    
<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3847">CVE-2005-3847</a>

    <p>Il a été découvert qu'un processus temps réel utilisant des processus
    légers pouvait être mis dans une situation d'interblocage, en lui envoyant
    le signal SIGKILL pendant qu'il sauvegardait son état mémoire («&nbsp;core
    dump&nbsp;»). Cela permettait une attaque par déni de service.</p></li>
    
<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3848">CVE-2005-3848</a>

    <p>Ollie Wild a découvert une fuite mémoire dans la fonction
    icmp_push_reply(), qui permettait de provoquer un déni de service par la
    consommation de mémoire.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3857">CVE-2005-3857</a>

    <p>Chris Wright a découvert que l'allocation excessive de verrous dans la
    couche VFS pouvait épuiser la mémoire et remplir entièrement le système de
    journalisation. ce qui permettait une attaque par déni de service.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3858">CVE-2005-3858</a>

    <p>Patrick McHardy a découvert une fuite mémoire dans la fonction
    ip6_input_finish() du code IPv6, qui permettait une attaque par déni de
    service.</p></li>
 
<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4605">CVE-2005-4605</a>

    <p>Karl Janmar a découvert que l'erreur due à un mélange de variables de
    types signés et non signés dans le code de procfs pouvait être exploité
    pour lire la mémoire du noyau, ce qui pouvait mener à la divulgation
    d'informations sensibles.</p></li>
    
<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4618">CVE-2005-4618</a>

    <p>Yi Ying a découvert que sysctl n'appliquait pas correctement la taille
    d'un tampon, ce qui permettait une attaque par déni de service.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-0095">CVE-2006-0095</a>

    <p>Stefan Rompf a découvert que dm_crypt ne nettoyait pas une structure
    interne avant de la libérer, ce qui pouvait mener à la divulgation
    d'informations sensibles.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-0096">CVE-2006-0096</a>

    <p>Les vérifications des droits effectuées par le pilote SDLA lors d'une
    mise à jour de microcode étaient insuffisantes.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-0482">CVE-2006-0482</a>

    <p>Ludovic Courtes a découvert que get_compat_timespec() ne vérifiait pas
    correctement les entrées, ce qui permettait une attaque locale par déni de
    service.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-1066">CVE-2006-1066</a>

    <p>La fonction ptrace() sur l'architecture ia64 permettait une attaque
    locale de déni de service si le noyau était préemptif.</p></li>

</ul>

<p>Le tableau suivant explique pour chaque architecture quelle version contient
la correction&nbsp;:</p>

<div class="centerdiv"><table cellspacing="0" cellpadding="2">
<tr><th>                           </th><th>Debian&nbsp;3.1 (<em>Sarge</em>)</th></tr>
<tr><td>Source                     </td><td>2.6.8-16sarge2</td></tr>
<tr><td>architecture Alpha         </td><td>2.6.8-16sarge2</td></tr>
<tr><td>architecture AMD64         </td><td>2.6.8-16sarge2</td></tr>
<tr><td>architecture HP Precision  </td><td>2.6.8-6sarge2</td></tr>
<tr><td>architecture Intel&nbsp;IA-32 </td><td>2.6.8-16sarge2</td></tr>
<tr><td>architecture Intel&nbsp;IA-64 </td><td>2.6.8-14sarge2</td></tr>
<tr><td>architecture Motorola&nbsp;680x0</td><td>2.6.8-4sarge2</td></tr>
<tr><td>architecture PowerPC       </td><td>2.6.8-12sarge2</td></tr>
<tr><td>architecture IBM&nbsp;S/390</td><td>2.6.8-5sarge2</td></tr>
<tr><td>architecture Sun Sparc     </td><td>2.6.8-15sarge2</td></tr>
</table></div>

<p>Le tableau suivant liste les paquets supplémentaires qui ont été
reconstruits à des fins de compatibilité ou pour tirer parti de cette mise à
jour&nbsp;:</p>

<div class="centerdiv"><table cellspacing="0" cellpadding="2">
<tr><th>                        </th><th>Debian&nbsp;3.1 (<em>Sarge</em>)</th></tr>
<tr><td>kernel-latest-2.6-alpha </td><td>101sarge1</td></tr>
<tr><td>kernel-latest-2.6-amd64 </td><td>103sarge1</td></tr>
<tr><td>kernel-latest-2.6-hppa  </td><td>2.6.8-1sarge1</td></tr>
<tr><td>kernel-latest-2.6-sparc </td><td>101sarge1</td></tr>
<tr><td>kernel-latest-2.6-i386  </td><td>101sarge1</td></tr>
<tr><td>kernel-latest-powerpc   </td><td>102sarge1</td></tr>
<tr><td>fai-kernels             </td><td>1.9.1sarge1</td></tr>
<tr><td>hostap-modules-i386     </td><td>0.3.7-1sarge1</td></tr>
<tr><td>mol-modules-2.6.8       </td><td>0.9.70+2.6.8+12sarge1</td></tr>
<tr><td>ndiswrapper-modules-i386</td><td>1.1-2sarge1</td></tr>
</table></div>

<p>Nous vous recommandons de mettre à jour votre paquet de noyau immédiatement
et de réamorcer la machine. Si vous avez construit une noyau personnalisé en
utilisant le paquet des sources du noyau, vous devez le reconstruire pour tirer
parti de ces corrections.</p>

<p>Cette mise à jour introduit une changement dans l'interface binaire du
noyau, qui a nécessité la reconstruction des paquets pour noyaux affectés. Si
vous utilisez des ajouts sous forme de rustines, vous devrez également les
reconstruire. Enfin, en raison d'un changement dans le nom des paquets, vous
devez utiliser <tt>apt-get dist-upgrade</tt> pour mettre à niveau votre
système.</p>

</define-tag>

# do not modify the following line
#include "$(ENGLISHDIR)/security/2006/dsa-1017.data"
