#use wml::debian::translation-check translation="1.3" maintainer="Thomas Vincent"
<define-tag description>Dépassement de tampon</define-tag>
<define-tag moreinfo>
<p>James Ralston a découvert que la fonction sasl_encode64() de cyrus-sasl2,
une bibliothèque libre implémentant la couche d'authentification simple et de sécurité
(« Simple Authentication and Security Layer ), souffre d'une terminaison nulle manquante
dans certaines situations. Cela cause plusieurs dépassements de tampons dans les 
situations où cyrus-sasl2 lui-même requiert que la chaîne soit terminée par un caractère
null, ce qui peut conduire à un déni de service ou l'exécution de code arbitraire.</p>

<p>Note importante (citation de US-CERT) :
Bien que cette rustine corrige le code vulnérable pour le moment, il casser du code
non-vulnérable. Voici un prototype de fonction depuis
include/saslutil.h pour clarifier mon explication :</p>

<pre>/* base64 encode
* in -- donnée d'entrée
* inlen -- longueur de la donnée d'entrée
* out -- tampon de sortie (sera terminé par un caractère nul)
* outmax -- taille maximale du tampon de sortie
* résultat:
* outlen -- longueur du tampon de sortie (optionnel)
*
* Renvoie SASL_OK en cas de succès, SASL_BUFOVER si le resultat ne correspond pas
*/
LIBSASL_API int sasl_encode64(const char *in, unsigned inlen,
char *out, unsigned outmax, unsigned *outlen);</pre>

<p>Envisageons un scénario où le code d'appel a été écrit de façon à ce qu'il
calcule d'avance la taille exacte requise pour l'encodage base64, puis
alloue un tampon de cette taille précise et passe un pointeur du tampon dans
sasl_encode64() en tant que paramètre *out. Tant que ce code ne prévoit pas
que le tampon se termine par un caractère nul (n'appelle aucune fonction de 
traitement de chaîne comme strlen(), par exemple), le code fonctionne et ne sera
pas vulnérable.</p>

<p>À partir de l'application de ce correctif, le même code sera cassé car sasl_encode64()
renverra SASL_BUFOVER.</p>


<p>Pour la distribution oldstable (Etch), ce problème a été corrigé dans la version 2.1.22.dfsg1-8+etch1 de cyrus-sasl2.</p>

<p>Pour la distribution stable (Lenny), ce problème a été corrigé dans la version 2.1.22.dfsg1-23+lenny1 de cyrus-sasl2 et cyrus-sasl2-heimdal.</p>

<p>Pour la distribution testing (Squeeze), ce problème sera corrigé prochainement.</p>

<p>Pour la distribution unstable (Sid), ce problème a été corrigé dans la version 2.1.23.dfsg1-1 de cyrus-sasl2 et cyrus-sasl2-heimdal.</p>


<p>Nous vous recommandons de mettre à jour vos paquets cyrus-sasl2/cyrus-sasl2-heimdal.</p>
</define-tag>

# do not modify the following line
#include "$(ENGLISHDIR)/security/2009/dsa-1807.data"
# $Id$
