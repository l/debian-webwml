<!DOCTYPE book PUBLIC "-//Davenport//DTD DocBook V3.0//EN">
<book lang="fr">
  <bookinfo>
    <title>
      Cr&eacute;er un paquet Debian
    </title>
    <authorgroup>
      <author>
	<firstname>
	  Jaldhar
	</firstname>
	<surname>
	  Vyas 
	</surname>
	<contrib>
	  Auteur initial
	</contrib>
      </author>
      <othercredit>
	<firstname>
	  Fr&eacute;d&eacute;ric
	</firstname>
	<surname>
	  Dumont
	</surname>
	<contrib>
	  Traducteur de la version fran&ccedil;aise
	</contrib>
      </othercredit>
    </authorgroup>
  </bookinfo>
  <preface>
    <title>
      Note du traducteur
    </title>
    <para>
      Ceci est la version fran&ccedil;aise de "Making a Debian
      Package". La version originale peut &ecirc;tre trouv&eacute;e &agrave; <ulink url="http://www.braincells.com/debian/make_package/">http://www.braincells.com/debian/make_package/</ulink>.
      L'auteur orginal, Jaldhar Vyas peut &ecirc;tre joint &agrave; <ulink url="mailto:jaldhar@debian.org">jaldhar@debian.org</ulink>
      et le traducteur, Fr&eacute;d&eacute;ric Dumont, &agrave; <ulink url="mailto:frederic.dumont@gate71.be">frederic.dumont@gate71.be</ulink>
    </para>
  </preface>
  <chapter>
    <title>
      Introduction et premiers pas
    </title>
    <para>
      Ce qui fait de Debian une distribution de si haut niveau est,
      entre autre, son syst&egrave;me de paquet. Bien qu'il y aie une grande
      quantit&eacute; de logiciels disponibles au format Debian, il est
      parfois n&eacute;cessaire d'installer des logiciels qui ne le sont
      pas. Vous vous &ecirc;tes peut-&ecirc;tre demand&eacute; comment faire vos propres
      paquets, et vous pensez que c'est difficile. J'ai moi-m&ecirc;me (NdT
      : c'est l'auteur qui parle, pas moi) commenc&eacute; &agrave; travailler avec
      les paquets Debian, et j'ai &eacute;t&eacute; plaisamment surpris de la
      facilit&eacute; de la t&acirc;che. Vous devez avoir quelques connaissances
      sur la programmation Unix, mais vous ne devez pas &ecirc;tre un
      gourou.
    </para>
    <para>
      C'est la seconde version (NdT : et la premi&egrave;re version
      fran&ccedil;aise) de cet article. Rien ne reste fixe tr&egrave;s longtemps
      dans le monde Debian, aussi ai-je fait certains changements
      importants pour rester &agrave; jour. J'ai &eacute;galement inclus certains
      conseils repris des mailing-lists des Utilisateurs et
      D&eacute;veloppeurs Debian, ou sugg&eacute;r&eacute;s par les lecteurs.
    </para>
    <para>
      Avant de commencer, vous aurez besoin d'installer et de
      configurer les paquets suivants. Je suppose que vous utilisez
      Hamm, la distribution "instable" de Debian. Dans ce contexte,
      "instable" signifie "en cours de d&eacute;veloppement". Hamm deviendra
      la prochaine version (2.0) de Debian.
    </para>
    <para>
      Les paquets suivants sont disponibles dans la section devel de la
      distribution.
    </para>
    <variablelist>
      <varlistentry>
	<term>
	  binutils
	</term>
	<listitem>
	  <para>
	    Les programmes de ce paquet sont utilis&eacute;s pour assembler
	    et lier les fichiers objets -- les trucs dont sont faits
	    les programmes.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  gcc
	</term>
	<listitem>
	  <para>
	    C'est le compilateur C de GNU. La plupart des programmes
	    pour Linux sont &eacute;crits en C.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  libc6-dev
	</term>
	<listitem>
	  <para>
	    Ce sont les librairies C et les fichiers d'ent&ecirc;te dont gcc
	    a besoin pour cr&eacute;er les fichiers objets. Au moment ou
	    j'&eacute;cris, Debian est en transition entre libc5 et
	    libc6. Tous les nouveaux paquets devraient &ecirc;tre cr&eacute;&eacute;s en
	    utilisant libc6. Pour des instructions sur la fa&ccedil;on de
	    passer &agrave; libc6, lisez le
	    <ulink url="http://www.gate.net/~storm/FAQ/libc5-libc6-Mini-HOWTO.html">
	      mini-HOWTO
	    </ulink>
	    de Scott Ellis.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  libg++272
	</term>
	<listitem>
	  <para>
	    Les librairies C++. fakeroot en a besoin.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  make
	</term>
	<listitem>
	  <para>
	    En g&eacute;n&eacute;ral, la cr&eacute;ation d'un programme se fait en
	    plusieurs &eacute;tapes. Plut&ocirc;t que de taper encore et encore les
	    m&ecirc;mes commandes, vous pouvez utiliser make pour
	    automatiser le processus.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  fakeroot
	</term>
	<listitem>
	  <para>
	    Comme le nom le sugg&egrave;re, ce programme simule le statut de
	    root n&eacute;cessaire pour une partie de la cr&eacute;ation. Bien qu'en
	    cours de d&eacute;veloppement, fakeroot est
	    utilisable. Auparavant, il fallait un acc&egrave;s root ou un
	    programme comme sudo, mais ceci est plus facile et devrait
	    &ecirc;tre plus s&ucirc;r.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    <para>
      Le paquet suivant est dans la section interpreters de la distribution
    </para>
    <variablelist>
      <varlistentry>
	<term>
	  cpp
	</term>
	<listitem>
	  <para>
	    Le pr&eacute;-processeur C.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    <para>
      Les paquets suivants sont dans la section utils de la distribution.
    </para>
    <variablelist>
      <varlistentry>
	<term>
	  cpio
	</term>
	<listitem>
	  <para>
	    C'est un archiveur comme tar ou zip. Requis par dpkg-dev.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  file
	</term>
	<listitem>
	  <para>
	    Ce programme bien utile d&eacute;termine le type d'un
	    fichier. Requis par dpkg-dev.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  debmake
	</term>
	<listitem>
	  <para>
	    C'est un ensemble de plus haut niveau pour la cr&eacute;ation de
	    paquets Debian. Vous n'en avez pas vraiment besoin, mais
	    je le recommande. Il rend le processus nettement plus
	    simple, surtout pour les d&eacute;butants. Nous utiliserons
	    debmake pour cr&eacute;er notre exemple de paquet.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  dpkg-dev
	</term>
	<listitem>
	  <para>
	    Ce paquet contient les outils n&eacute;cessaire pour cr&eacute;er les
	    archives Debian. Il contient &eacute;galement les manuels du
	    Programmeur Debian et de Programmation de dpkg (NdT :
	    v&eacute;rifier la traduction fran&ccedil;aise du titre, en supposant
	    que cette traduction existe).
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  devscript
	</term>
	<listitem>
	  <para>
	    Ce paquet est un compagnon de debmake et contient des
	    scripts utiles pour la cr&eacute;ation et la maintenance des
	    paquets.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  patch
	</term>
	<listitem>
	  <para>
	    patch prend un fichier contenant la liste des diff&eacute;rences
	    produites par le programme diff, et l'applique &agrave; un
	    original, produisant la version patch&eacute;e.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    <para>
      Les paquets suivants sont dans la section doc de la distribution.
    </para>
    <variablelist>
      <varlistentry>
	<term>
	  debian-policy
	</term>
	<listitem>
	  <para>
	    Il s'agit de la source d'information d&eacute;finitive concernant
	    la cr&eacute;ation de paquet Debian. Si vous constatez la moindre
	    diff&eacute;rence entre le manuel des normes et cet article, le
	    manuel des normes est la r&eacute;f&eacute;rence.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  developers-reference
	</term>
	<listitem>
	  <para>
	    Des informations pour les personnes d&eacute;sirant devenir des
	    d&eacute;veloppeurs Debian officiels.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    <para>
      Vous aurez aussi besoin du paquet de cryptage pgp, pour signer
      votre paquet. Ceci est particuli&egrave;rement important si vous
      d&eacute;sirez distribuer votre paquet &agrave; d'autres personnes. Cependant,
      &agrave; cause d'une loi am&eacute;ricaine, vous ne pouvez pas le t&eacute;l&eacute;charger
      depuis le miroir ftp Debian le plus proche. Par contre, le site
      ftp contient &agrave; la racine un fichier nomme README.non-us qui vous
      dira comment obtenir une copie de pgp.
    </para>
    <para>
      Cette description que j'ai donn&eacute;e ci-dessus ne sert que
      d'introduction &agrave; ce que chaque paquet fait. Avant de continuer,
      consultez attentivement la documentation de chaque
      programme. Cela semble lourd a priori, mais plus tard vous serez
      content de l'avoir fait.
    </para>
  </chapter>
  <chapter>
    <title>
      Cr&eacute;ation du paquet
    </title>
    <para>
      Maintenant que vous avez install&eacute; les bons paquets et lu la
      documentation, vous &ecirc;tes pr&ecirc;t &agrave; commencer. Comme exemple, nous
      allons cr&eacute;er un paquet Debian pour empire. Il s'agit d'un jeu de
      strat&eacute;gie o&ugrave; vous cr&eacute;ez un empire.
    </para>
    <para>
      La premi&egrave;re chose &agrave; faire est de t&eacute;l&eacute;charger le paquet
      original. Sunsite est le plus grand miroir Linux que je
      connaisse, aussi ai-je cherch&eacute; dans mon miroir sunsite local et
      l'ai trouv&eacute;
      <ulink url="http://www.cdrom.com/pub/linux/sunsite/games/strategy/empire.tar.gz">
	ici 
      </ulink>.
    </para>
    <para>
      Il y a deux types de paquets que vous pouvez faire, source et
      binaire. Un paquet source contient le code que vous pouvez
      compiler en un programme. Un paquet binaire contient juste le
      programme fini. Si vous d&eacute;sirez contribuer un paquet &agrave; la
      distribution Debian officielle, il doit venir avec des sources
      librement utilisables. Consultez le
      <ulink url="http://www.debian.org/social_contract.html#guidelines">
	Contrat social de Debian
      </ulink> 
      (NdT : le lire pour trouver la
      traduction exacte des Guidelines...) pour les d&eacute;tails
      exacts. Empire est disponible en source donc on pourra faire des
      paquets source et binaire.
    </para>
    <para>
      debmake veut que les sources soient dans un r&eacute;pertoire nomm&eacute;
      &lt;nom_paquet&gt;-&lt;num&eacute;ro_version&gt;, aussi cr&eacute;ons un
      r&eacute;pertoire empire-1.1 et d&eacute;compressons le fichier .tgz dedans
      (j'ai eu le num&eacute;ro de version du fichier lsm qui vient avec
      chaque programme charg&eacute; sur sunsite).
    <screen>
      <prompt>$</prompt> <userinput>mkdir empire-1.1</userinput>
      <prompt>$</prompt> <userinput>mv empire.tar.gz empire-1.1</userinput>
      <prompt>$</prompt> <userinput>cd empire-1.1</userinput>
      <prompt>$</prompt> <userinput>tar -xvzf empire.tar.gz</userinput>
    </screen>
      et si tout va bien
      <screen>
	<prompt>$</prompt> <userinput>rm empire.tar.gz</userinput>
      </screen>
    </para>
    <para>
      Quand vous lancez deb-make, certaines informations sont
      utilis&eacute;es. L'une d'entre elles est votre adresse email qui sera
      inclue dans le paquet de sorte que les gens peuvent vous
      contacter si ils ont des probl&egrave;mes. Si vous voulez utiliser une
      autre adresse que l'adresse actuelle, mettez la dans la variable
      d'environnement EMAIL avant de lancer deb-make, comme ceci :
      <screen>
	<prompt>$</prompt> <userinput>export EMAIL=jaldhar@debian.org</userinput>
      </screen>
    </para>
    <para>
      Il vous sera demand&eacute; le genre de paquet que vous voulez g&eacute;n&eacute;rer.
    </para>
    <variablelist>
      <varlistentry>
	<term>
	  single
	</term>
	<listitem>
	  <para>
	    Choisissez ceci pour cr&eacute;er un paquet unique.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  multiple
	</term>
	<listitem>
	  <para>
	    Choisissez ceci pour cr&eacute;er plusieurs .deb &agrave; partir d'un
	    seul ensemble de code source. L'un des int&eacute;r&ecirc;ts est de
	    diviser un paquet tr&egrave;s gros en plus petites pi&egrave;ces de
	    sorte que les utilisateurs peuvent choisir ce qu'ils
	    installent.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>
	  library
	</term>
	<listitem>
	  <para>
	    Choisissez ceci pour cr&eacute;er au moins deux .deb, l'un avec
	    la librairie dans /usr/lib,
	    l'autre,&lt;nom_lib&gt;-dev_&lt;version_lib&gt;.deb, avec
	    la documentation et les fichiers ent&ecirc;tes.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    <para>
      Maintenant, lan&ccedil;ons deb-make et choisissons l'option single.
      <screen>
	<prompt>$</prompt> <userinput>deb-make</userinput>
      </screen>
    </para>
    <para>
      Quand deb-make a fini, si vous tapez cd .., vous constatez qu'un
      nouveau r&eacute;pertoire a &eacute;t&eacute; cr&eacute;&eacute;, nomm&eacute; empire-1.1.orig, qui
      contient le code source original et qui ne sera par la suite
      plus modifi&eacute;. Le r&eacute;pertoire empire-1.1 existe toujours. C'est l&agrave;
      que seront fait les changements. Il y a un nouveau r&eacute;pertoire
      nomm&eacute; debian. Examinez-le.
      <screen>
	<prompt>$</prompt> <userinput>cd empire-1.1/debian</userinput>
      </screen>
    </para>
    <para>
      Il y a plusieurs fichiers dans ce r&eacute;pertoire. Nous allons les
      &eacute;diter pour configurer le comportement du paquet.
    </para>
    <sect1>
      <title>control</title>
      <para>
	Ce fichier contient les valeurs que dpkg et dselect utilisent
	pour g&eacute;rer le paquet. Voici ce que deb-make a cr&eacute;&eacute; pour nous :
	<programlisting>
	  1  Source: empire
	  2  Section: unknown
	  3  Priority: extra
	  4  Maintainer: Jaldhar H. Vyas &lt;jaldhar@debian.org&gt;
	  5  Standards-Version: 2.3.0.0
	  6 
	  7  Package: empire
	  8  Architecture: any
	  9  Depends: ${shlibs:Depends}
	  10 Description: Missing
	  11  Missing
	</programlisting>
	(j'ai ajout&eacute; les num&eacute;ros de lignes)
      </para>
      <para>
	Les lignes 1-5 sont les informations de contr&ocirc;le du paquet
	source. La ligne 1 est le nom du paquet source.
      </para>
      <para>
	La ligne 2 est la section du paquet. Changeons la en games.
      </para>
      <para>
	La ligne 3 indique &agrave; quel point il est important que
	l'utilisateur installe ce paquet. Comme, h&eacute;las, notre jeu
	n'est vraiment pas important, nous pouvons le laisser en
	extra. La section et la priorit&eacute; sont en fait uniquement
	utilis&eacute;s par dselect quand il trie les paquets et s&eacute;lectionne
	par d&eacute;faut. Lisez le manuel des normes pour des indications
	sur les valeurs &agrave; mettre.
      </para>
      <para>
	La ligne 4 est le nom et l'adresse email du responsable.
      </para>
      <para>
	La ligne 5 est la version du standard des Normes Debian que ce
	paquet suit.
      </para>
      <para>
	Les lignes 7-11 concernent le paquet binaire.
      </para>
      <para>
	La ligne 7 est le nom du paquet binaire.
      </para>
      <para>
	La ligne 8 d&eacute;crit l'architecture CPU pour laquelle ce paquet a
	&eacute;t&eacute; compil&eacute;. Nous pouvons y laisser n'importe quoi car
	<command>dpkg-gencontrol(1)</command> y mettra la valeur appropri&eacute;e.
      </para>
      <para>
	La ligne 9 montre un des grands points forts du syst&egrave;me de paquet
	Debian. Les paquets peuvent &ecirc;tre li&eacute;s aux autres d'une mani&egrave;re ou
	d'une autre. Outre les Depends, les autres relations sont
	Recommands, Suggests, Pre-depends, Conflicts, Provides et
	Replaces. Voici ce qu'ils signifient :
	<variablelist>
	  <varlistentry>
	    <term>
	      Depends
	    </term>
	    <listitem>
	      <para>
		dpkg et dselect n'installeront votre paquet que si le
		paquet duquel il d&eacute;pend est install&eacute;. Utilisez cette
		relation si votre programme ne tourne que si un autre
		paquet est pr&eacute;sent.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      Recommends
	    </term>
	    <listitem>
	      <para>
		dselect n'installera votre paquet que si le paquet
		recommand&eacute; est install&eacute;. dpkg vous laissera
		l'installer sans restriction. Utilisez ceci pour les
		paquets qui ne sont pas vraiment n&eacute;cessaires, mais qui
		sont souvent utilis&eacute;s avec votre programme.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      Suggests
	    </term>
	    <listitem>
	      <para>
		quand un utilisateur installe votre programme, dselect
		lui demandera s'il doit installer les paquets
		sugg&eacute;r&eacute;s. dpkg ne s'en soucie pas. Utilisez ceci pour
		les paquets qui fonctionnent bien avec votre
		programme, mais qui ne sont pas n&eacute;cessaires.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      Pre-depends
	    </term>
	    <listitem>
	      <para>
		Cette relation est plus forte que Depends. dpkg et
		dselect n'installeront votre programme que si les
		paquets dont il pr&eacute;-d&eacute;pend sont install&eacute;s et
		correctement configur&eacute;s. N'utilisez ceci que rarement,
		et toujours apr&egrave;s en avoir discut&eacute; sur la mailing-list
		debian-devel.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      Conflicts
	    </term>
	    <listitem>
	      <para>
		ni dpkg ni dselect n'installeront votre programme &agrave;
		moins que chaque paquet avec lequel il est en conflit
		n'ait &eacute;t&eacute; retir&eacute;.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      Provides
	    </term>
	    <listitem>
	      <para>
		Pour certains types de paquets, lorsque de multiples
		versions sont disponibles, des noms virtuels ont &eacute;t&eacute;
		d&eacute;finis. La liste compl&egrave;te est dans
		usr/doc/debian-policy/virtual-package-names-list.text.gz.
		Utilisez ceci si votre programme fourni un paquet
		virtuel.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      Replaces
	    </term>
	    <listitem>
	      <para>
		Utilisez ceci quand votre programme remplace un autre
		paquet. dpkg et dselect retirerons le paquet remplac&eacute;
		avant d'installer le votre.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </para>
      <para>
	Ces champs ont une m&ecirc;me syntaxe. C'est une liste de noms de
	paquets s&eacute;par&eacute;s par des virgules. Les noms de paquets peuvent
	&ecirc;tre aussi une liste de noms alternatifs de paquets, s&eacute;par&eacute;s
	par une barre verticale |. Le champs peut &ecirc;tre restreint &agrave; des
	versions particuli&egrave;res pour chaque nom de paquet. On l'indique
	entre parenth&egrave;ses apr&egrave;s chaque nom de paquet. Les parenth&egrave;ses
	contiennent l'une des relations suivantes, suivie par un
	num&eacute;ro de version : &lt;&lt;, &lt;=, =, &gt;=, &gt;&gt;. Les
	relations signifient, dans l'ordre, strictement plus vieux,
	plus vieux ou &eacute;gal, &eacute;gal, plus r&eacute;cent ou &eacute;gal, strictement
	plus r&eacute;cent. La derni&egrave;re capacit&eacute; que je veux vous montrer est
	$(shlibs:Depends). Ce champs sera automatiquement rempli par
	debmake avec les noms de toutes les librairies partag&eacute;es
	(DLLs) telles que libc6, utilis&eacute;es par le programme, de sorte
	que vous n'avez pas &agrave; les indiquer vous-m&ecirc;me. Une fois ceci
	dit, vous pouvez laisser la ligne 9 telle quelle, car Empire
	ne d&eacute;pend d'aucun autre paquet.
      </para>
      <para>
	La ligne 10 est la description courte. La plupart des gens ont des
	&eacute;crans texte de 80 caract&egrave;res de long, aussi cela ne devrait pas
	d&eacute;passer les 50 caract&egrave;res. Changeons le en "an empire-building
	strategy game".
      </para>
      <para>
	La ligne 11 est la description longue. Ce devrait &ecirc;tre un
	paragraphe qui donne plus de d&eacute;tail sur le paquet. La premi&egrave;re
	colonne de chaque ligne doit &ecirc;tre vide. Il ne doit pas y avoir
	de ligne vide. Mettez un . dans la deuxi&egrave;me colonne pour
	simuler une ligne vide.
      </para>
      <para>
	Voici la nouvelle version du fichier de contr&ocirc;le :
	<programlisting>
	  1   Source: empire
	  2   Section: games
	  3   Priority: extra
	  4   Maintainer: Jaldhar H. Vyas &lt;jaldhar@debian.org&gt;
	  5   Standards-Version: 2.3.0.0
	  6   
	  7   Package: empire
	  8   Architecture: any
	  9   Depends: ${shlibs:Depends}
	  10  Description: an empire-building strategy game
	  11   A solitaire empire game (sometimes called 'VMS Empire'), colorized and
	  11a  speed tuned and with a save-interval option.
	  11b  .
	  11c  In this game a player has to try to build and defend an empire.
	</programlisting>
      </para>
    </sect1>
    <sect1>
      <title>Makefile</title>
      <para>
	Quittons un instant le r&eacute;pertoire debian et remontons d'un
	r&eacute;pertoire pour examiner le fichier Makefile de Empire. C'est
	le fichier que <command>make(1)</command> utilisera pour
	g&eacute;n&eacute;rer le programme automatiquement.
	<programlisting>
	  1  # %W% %G% %U% - (c) Copyright 1987, 1988 Chuck Simmons
	  2  
	  3  #
	  4  # Copyright (C) 1987, 1988 Chuck Simmons
	  5  #
	  6  # See the file COPYING, distributed with empire, for restriction
	  7  # and warranty information.
	  8  
	  9  # Change the line below for your system. If you are on a Sun or Vax,
	  10 # you may want BSD.
	  11 
	  12 SYS = BSD
	  13 #SYS = SYSV
	  14 
	  15 # Use -g to compile the program for debugging.
	  16 
	  17 DEBUG = -g -DDEBUG
	  18 #DEBUG = -O
	  19 
	  20 # Use -p to profile the program.
	  21 #PROFILE = -p -DPROFILE
	  22 PROFILE =
	  23 
	  24 # Define all necessary libraries. 'curses' is necessary. 'termcap'
	  25 # is needed on BSD systems.
	  26 LIBS = -ldcurses
	  27 #LIBS = -lcurses -ltermcap
	  28 
	  29 # You shouldn't have to modify anything below this line.
	  30 
	  31 CFLAGS = $(DEBUG) $(PROFILE) -D$(SYS)
	  32 INS = /etc/install
	  33 
	  34 FILES = \
	  35     attack.c \
	  36     compmove.c \
	  37     data.c \
	  38     display.c \
	  39     edit.c \
	  40     empire.c \
	  41     game.c \
	  42     main.c \
	  43     map.c \
	  44     math.c \
	  45     object.c \
	  46     term.c \
	  47     usermove.c \
	  48     util.c
	  49 
	  50 HEADERS = empire.h extern.h
	  51 
	  52 OFILES = \
	  53     attack.o \
	  54     compmove.o \
	  55     data.o \
	  56     display.o \
	  57     edit.o \
	  58     empire.o \
	  59     game.o \
	  60     main.o \
	  61     map.o \
	  62     math.o \
	  63     object.o \
	  64     term.o \
	  65     usermove.o \
	  66     util.o
	  67 
	  68 all: empire
	  69 
	  70 empire: $(OFILES)
	  71     $(CC) $(PROFILE) -o empire $(OFILES) $(LIBS)
	  72 
	  73 TAGS: $(HEADERS) $(FILES)
	  74     etags $(HEADERS) $(FILES)
	  75 
	  76 lint: $(FILES)
	  77     lint -u -D$(SYS) $(FILES) -lcurses
	  78 
	  79 clean:
	  80     rm -f *.o TAGS
	  81 
	  82 clobber: clean
	  83     rm -f empire empire.tar*
	  84 
	  85 install: empire
	  86     $(INS) -o -f /usr/local/games empire
	  87 
	  88 installman: empire.6
	  89     $(INS) -f /usr/local/man/man6 empire.6
	  90 
	  91 SOURCES = READ.ME empire.6 COPYING Makefile BUGS $(FILES) $(HEADERS) MANIFEST empire.lsm
	  92 
	  93 empire.tar: $(SOURCES)
	  94     tar -cvf empire.tar $(SOURCES)
	  95 empire.tar.gz: empire.tar
	  96     gzip empire.tar
	  97 
	  98 empire.shar: $(SOURCES)
	  99     shar $(SOURCES) &gt;empire.shar
	</programlisting>
      </para>
      <para>
	Avec de la chance, vous aurez dans votre paquet un joli
	makefile bien cr&eacute;&eacute;, et vous n'aurez rien d'autre &agrave; faire. Mais
	mon exp&eacute;rience est que vous avez toujours quelques
	modifications &agrave; apporter pour qu'il fonctionne
	correctement. Il n'y a pas la place n&eacute;cessaire pour expliquer
	les d&eacute;tails concernant la correction des makefiles, mais voici
	quelques probl&egrave;mes que vous pouvez rencontrer.
      </para>
      <para>
	Regardez les lignes 12 et 13. Il existe au moins deux
	variantes principales de Unix, System V et BSD. Linux comporte
	des &eacute;l&eacute;ments des deux, mais en g&eacute;n&eacute;ral vous choisirez System
	V. Aussi nous commentons la ligne 12 et remettons la ligne
	13. Nous ne voulons pas des options de d&eacute;bugages.
	<programlisting>
	  12 #SYS = BSD
	  13 SYS = SYSV
	</programlisting>
	<programlisting>
	  17 #DEBUG = -g -DDEBUG
	  18 DEBUG = -O
	</programlisting>
      </para>
      <para>
	Le plus important probl&egrave;me est d'oublier que les lignes dans les buts
	telles que les lignes 35-48 doivent &ecirc;tre indent&eacute;es avec une
	tabulation. Pas des espaces. Souvent, quand vous coupez-collez les
	tabulations sont remplac&eacute;es par des espaces, et vous aurez d'&eacute;tranges
	messages d'erreur.
      </para>
      <para>
	Les librairies sont souvent diff&eacute;rentes d'une plateforme &agrave; l'autre. La
	ligne 26 fait r&eacute;f&eacute;rence &agrave; dcurses, qui n'existe pas sous Debian. Nous
	devons donc utiliser ncurses.
	<programlisting>
	  26 LIBS = -lncurses
	  27 #LIBS = -lcurses -ltermcap
	</programlisting>
      </para>
      <para>
	Un autre probl&egrave;me est la localisation des ex&eacute;cutables. Par
	exemple, la ligne 32 place <command>install(1)</command> dans
	/etc/. Sous Debian, ce programme est dans /usr/bin, aussi nous
	devons &eacute;diter cette ligne.
	<programlisting>
	  32  INS = /usr/bin/install
	</programlisting>
      </para>
      <para>
	Debian a des normes strictes quant &agrave; l'endroit o&ugrave; les
	programmes doivent &ecirc;tre install&eacute;s. Ceci est sp&eacute;cifi&eacute; dans
	/usr/doc/debian-policy/fsstnd. Pour suivre ces normes, nous
	devons installer l'ex&eacute;cutable dans /usr/games plut&ocirc;t que dans
	/usr/local/games, et la page de manuel dans /usr/man/man6
	plut&ocirc;t que dans /usr/local/man/man6. Il va y avoir un autre
	probl&egrave;me. Le programme install de Debian a d'autres options
	que celui du syst&egrave;me de l'auteur de Empire. En bref, -o
	d&eacute;signe le propri&eacute;taire, -g le groupe, et -m les permissions
	pour chaque fichier. Le manuel des normes sp&eacute;cifie ce que
	chacun devrait &ecirc;tre. Sur les ex&eacute;cutables, nous utilisons -s
	pour retirer les informations de d&eacute;bugage. Cela les rendra
	plus petits de sorte qu'ils utiliseront moins de place disque
	et moins de m&eacute;moire. Consultez la page de manuel d'install
	pour plus de renseignements.
      </para>
      <para>
	Nous changeons les lignes 85-89 comme suit (les raisons pour
	pr&eacute;fixer les chemins par debian/tmp seront d&eacute;crites plus bas).
	<programlisting>
	  85 install: empire
	  86     $(INS) -o root -g root -m 0755 -s empire debian/tmp/usr/games/empire
	  87 
	  88 installman: empire.6
	  89     $(INS) -o root -g root -m 0644 empire.6 debian/tmp/usr/man/man6/empire.6
	</programlisting>
      </para>
      <para>
	Beaucoup de makefiles auront une macro nomm&eacute;e DESTDIR qui
	sp&eacute;cifie le r&eacute;pertoire d'installation. Si elle existe, vous
	devriez la mettre &agrave; debian/tmp.
      </para>
      <para>
	Si vous &ecirc;tre vraiment malchanceux, vous aurez &agrave; modifier le
	source lui-m&ecirc;me. Quand vous faites ce genre de modification,
	faites-le de mani&egrave;re non-destructrice, de sorte que quelqu'un
	ayant une autre plateforme n'ait pas &agrave; d&eacute;faire vos
	changements. Encadrez-les avec quelque chose du genre :
	<programlisting>
	  #ifdef DEBIAN...#endif
	</programlisting>
	pour les isoler. Si vous faites des modifications, envoyez-les
	&agrave; l'auteur original ou au responsable de sorte qu'elles soient
	en standard dans la version suivante.
      </para>
    </sect1>
    <sect1>
      <title>rules</title>
      <para>
	Maintenant, nous revenons dans le r&eacute;pertoire debian et jetons
	un oeil aux r&egrave;gles que dpkg-dev utilise pour cr&eacute;er vraiment le
	paquet. Voici ce que debmake nous donne comme fichier de
	r&egrave;gles par d&eacute;faut :
	<programlisting>
	  1  #!/usr/bin/make -f
	  2  # Made with the aid of debmake, by Christoph Lameter,
	  3  # based on the sample debian/rules file for GNU hello by Ian Jackson.
	  4 
	  5  package=empire
	  6
	  7  build:
	  8     $(checkdir)
	  9     
	  10    make CFLAGS="-O2 -g -Wall"
	  11 
	  12    touch build
	  13
	  14 clean:
	  15    $(checkdir)
	  16    -rm -f build
	  17    -make clean
	  18    -rm -f `find . -name "*~"`
	  19    -rm -rf debian/tmp debian/files* core debian/substvars
	  20
	  21 binary-indep:    checkroot build
	  22    $(checkdir)
	  23 # There are no architecture-independent files to be uploaded
	  24 # generated by this package. If there were any they would be
	  25 # made here.
	  26 
	  27 binary-arch:    checkroot build
	  28    $(checkdir)
	  29    -rm -rf debian/tmp
	  30    install -d debian/tmp
	  31    cd debian/tmp && install -d `cat ../dirs`
	  32    make install DESTDIR=`pwd`/debian/tmp
	  33 # Must have debmake installed for this to work. Otherwise please copy
	  34 # /usr/bin/debstd into the debian directory and change debstd to debian/debstd
	  35    debstd BUGS 
	  36    dpkg-gencontrol
	  37    chown -R root.root debian/tmp
	  38    chmod -R go=rX debian/tmp
	  39    dpkg --build debian/tmp ..
	  40 
	  41 define checkdir
	  42    test -f debian/rules
	  43 endef
	  44 
	  45 # Below here is fairly generic really
	  46 
	  47 binary:        binary-indep binary-arch
	  48 
	  49 checkroot:
	  50    $(checkdir)
	  51    test root = "`whoami`"
	  52
	  53 .PHONY: binary binary-arch binary-indep clean checkroot
	</programlisting>
      </para>
      <para>
	Vous vous &ecirc;tes probablement familiaris&eacute; avec des lignes comme
	la ligne une, de part les scripts shell ou perl. Cela signifie
	que le fichier sera ex&eacute;cut&eacute; par make. La ligne 10 d&eacute;clenche le
	fichier makefile de l'application. La partie CFLAGS de cette
	ligne indique des options de compilation par d&eacute;faut, au cas ou
	le makefile de l'application n'en aurait pas. Nous n'avons pas
	de soucis &agrave; nous faire pour cela (voir la ligne 31 du makefile
	d'Empire), aussi nous pouvons l'effacer :
	<programlisting>
	  10    make
	</programlisting>
      </para>
      <para>
	On y arrive rarement du premier coup, aussi les lignes 14-20
	nettoient les crasses inutiles laiss&eacute;es par les essais rat&eacute;s.
      </para>
      <para>
	Les lignes 27-40 sont le coeur du fichier rules. Un r&eacute;pertoire
	nomm&eacute; tmp est cr&eacute;&eacute; dans le r&eacute;pertoire debian (si il existe
	d&eacute;j&agrave;, il sera effac&eacute; pour reprendre dans un &eacute;tat initial). Le
	paquet sera assembl&eacute; ici. C'est pour cela que dans le makefile
	d'Empire, nous avons sp&eacute;cifi&eacute; debian/tmp comme r&eacute;pertoire
	racine. Dans la ligne 31 sont cr&eacute;&eacute;s les r&eacute;pertoires dans
	lesquels nous allons effectuer l'installation. Ils sont pris
	dans le fichier dirs dont nous parlerons plus bas. La ligne 32
	lance le but install du fichier makefile d'Empire. La ligne 35
	lance <command>debstd(1)</command> qui vient avec
	debmake. debstd est une boîte noire qui va modifier votre
	paquet pour qui soit conforme aux normes Debian. Si vous
	voulez des d&eacute;tails, lisez la page de manuel, ou regardez les
	sources (c'est juste un script shell), et je vous encourage &agrave;
	le faire. Mais l'avantage de la boîte noire, c'est que vous
	n'avez pas &agrave; savoir ce qu'elle fait, vous pouvez supposer
	qu'elle le fait correctement. Quand les normes Debian
	changeront, ce sera transparent pour vous. Installez juste une
	version mise &agrave; jour de debmake qui supportent les nouvelles
	normes, recompilez et vous serez conforme (pour la plupart des
	normes. Toutes les modifications des normes ne peuvent pas
	&ecirc;tre ais&eacute;ment g&eacute;r&eacute;es automatiquement, aussi est-il payant de
	comprendre le probl&egrave;me en profondeur avant de se fier &agrave; un
	bout de code.) La ligne 36 lance dpkg-gencontrol qui va cr&eacute;er
	le fichier de contr&ocirc;le du paquet. Voyez
	<command>deb(5)</command> pour des d&eacute;tails sur le format de
	paquet Debian. Enfin, la ligne 39 cr&eacute;e le paquet proprement
	dit.
      </para>
      <para>
	Les lignes 41 et suivantes sont juste des macros utilis&eacute;es par
	le fichier rules et vous n'avez pas &agrave; vous en soucier.
      </para>
      <para>
	Ce qu'il faut savoir du fichier rules cr&eacute;&eacute; par debmake est
	qu'il est juste une suggestion. Il fonctionne pour des paquets
	simples, mais pour des paquets plus compliqu&eacute;s, n'h&eacute;sitez &agrave; y
	faire des ajouts ou des retraits pour vos besoin.
      </para>
    </sect1>
    <sect1>
      <title>
	dirs
      </title>
      <para>
	Ce fichier indique les r&eacute;pertoires que votre paquet va
	cr&eacute;er. Par d&eacute;faut, il s'agit de
	<programlisting>
	  1 usr/bin
	  2 usr/sbin
	</programlisting>
      </para>
      <para>
	Remarquez que le slash de t&ecirc;te n'est pas inclus. Nous
	changeons en
	<programlisting>
	  1 usr/games
	  2 usr/man/man6
	</programlisting>
      </para>
      <para>
	Maintenant, il nous reste quelques fichiers de plus &agrave; cr&eacute;er,
	et notre paquet sera complet.
      </para>
    </sect1>
    <sect1>
      <title>
	copyright
      </title>
      <para>
	Ce fichier contient les informations concernant les droits de copie
	du paquet. Voici ce que debmake cr&eacute;e par d&eacute;faut :
	<programlisting>
	  1 This package was debianized by Jaldhar H. Vyas jaldhar@debian.org on
	  2 Thu, 11 Sep 1997 22:49:54 -0400.
	  3 
	  4 It was downloaded from &lt;fill in ftp site&gt;
	  5 
	  6 Copyright:
	  7 
	  8 &lt;Must follow here&gt;
	</programlisting>
      </para>
      <para>
	Les choses importantes &agrave; inclure dans ce fichier sont l'endroit o&ugrave;
	vous avez trouv&eacute; ce paquet, et la licence de copie. Si la licence est
	l'une des licences bien connue de logiciel libre, comme GNU, BSD ou
	Artistic, vous n'avez pas &agrave; inclure le texte entier, vous pouvez juste
	faire r&eacute;f&eacute;rence au fichier ad&eacute;quat dans /usr/doc/copyright. Empire est
	sous licence GPL, aussi nous changeons le fichier en :
	<programlisting>
	  1  This package was debianized by Jaldhar H. Vyas jaldhar@debian.org on
	  2  Thu, 11 Sep 1997 22:49:54 -0400.
	  3  
	  4  It was downloaded from http://www.cdrom.com/pub/linux/sunsite/games/strategy
	  5  
	  6  Copyright: (c) 1987, 1988 Chuck Simmons
	  7  
	  8  This program is free software; you can redistribute it and/or modify
	  8a it under the terms of the GNU General Public License as published by
	  8b the Free Software Foundation; either version 2, or (at your option)
	  8c any later version.
	  8d  
	  8e This program is distributed in the hope that it will be useful,
	  8f but WITHOUT ANY WARRANTY; without even the implied warranty of
	  8g MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	  8h GNU General Public License for more details.
	  8i  
	  8j You should have received a copy of the GNU General Public License
	  8k along with Debian system; see the file /usr/share/common-licenses/GPL.
	  8l If not, write to the Free Software Foundation, Inc., 51 Franklin St, 
	  8m Fifth Floor, Boston, MA 02110-1301, USA.
	</programlisting>
      </para>
    </sect1>
    <sect1>
      <title>
	README.debian
      </title>
      <para>
	Tous les autres d&eacute;tails ou variations entre le paquet original
	et votre version debianis&eacute;e (NdT: un n&eacute;ologisme ?) doivent
	&ecirc;tre document&eacute;e ici. Voici &agrave; quoi la cr&eacute;ation par d&eacute;faut de
	debmake ressemble :
	<programlisting>
	  empire for DEBIAN
	  ----------------------
	  
	  Comments regarding the Package
	  
	  Jaldhar H. Vyas &lt;jaldhar@debian.org&gt;, Thu, 11 Sep 1997 22:49:54 -0400
	</programlisting>
      </para>
      <para>
	Nous n'avons rien de particulier &agrave; ajouter, aussi le
	laissons-nous tel quel.
      </para>
    </sect1>
    <sect1>
      <title>
	changelog
      </title>
      <para>
	Au fur et &agrave; mesure que vous travaillerez, le comportement de
	votre paquet va changer, de nouvelles capacit&eacute;s seront
	ajout&eacute;es, et des erreurs seront corrig&eacute;es. Les personnes qui
	t&eacute;l&eacute;chargent votre paquet peuvent consulter ce fichier et voir
	ce qui a chang&eacute;. Voici ce &agrave; quoi ressemble le changelog par
	d&eacute;faut que cr&eacute;e debmake :
	<programlisting>
	  1  empire (1.1-1) unstable; urgency=low
	  2  
	  3  * Initial Release.
	  4  
	  5  -- Jaldhar H. Vyas &lt;jaldhar@debian.org&gt; Thu, 11 Sep 1997 22:49:54 -0400
	  6  
	  7  Local variables:
	  8  mode: debian-changelog
	  9  add-log-mailing-address: "jaldhar@debian.org"
	  10 End:
	</programlisting>
      </para>
      <para>
	La ligne 1 est le nom du paquet, sa version, sa distribution
	et son urgence. Le num&eacute;ro de version ici est ce qui sera
	utilis&eacute; comme num&eacute;ro de version du paquet. Ne bidouillez pas
	cette ligne. Les lignes de 3 &agrave; 5 sont une entr&eacute;e
	d'archive. Nous pouvons y ajouter des &eacute;l&eacute;ments avec le
	programme <command>dch(1)</command> qui vient avec le paquet devscript
	(c'est un alias pour debchange. Vous pouvez l'invoquez avec un
	nom ou l'autre, cela ne fait aucune diff&eacute;rence). Les lignes 7
	&agrave; 10 sont des informations de mode pour Emacs(?). Ajoutons une
	ligne &agrave; changelog. Si le commentaire est court, vous pouvez
	l'ajouter directement &agrave; la ligne de commande de dch :
	<screen>
	  <prompt>$</prompt> <userinput>dch This is my first Debian package</userinput>
	</screen>
      </para>
      <para>
	Vous pouvez aussi lancer dch seul. Cela d&eacute;marrera votre
	&eacute;diteur par d&eacute;faut, qui est, par ordre de pr&eacute;f&eacute;rence, le
	programme d&eacute;fini par la variable d'environnement $VISUAL, le
	programme d&eacute;fini par la variable d'environnement $EDITOR,
	<command>joe(1)</command> ou <command>ae(1)</command>. Quand
	l'&eacute;diteur a d&eacute;marr&eacute;, vous pouvez entrer votre
	commentaire. Quelque soit la m&eacute;thode employ&eacute;e, voici ce &agrave; quoi
	vous devez arriver :
	<programlisting>
	  1  empire (1.1-1) unstable; urgency=low
	  2
	  2a * This is my first debian package.
	  3  * Initial Release.
	  4  
	  5  -- Jaldhar H. Vyas &lt;jaldhar@debian.org&gt; Thu, 11 Sep 1997 22:49:54 -0400
	  6  
	  7  Local variables:
	  8  mode: debian-changelog
	  9  add-log-mailing-address: "jaldhar@debian.org"
	  10 End:
	</programlisting>
      </para>
      <para>
	Quand vous distribuez une nouvelle version, vous devez
	incr&eacute;menter le num&eacute;ro de version. Vous le faites avec la
	commande :
	<screen>
	  <prompt>$</prompt> <userinput>dch -n This is my first debian package.</userinput>
	</screen>
      </para>
      <para>
	Si, pour une raison quelconque, vous voulez incr&eacute;menter le
	num&eacute;ro de version par plus que 1, par 15 par exemple, vous
	utilisez cette commande :
	<screen>
	  <prompt>$</prompt> <userinput>dch -v 15 This is my first debian package.</userinput>
	</screen>
      </para>
      <para>
	Nous supposerons que vous voulez juste incr&eacute;menter le num&eacute;ro
	de version par 1. Voici ce &agrave; quoi ressemble changelog
	maintenant :
	<programlisting>
	  1  empire (1.1-2) unstable; urgency=low
	  2  
	  2a * This is my first debian package
	  2b
	  2c  -- Jaldhar H. Vyas &lt;jaldhar@debian.org&gt; Sun, 14 Sep 1997 12:04:44 -0500
	  2d  
	  2e  empire (1.1-1) unstable; urgency=low
	  2f  
	  3  * Initial Release.
	  4  
	  5  -- Jaldhar H. Vyas &lt;jaldhar@debian.org&gt; Thu, 11 Sep 1997 22:49:54 -0400
	  6  
	  7  Local variables:
	  8  mode: debian-changelog
	  9  add-log-mailing-address: "jaldhar@debian.org"
	  10 End:
	</programlisting>
      </para>
    </sect1>
    <sect1>
      <title>
	conffiles
      </title>
      <para>
	Une des choses les plus &eacute;nervantes avec les logiciels est
	quand vous avez pass&eacute; un bon bout de temps &agrave; configurer un
	programme pour qu'une mise &agrave; jour efface tous vos
	changements. Debian r&eacute;sout ce probl&egrave;me en marquant les
	fichiers de configurations, de sorte que quand vous mettez &agrave;
	jour un programme, il vous sera demand&eacute; si vous voulez garder
	votre ancienne configuration ou pas. Vous faites ceci en
	entrant le chemin complet de chaque fichier de configuration
	(ils sont en g&eacute;n&eacute;ral dans /etc), un par ligne, dans un fichier
	nomm&eacute; conffiles. Empire n'a aucun fichier de configuration.
      </para>
    </sect1>
    <sect1>
      <title>
	*.ex
      </title>
      <para>
	Certains paquets doivent faire plus que de simplement installer des
	fichiers. Par exemple, un serveur peut avoir besoin d'ins&eacute;rer une
	ligne dans /etc/inetd.conf. Les fichiers en suffixe .ex sont des
	exemples de la mani&egrave;re d'ajouter ce genre de support &agrave; votre
	paquet. Pour en utiliser un, &eacute;ditez et retirez le suffixe .ex . Voici
	une br&egrave;ve description de ce que fait chaque fichier.
      </para>
      <variablelist>
	<varlistentry>
	  <term>
	    crontab.ex
	  </term>
	  <listitem>
	    <para>
	      Ceci ajoute une ligne au fichier /etc/crontab pour
	      ex&eacute;cuter un programme de mani&egrave;re r&eacute;guli&egrave;re. Les normes
	      actuelles sp&eacute;cifient qu'un paquet ne devrait pas toucher
	      &agrave; /etc/crontab, aussi si vous pensez qu'il y a une bonne
	      raison de le faire, discutez-en d'abord sur les mailing
	      lists. Si vous renommez ce fichier en cron.daily, il
	      sera ajout&eacute; dans /etc/cron.daily/ et ex&eacute;cut&eacute; tous les
	      jours. Pareillement, si vous le renommez cron.weekly il
	      sera ajout&eacute; dans /etc/cron.weekly/, et pour cron.monthly
	      il sera ajout&eacute; dans /etc/cron.monthly/. Comme les noms
	      le sugg&egrave;rent (pour peu qu'on parle un brin anglais,
	      NdT), ils sont ex&eacute;cut&eacute;s respectivement toutes les
	      semaines et tous les mois. Lisez les pages de manuel de
	      <command>crontab(1)</command> et
	      <command>crontab(5)</command> pour plus de d&eacute;tails. Les
	      normes pr&eacute;cisent que ces fichiers doivent &ecirc;tre des
	      scripts, et qu'ils doivent &ecirc;tre enregistr&eacute;s comme
	      conffiles. Empire n'en a pas besoin, aussi nous
	      l'effacerons.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    diversion.ex
	  </term>
	  <listitem>
	    <para>
	      Quelque chose &agrave; voir avec un d&eacute;tournement, peut-&ecirc;tre ?
	      Empire n'en a pas besoin, nous l'effa&ccedil;ons (NdT : il
	      s'agit du m&eacute;canisme utilis&eacute; sous Debian pour permettre
	      d'avoir plusieurs programmes aux capacit&eacute;s similaires
	      tout en enregistrant un programme par d&eacute;faut.)
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    inetd.conf.ex
	  </term>
	  <listitem>
	    <para>
	      Ceci ajoute une ligne dans /etc/inetd.conf pour ex&eacute;cuter
	      un d&eacute;mon. Lisez les pages de manuel pour
	      <command>inetd.conf(1)</command> pour des d&eacute;tails sur le
	      format. Empire n'en a pas besoin, aussi nous l'effa&ccedil;ons.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    info.ex
	  </term>
	  <listitem>
	    <para>
	      &Eacute;ditez ce fichier pour fournir de la documentation au
	      format GNU info. Empire n'en a pas besoin, aussi nous
	      l'effa&ccedil;ons.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    init.d.ex
	  </term>
	  <listitem>
	    <para>
	      Ceci est un script par d&eacute;faut pour /etc/init.d/. Si
	      votre programme doit &ecirc;tre lanc&eacute; au moment du d&eacute;marrage
	      et stopp&eacute; &agrave; l'arr&ecirc;t de l'ordinateur, ou lorsque le
	      niveau d'ex&eacute;cution (runlevel) change , &eacute;ditez le script
	      pour faire les actions n&eacute;cessaires. Empire n'en a pas
	      besoin, aussi nous l'effa&ccedil;ons.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    manpage.1.ex
	  </term>
	  <listitem>
	    <para>
	      Votre programme devrait avoir une page de manuel. S'il
	      n'en a pas, voici un patron que vous pouvez
	      remplir. Lisez les pages de manuel de <command>man(7)</command> pour
	      une description rapide de la fa&ccedil;on de cr&eacute;er une page de
	      manuel. Soyez s&ucirc;r de donner &agrave; ce fichier le nom du
	      programme avec l'extension correspondant &agrave; la section du
	      manuel dans laquelle il devrait aller. Voici une liste :
	      <table>
		<title>Section des pages de manuel</title>
		<tgroup cols="3">
		  <tbody>
		    <row>
		      <entry>
			Section
		      </entry>
		      <entry>
			Description
		      </entry>
		      <entry>
			Notes
		      </entry>
		    </row>
		    <row>
		      <entry>
			1
		      </entry>
		      <entry>
			Commandes utilisateur
		      </entry>
		      <entry>
			Commandes ou scripts ex&eacute;cutables
		      </entry>
		    </row>
		    <row>
		      <entry>
			2
		      </entry>
		      <entry>
			Appels syst&egrave;mes
		      </entry>
		      <entry>
			Fonctions fournies par le noyau
		      </entry>
		    </row>
		    <row>
		      <entry>
			3
		      </entry>
		      <entry>
			Appels librairies
		      </entry>
		      <entry>
			Fonctions des librairies syst&egrave;me
		      </entry>
		    </row>
		    <row>
		      <entry>
			4
		      </entry>
		      <entry>
			Fichiers sp&eacute;ciaux
		      </entry>
		      <entry>
			D'ordinaire trouv&eacute;s dans /dev
		      </entry>
		    </row>
		    <row>
		      <entry>
			5
		      </entry>
		      <entry>
			Formats de fichiers
		      </entry>
		      <entry>
			Par exemple, le format de /etc/passwd
		      </entry>
		    </row>
		    <row>
		      <entry>
			6
		      </entry>
		      <entry>
			Jeux
		      </entry>
		      <entry>
			Ou tout autre programme frivole
		      </entry>
		    </row>
		    <row>
		      <entry>
			7
		      </entry>
		      <entry>
			Paquets de macros
		      </entry>
		      <entry>
			Comme les macros de man
		      </entry>
		    </row>
		    <row>
		      <entry>
			8
		      </entry>
		      <entry>
			Administration Syst&egrave;me
		      </entry>
		      <entry>
			D'ordinaire uniquement lanc&eacute; par root
		      </entry>
		    </row>
		    <row>
		      <entry>
			9
		      </entry>
		      <entry>
			Routine noyau
		      </entry>
		      <entry>
			Appels non-standards et internes
		      </entry>
		    </row>
		  </tbody>
		</tgroup>
	      </table>
	    </para>
	    <para>
	      La page de manuel de Empire devrait &ecirc;tre nomm&eacute;e
	      empire.6. Comme il y a d&eacute;j&agrave; une page de manuel empire.6,
	      nous pouvons effacer cet exemple.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    menu.ex
	  </term>
	  <listitem>
	    <para>
	      Les utilisateurs de X Windows ont un gestionnaire de
	      fen&ecirc;tres avec des menus qui peuvent &ecirc;tre configur&eacute;s pour
	      lancer des programmes. S'ils ont install&eacute;s le paquet
	      Debian menu, un ensemble de menus pour chaque programme
	      sur le syst&egrave;me sera cr&eacute;&eacute; pour eux. Ce n'est pas requis
	      par les normes Debian, mais vos utilisateurs
	      appr&eacute;cieront. Nous pouvons ajouter Empire aux menus en
	      &eacute;ditant ce fichier. Voici ce que debmake cr&eacute;e par d&eacute;faut
	      :
	      <programlisting>
		text Apps/Misc empire none "empire Description" /usr/bin/empire
	      </programlisting>
	    </para>
	    <para>
	      Le premier champ indique le type d'interface requise par
	      le programme (text ou X11). Le champ suivant est le nom
	      de menu et de sous-menu dans lequel l'entr&eacute;e devrait
	      appara&icirc;tre. La liste de sections actuelles est dans
	      /usr/doc/menu/README. Le troisi&egrave;me est le nom du
	      menu. Le quatri&egrave;me est l'ic&ocirc;ne du programme, ou rien
	      s'il n'y en a pas. Le cinqui&egrave;me est le texte qui
	      appara&icirc;tra au menu. Le sixi&egrave;me est la commande qui lance
	      le programme.
	    </para>
	    <para>
	      Remplacez l'entr&eacute;e du menu par :
	      <programlisting>
		text Games/Strategy empire none "Build an empire" /usr/bin/empire
	      </programlisting>
	    </para>
	    <sidebar>
	      <para>
		NdT : menu a chang&eacute; de format, mais reste compatible
		avec l'ancienne version. Aujourd'hui, on pr&eacute;f&eacute;rera
		ceci :
		<programlisting>
		  ?package(empire):needs="text" \
		  section="Games/Strategy" \
		  title="Build an empire" \
		  icon="none" \
		  command="/usr/bin/empire"
		</programlisting>
	      </para>
	    </sidebar>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    watch.ex
	  </term>
	  <listitem>
	    <para>
	      Vous pouvez utiliser ce fichier en plus des programmes
	      <command>uscan(1)</command> et
	      <command>uupdate(1)</command> du paquet devscript pour
	      surveiller le site duquel vous avez eu les sources
	      originelles. Lisez les pages de manuel pour plus de
	      d&eacute;tail. Voici ce que debmake cr&eacute;e par d&eacute;faut :
	      <programlisting>
		1 # Example watch control file for uscan
		2 # Rename this file to "watch" and then you can run the "uscan" command
		3 # to check for upstream updates and more.
		4 # Site          Directory              Pattern            Version    Script
		5 sunsite.unc.edu /pub/Linux/Incoming    empire-*.tar.gz    debian     uupdate
	      </programlisting>
	    </para>
	    <para>
	      Changez le en :
	      <programlisting>
		5 www.cdrom.com /pub/Linux/sunsite/games/strategy empire-*.tar.gz debian uupdate
	      </programlisting>
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </sect1>
  </chapter>
  <chapter>
    <title>Construction</title>
    <para>
      Nous sommes enfin pr&ecirc;t pour la cr&eacute;ation du paquet.
    </para>
    <para>
      Allez dans le r&eacute;pertoire principale d'Empire et lancez build
      <screen>
	<prompt>$</prompt> <userinput>cd ..</userinput>
	<prompt>$</prompt> <userinput>build</userinput>
      </screen>
    </para>
    <para>
      Si vous avez fait des erreurs et que build &eacute;choue, et que vous
      essayez encore, vous pouvez rencontrer un petit probl&egrave;me. La
      deuxi&egrave;me fois que vous lancez build, vous pouvez avoir un
      message d'erreur comme ceci :
      <programlisting>
	dpkg-source: unrepresentable changes to source
      </programlisting>
    </para>
    <para>
      Cette erreur appara&icirc;t quand le paquet n'a pas &eacute;t&eacute; correctement
      nettoy&eacute;. Soyez s&ucirc;r que le but clean du makefile de l'application
      retire tous les fichiers inutiles. Si nous relisons le makefile
      d'Empire, nous voyons que clean n'efface pas l'ex&eacute;cutable
      empire. clobber le fait &agrave; la place (lignes 79-84). Aussi nous
      changeons la ligne 17 du fichier rules en :
      <programlisting>
	17    -make clobber
      </programlisting>
    </para>
    <para>
      Quand build a fini avec succ&egrave;s, remontez d'un r&eacute;pertoire :
      <screen>
	<prompt>$</prompt> <userinput>cd ..</userinput>
      </screen>
    </para>
    <para>
      Vous verrez quatre nouveaux fichiers
      <variablelist>
	<varlistentry>
	  <term>
	    empire_1.1-2_i386.deb
	  </term>
	  <listitem>
	    <para>
	      est le paquet Debian complet. Vous pouvez utiliser dpkg
	      ou dselect pour l'installer ou le retirer comme
	      n'importe quel autre paquet.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    empire_1.1-2_i386.changes
	  </term>
	  <listitem>
	    <para>
	      Au fur et &agrave; mesure que vous travaillez sur un paquet,
	      son comportement va changer et de nouvelles capacit&eacute;s
	      seront ajout&eacute;es. Les personnes qui t&eacute;l&eacute;chargent votre
	      paquet peuvent regarder ce fichier et voir ce qui a
	      chang&eacute;. Le fichier est g&eacute;n&eacute;r&eacute; &agrave; partir de
	      empire-1.1/debian/changelog. Il contient aussi la liste
	      des fichiers du paquet. Les longues cha&icirc;nes de
	      caract&egrave;res sont les sommes MD5 du fichier. Une personne
	      qui t&eacute;l&eacute;charge vos fichiers peut les tester avec le
	      programme md5sum (voir la page de manuel) et si les
	      num&eacute;ros ne correspondent pas, elle saura que le fichier
	      est corrompu ou modifi&eacute;.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    empire_1.1.orig.tar.gz
	  </term>
	  <listitem>
	    <para>
	      Ceci est le source original empaquet&eacute; de sorte que si
	      quelqu'un veut recr&eacute;er votre paquet depuis le d&eacute;but, il
	      peut.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    empire_1.1-2.dsc
	  </term>
	  <listitem>
	    <para>
	      Ceci est un r&eacute;sum&eacute; du contenu du code source. Ce fichier
	      est g&eacute;n&eacute;r&eacute; &agrave; partir du fichier
	      empire-1.1/debian/control.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </para>
    <para>
      Et voil&agrave;. Vous &ecirc;tes maintenant l'heureux cr&eacute;ateur d'une nouvelle
      archive Debian. Il reste encore beaucoup de travail &agrave; faire
      avant d'&ecirc;tre totalement conforme aux normes Debian (voyez le
      Manuel des Normes pour plus de d&eacute;tails). Avec un peu de chance,
      cette introduction vous aura montr&eacute; que le processus complet
      n'est pas aussi dur que beaucoup le pensent.
    </para>
  </chapter>
  <chapter>
    <title>Pour plus d'informations</title>
    <formalpara>
      <title>
	L'aide sp&eacute;cifique &agrave; Debian
      </title>
      <para>
	<itemizedlist>
	  <listitem>
	    <para>
	      Lisez toute la documentation dans /usr/doc/dpkg,
	      /usr/doc/debian, /usr/doc/debmake (surtout
	      README.debian.gz) et les pages de manuel pour tous les
	      programmes mentionn&eacute;s dans cet article.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      En joignant la mailing list Debian Mentor
	      (debian-mentors@lists.debian.org), vous pourrez faire
	      &eacute;quipe avec des d&eacute;veloppeurs Debian exp&eacute;riment&eacute;s qui
	      seront heureux de r&eacute;pondre &agrave; vos questions. Vous pouvez
	      vous inscrire
	      <ulink url="mailto:debian-mentors-requests@lists.debian.org">
		ici
	      </ulink>.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      Si vous avez encore des questions, demandez sur la
	      mailing list Debian Developers
	      (debian-devel@lists.debian.org). Vous pouvez vous
	      inscrire
	      <ulink url="mailto:debian-devel-requests@lists.debian.org">
		ici
	      </ulink>.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
    </formalpara>
    <bibliography>
      <title>
	Quelques livres d'introduction sur la programmation sous
	Linux/Unix
      </title>
      <biblioentry>
	<title>
	  Beginning Linux Programming
	</title>
	<authorgroup>
	  <author>
	    <surname>
	      Matthew
	    </surname>
	  </author>
	  <author>
	    <surname>
	      Stones
	    </surname>
	  </author>
	</authorgroup>
	<pubdate>
	  1996
	</pubdate>
	<publisher>
	  <publishername>
	    Wrox Press
	  </publishername>
	</publisher>
	<isbn>
	  1874416680
	</isbn>
      </biblioentry>
      <biblioentry>
	<title>
	  Programming With GNU Software
	</title>
	<authorgroup>
	  <author>
	    <surname>
	      Loukides
	    </surname>
	  </author>
	  <author>
	    <surname>
	      Oram
	    </surname>
	  </author>
	</authorgroup>
	<publisher>
	  <publishername>
	    O'Reilly & Associates
	  </publishername>
	</publisher>
	<pubdate>
	  1996
	</pubdate>
	<isbn>
	  1-56592-112-7
	</isbn>
      </biblioentry>
      <biblioentry>
	<title>
	  The Unix Programming Environment
	</title>
	<authorgroup>
	  <author>
	    <surname>
	      Kernighan
	    </surname>
	  </author>
	  <author>
	    <surname>
	      Pike
	    </surname>
	  </author>
	</authorgroup>
	<publisher>
	  <publishername>
	    Prentice-Hall Inc.
	  </publishername>
	</publisher>
	<pubdate>
	  1984
	</pubdate>
	<isbn>
	  0-13-937681-x
	</isbn>
      </biblioentry>
    </bibliography>
 </chapter>
</book>

