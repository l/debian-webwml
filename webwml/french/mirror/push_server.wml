#use wml::debian::template title="Mettre en place un serveur « Push »"

#use wml::debian::translation-check translation="1.9" translation_maintainer="Christian Couder <chcouder@club-internet.fr>"

<p>Mettre en place un serveur « Push » se résume à effectuer deux tâches 
relativement simples : mettre en place un accès rsync (comme pour faire un 
miroir « Pull » standard) et mettre en place un mécanisme déclencheur 
utilisant ssh (pour déclencher la mise à jour du miroir « Pull »).

<p><small>(Pour plus d'information sur ce qu'est un serveur « Push », 
merci de lire
<a href="push_mirroring">l'explication des miroirs « Push »</a>.)</small>

<h2>Mettre en place rsync</h2>

<p>Installez <code>rsync</code> 2.1.1 ou une version supérieure. Si votre
site tourne sous Debian, installez simplement le dernier paquet
<a href="http://packages.debian.org/stable/net/rsync.html">rsync</a>.
 
<p>Créez un fichier <code>rsyncd.conf</code> et mettez quelque chose comme
ceci dans celui-ci :

<pre>
uid = nobody
gid = nogroup
max connections = 25
syslog facility = daemon
socket options = SO_KEEPALIVE

[debian]
  path = /org/ftp.debian.org/ftp
  comment = Archive FTP Debian (~24 Go)
  auth users = compte_authorise1,compte_authorise2,compte_authoriseN
  read only = true
  secrets file = /etc/rsyncd/debian.secrets
[debian-web]
  path = /org/www.debian.org/debian.org
  comment = Site Web Debian (~400 Mo)
  auth users = compte_authorise1,compte_authorise2,compte_authoriseN
  read only = true
  secrets file = /etc/rsyncd/debian.secrets
</pre>

<p>Pour chaque site dont vous faites un miroir « Push », ajoutez une entrée 
au fichier <code>/etc/rsyncd/debian.secrets</code> :

<pre>
compte_authorise1:un_mot_de_passe
compte_authorise2:autre_mot_de_passe
compte_authoriseN:_mot_de_passe
</pre>

<p>Vous avez alors donné accès à l'archive se trouvant sur votre machine 
aux miroirs clients de votre machine.
 
<p>Vous voudrez probablement lancer le démon rsync depuis inetd. Pour cela,
vous devez d'abord ajouter le service rsync dans le fichier 
<code>/etc/services</code> (s'il n'y est pas déjà), comme ceci :
	
<pre>
rsync           873/tcp
</pre>

Pour lancer le démon avec inetd, ajoutez ce qui suit à votre fichier
<code>/etc/inetd.conf</code> :
 
<pre>
rsync      stream      tcp         nowait      root /usr/bin/rsync rsyncd --daemon
</pre>

(N'oubliez pas d'envoyer à inetd un signal HUP pour lui dire de 
relire son fichier de configuration après que vous l'avez modifié.)

<h2>Mettre en place un mécanisme déclencheur ssh</h2>

<p>Créez une nouvelle clé ssh pour le compte que vous utilisez pour faire 
un miroir de Debian. Faites attention à ne pas écraser votre clé ssh 
originale et pour cela utilisez l'option -f, par exemple :

<pre>
ssh-keygen -f ~/.ssh/identite.monsite
</pre>

<p>Vérifiez que la nouvelle clé publique (~/.ssh/identite.monsite.pub) 
contient ceci au début du fichier :

<pre>
no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty,command="~/websync &"
</pre>

<p>(remplacez  « websync » par  « ftpsync » ou « ftpsync-non-US » ou
encore autre chose suivant le nom de la commande que vous utilisez pour 
lancer le processus de miroir)

<p>Vous devez aussi mettre en place le script qui contactera les miroirs 
clients.
Créez un fichier nommé <code>signal</code>, contenant ceci :

<protect>
<pre>
#!/bin/sh

# Ce script est appelé pour signaler à l'hôte distant qu'il est temps de
# mettre à jour le miroir à partir de l'archive.

echo Signalling $1
ssh -o"BatchMode yes" -o"user $2" "$1" -i $HOME/.ssh/identite.monsite sleep 1
</pre>
</protect>

<p>Ce script va se loguer sur un hôte distant en utilisant la clé ssh 
spéciale que vous avez créée ci-dessus. Ce script lui-même ne fera rien
d'utile sur l'hôte distant, la commande ~/websync (ou ~/ftpsync, ou 
~/ftpsync-non-US) sera lancée à partir de la clé.

<p>Pour déclencher effectivement les miroirs, vous devez ajouter des
lignes du type 
<code>./signal &lt;site&gt; &lt;nom_utilisateur&gt;</code> soit à la 
fin du script <code>websync</code>, soit si c'est plus simple pour vous, 
dans un nouveau script, et ensuite lancer ce script depuis 
<code>websync</code>.

<p>Ce nouveau script, <code>runmirrors</code>, devrait contenir quelque
chose comme ceci :

<protect>
<pre>
#!/bin/sh

# Ce script est appellé par websync pour déclencher les miroirs clients.

./signal un.autre.site archvsync
./signal et.un.autre.site autrecompte
</pre>
</protect>

<p>De cette façon, dès que votre site a terminé de mettre à jour son 
miroir à partir de son serveur, vous allez déclencher la mise à jour
des sites clients de votre serveur.

<p>Si vous avez le moindre problème avec ceci, 
<a href="mailto:mirrors@debian.org">contactez-nous</a>.
