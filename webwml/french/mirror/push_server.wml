#use wml::debian::template title="Mettre en place un serveur « Push »"

#use wml::debian::translation-check translation="1.5" translation_maintainer="Christian Couder <chcouder@club-internet.fr>"

<p><small>(Pour plus d'information sur ce qu'est un serveur « Push », merci
de lire
<a href="push_mirroring">l'explication des miroirs « Push »</a>.)</small>

<p>Mettre en place un serveur « Push » est assez simple :
<ul>
  <li>installer <kbd>rsync</kbd> 2.1.1 ou plus.
  <li>créer <kbd>rsyncd.conf</kbd> et ajoutez y un contenu similaire au 
  suivant:

<pre>
uid = nobody
gid = nogroup
max connections = 25
syslog facility = daemon
socket options = SO_KEEPALIVE

[ftp]
  path = /org/ftp.debian.org/ftp
  comment = Archive FTP Debian (~20 Go)
  auth users = compte_authorise1,compte_authorise2,compte_authoriseN
  read only = true
  secrets file = /etc/rsyncd/debian.secrets
[web.debian.org]
  path = /org/www.debian.org/debian.org
  comment = Site Web Debian (~400 Mo)
  auth users = compte_authorise1,compte_authorise2,compte_authoriseN
  read only = true
  secrets file = /etc/rsyncd/debian.secrets
</pre>

  <li>Pour chaque site dont vous faite un miroir push, ajoutez une entrée 
  au fichier <kbd>/etc/rsyncd/debian.secrets</kbd>:

<pre>
compte1:un_mot_de_passe
compte2:autre_mot_de_passe
</pre>

  <li>Vous voudrez probablement lancer le démon rsync depuis inetd. 
  Pour faire cela ajoutez
	
<pre>
rsync           873/tcp
</pre>

  au fichier <kbd>/etc/services</kbd> et ce qui suit à votre fichier
  <kbd>/etc/inetd.conf</kbd>

<pre>
rsync      stream      tcp         nowait      root /usr/bin/rsync rsyncd --daemon
</pre>

  (N'oubliez pas d'envoyer à inetd un signal HUP pour lui dire de 
  relire son fichier de configuration.)

  <li>créez une nouvelle clé ssh pour le compte que vous utilisez pour faire 
  un miroir de Debian. Faites attention à ne pas écraser votre clé ssh 
  originale et pour cela utilisez l'option -f,
  <kbd>ssh-keygen -f ~/.ssh/&lt;nomfichier&gt;</kbd>.
</ul>

<p>Pour chaque site dont vous faite un miroir push, vous devez ajouter un nom 
d'utilisateur et un mot de passe dans <kbd>/etc/rsyncd/debian.secrets</kbd> 
et ensuite ajouter le nom d'utilisateur à la liste des accès dans 
<kbd>/etc/rsyncd.conf</kbd>. 

<p>Pour simplifier les choses vous voudrez peut être utiliser le nom du compte
sous lequel vous faites le push sur le miroir client. Vous aurez alors donné
au miroir client l'accès à l'archive sur votre machine. Le nom d'utilisateur
et le mot de passe sont envoyés sur le site client.

<p>Vous devez encore mettre en place le script qui contactera les miroirs 
clients.
Créez le fichier <kbd>runmirrors</kbd> contenant:

<protect>
<pre>
#!/bin/sh

HOME=/home/archvsync
LOGNAME="archvsync"
USER="archvsync"
MAIL=
PATH="/bin:/usr/bin"

cd $HOME

./signal some.other.site archvsync
./signal and.another.site othersiteaccount
</pre>
</protect>

<p>et le fichier <kbd>signal</kbd>, contenant:

<protect>
<pre>
#!/bin/sh

# Ce script est appelé pour signaler à l'hôte distant qu'il est temps de
# mettre à jour le miroir à partir de l'archive. Ceci est fait de la
# façon la plus sûre que je connaisse, avec un déclancheur ssh. 
# L'hôte distant a une entrée pour cette clé qui ne lui laisse lancer 
# qu'un seul programme - ftpsync.

echo Signalling $1
ssh  -o"BatchMode yes" -q -o"user $2" "$1" sleep 1
</pre>
</protect>

<p>Pour chaque site dont vous faite un miroir push vous devez ajoutez une
ligne
<code>./signal &lt;site&gt; &lt;nomutilisateur&gt;</code>
dans <code>runmirrors</code>.

<p>Enfin, ajoutez une ligne à la fin de <kbd>ftpsync</kbd> qui appelle 
<kbd>runmirrors</kbd>.
De cette façon, dès que votre site a fini de mettre à jour son miroir à partir
du site serveur, vous commencerez à mettre à jour vos sites clients.
