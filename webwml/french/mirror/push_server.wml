#use wml::debian::template title="Mettre en place un serveur de repoussage"
#use wml::debian::toc

#use wml::debian::translation-check translation="1.18" maintainer="Nicolas Bertolissio"

# Traducteur précédant : Christian Couder
# Premier traducteur   : Christophe Lebars

<p>
Mettre en place un serveur de repoussage se résume à effectuer deux tâches
relativement simples&nbsp;: mettre en place un accès rsync (comme pour faire un
miroir par aspiration standard) et mettre en place un mécanisme déclencheur
utilisant ssh (pour déclencher la mise à jour du miroir par repoussage).
</p>

<p>
<small>Pour plus d'information sur ce qu'est un serveur de repoussage, merci de
lire <a href="push_mirroring">l'explication des miroirs par
repoussage</a>.</small>
</p>


<toc-display />


<toc-add-entry name="rsync">Mettre en place rsync</toc-add-entry>

<p>
Installez <code>rsync</code>&nbsp;2.1.1 ou une version supérieure. Si votre
site tourne sous Debian, installez simplement le dernier paquet <a
href="http://packages.debian.org/stable/net/rsync">rsync</a>.
</p>

<p>
Créez un fichier <code>rsyncd.conf</code> et mettez quelque chose comme ceci
dans celui-ci&nbsp;:
</p>

<pre>
uid = nobody
gid = nogroup
max connections = 25
socket options = SO_KEEPALIVE

[debian]
  path = /srv/debian/mirror
  comment = The Debian Archive (~250 GB)
  auth users = compte_autorisé1,compte_autorisé2,compte_autoriséN
  read only = true
  secrets file = /etc/rsyncd/debian.secrets
</pre>

<p>
Pour chaque site dont vous faites un miroir par repoussage, ajoutez une entrée
au fichier <code>/etc/rsyncd/debian.secrets</code>&nbsp;:
</p>

<pre>
compte_autorisé1:un_mot_de_passe
compte_autorisé2:autre_mot_de_passe
compte_autoriséN:_mot_de_passe
</pre>

<p>
Vous avez alors donné accès à l'archive se trouvant sur votre machine aux
miroirs clients de votre machine.
</p>

<p>
Vous voudrez probablement lancer le démon rsync depuis inetd. Pour cela, vous
devez d'abord ajouter le service rsync dans le fichier
<code>/etc/services</code> (s'il n'y est pas déjà), comme ceci&nbsp;:
</p>
	
<pre>
rsync           873/tcp
</pre>

<p>
Pour lancer le démon avec inetd, ajoutez ce qui suit à votre fichier
<code>/etc/inetd.conf</code>&nbsp;:
</p>

<pre>
rsync      stream      tcp         nowait      root /usr/bin/rsync rsyncd --daemon
</pre>

<p>
N'oubliez pas d'envoyer à inetd un signal HUP pour lui dire de relire son
fichier de configuration après que vous l'avez modifié.
</p>


<toc-add-entry name="sshtrigger">Mettre en place un mécanisme déclencheur ssh</toc-add-entry>

<p>
Créez une nouvelle clé ssh pour le compte que vous utilisez pour faire un
miroir de Debian. Faites attention à ne pas écraser votre clé ssh originale et
pour cela utilisez l'option -f, par exemple&nbsp;:
</p>

<pre>
ssh-keygen -f ~/.ssh/identite.monsite
</pre>

<p>
Vérifiez que la nouvelle clé publique (~/.ssh/identite.monsite.pub) contient
ceci au début du fichier, avec ADRESSEIP l'IP de votre miroir amont :
</p>

<pre>
no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty,command="~/bin/ftpsync,,from="ADRESSEIP"
&amp;"
</pre>

<p>
Vous devez aussi mettre en place le script qui contactera les miroirs clients.
Créez un fichier nommé <code>signal</code>, contenant ceci&nbsp;:
</p>

<protect>
<pre>
#!/bin/sh

# Ce script est appelé pour signaler à l'hôte distant qu'il est temps de
# mettre à jour le miroir à partir de l'archive.

echo Signalling $1
ssh -o"BatchMode yes" -o"user $2" "$1" -i $HOME/.ssh/identite.monsite sleep 1
</pre>
</protect>

<p>
Ce script va se connecter sur un hôte distant en utilisant la clé ssh spéciale
que vous avez créée ci-dessus, à condition que chaque opérateur de miroir
client ajoute cette clef à son propre fichier ~/.ssh/authorized_keys (en
remplaçant également <q>ftpsync</q> selon le nom de sa commande de lancement
de la recopie). Ce script ne fait rien d'utile à distance en lui-même, la
commande unique sera lancée comme spécifié par le paramétragede la clef.
</p>

<p>
Pour déclencher effectivement les miroirs, vous devez lancer la commande
<code>./signal &lt;site&gt; &lt;username&gt;</code> après avoir réalisé votre
propre synchronisation. De cette façon, dès que votre site a terminé de mettre
à jour son miroir à partir de son serveur, vous allez déclencher la mise à jour
des sites clients de votre serveur.
</p>

<p>
Ce nouveau script, <code>runmirrors</code>, devrait contenir quelque chose
comme ceci&nbsp;:
</p>
<p>
Vous pouvez placer ces commandes soit à la fin de votre
<code>ftpsync.conf</code>, ou si vous préférez, dans un autre script et lancer
ce script à partir de <code>anonftpsync</code>, par exemple de la façon
suivante&nbsp;:
</p>

<protect>
<pre>
#!/bin/sh

# Ce script est appelé par websync pour déclencher les miroirs clients.

./signal un.autre.site archvsync
./signal et.un.autre.site autrecompte
</pre>
</protect>


<p>
Si vous avez le moindre problème avec ceci, <a
href="mailto:mirrors@debian.org">contactez-nous</a>.
</p>
