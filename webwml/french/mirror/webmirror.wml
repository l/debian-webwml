#use wml::debian::template title="Mettre en place un miroir du site web Debian"

#use wml::debian::translation-check translation="1.16" translation_maintainer="Christian Couder <chcouder@club-internet.fr>"


<p><strong>Note : en ce moment nous n'avons pas besoin de miroir Debian 
supplémentaire. Nous n'encourageons donc pas la création de nouveaux site web 
miroir de Debian. Les informations ci-dessous sont fournies uniquement en 
tant que référence pour les responsables des miroirs existants.</strong>

# <p>Une fois qu'un miroir est mis en place il doit être 
# <a href="submit">enregistré par Debian</a>
# de façon à être inclus dans la 
# <a href="../misc/README.mirrors">liste des miroirs</a>.

Si vous avez des questions, envoyez un courrier à
<A href="mailto:mirrors@debian.org">mirrors@debian.org</A>.


<H2>Méthodes pour faire fonctionner le miroir</H2>

<p>La méthode recommandée pour faire un miroir est d'utiliser rsync.

<p>Il n'est pas recommandé d'utiliser 'mirror' sur les pages web Debian
parce que pour les gros répertoires son utilisation de mémoire devient
prohibitive. Wget n'est pas non plus recommandé, parce que bien qu'il
fonctionne correctement pour faire des miroirs de petits sites, il n'est pas
aussi configurable que rsync (ou 'mirror').

<h3>rsync anonyme</h3>

<p>Vous pouvez utiliser <a href="anonwebsync">ce script</a> pour faire un 
miroir de l'archive.
Suivez les indications du script pour mettre en place le miroir.
Les sites dans la <a href="mirrors_full">liste complète des miroirs</a> qui 
ont un tag '<kbd>Type: Push-Primary</kbd>' devraient être de bons sites 
comme base de miroir.

<h3>rsync avec authentification à partir d'un miroir « Push »</h3>

<p>Les miroirs « Push » sont une forme de miroir, utilisant rsync, que nous 
avons développé pour minimiser le temps qu'il faut aux changements de 
l'archive pour atteindre les miroirs. Les miroirs « Push » utilisent un script 
déclencheur ssh pour indiquer au miroir client qu'il doit se mettre à jour. 
Cette méthode est assez sure car ssh est configuré pour lancer une unique 
commande. Ainsi le miroir se fait toujours par « Pull », il n'est donc pas 
possible de corrompre le contenu de l'archive via un miroir « Push » infiltré.

<p>Quelques administrateurs de miroirs ont montré une certaine hésitation à 
utiliser cette solution pour créer un miroir par crainte qu'elle n'ouvre 
leur machine à une invasion. Ce n'est certainement pas le cas. Pour une 
description plus détaillée de la manière dont elle fonctionne et des raisons 
pour lesquelles elle est sûre, visitez <a href="explain">cette page</a>.

<p>Les miroirs « Push » demandent un tout petit peu plus d'effort à mettre 
en place car les mainteneurs du site serveur et client doivent s'échanger des
informations. Les avantages sont que le miroir serveur lance le processus 
miroir client immédiatement après que ses archives aient été mises à jour. 
Cela permet aux changements dans l'archive de se propager extrêmement 
rapidement.
Voyez la <a href="push_server">page d'explications</a> pour plus de détails.

<p>Le mieux est de mettre en place cette solution en utilisant le compte d'un
utilisateur ordinaire, non root.
Le contenu de la clé ssh publique que le miroir serveur vous donne devrait être
placée dans <kbd>~&lt;user&gt;/.ssh/authorized_keys</kbd>.

<p>Les fichiers <a href="websync">websync</a> et 
<a href="websync.conf">websync.conf</a>
sont nécessaires. Éditez ftpsync.conf et suivez les indications qui se 
trouvent à l'intérieur en utilisant les informations qui vous sont données 
par le miroir serveur.

<p>Si votre site devient un miroir « Push-Primary », vous aurez besoin
de la <a href="identity.pub.master.web">clé publique ssh de
archvsync@www-master.debian.org</a>.

<h2>Quand rafraîchir les miroirs ?</h2>

<p>Le site principal est reconstruit toutes les six heures.

<p>Si votre site est un miroir « Push », alors vous n'avez pas à vous
soucier de ce problème. Sinon vous devriez calculer le moment ou vous 
rafraîchissez votre miroir en fonction de la date des fichiers « timestamp » 
se trouvant dans le répertoire <code>/mirror/timestamps/</code> du site 
web que vous utilisez comme source. Ajoutez-y un moment, par exemple une 
demi heure, et vous obtiendrez le moment auquel lancer votre processus.

<p>La meilleure façon de faire tourner le miroir automatiquement tous les 
jours est d'utiliser cron. Voyez <kbd>man crontab</kbd> pour plus de détails.
 
<H2>La publicité du sponsor sur le miroir</H2>

<p>Les fichiers <code>sponsor.html</code> et <code>sponsor_img.jpg</code> 
peuvent et devraient être remplacés par vos soins. 
Ils sont destinés à faire de la publicité pour votre site de façon à 
ce que les gens sachent qui est le sponsor.
Les originaux sont sous <code>sponsor.deb.html</code> et 
<code>sponsor.deb.jpg</code> du fait que le site dont vous faites un miroir 
peut avoir remplacé celles que Debian fournis en exemple.
La taille maximum suggérée pour votre logo est 120x60.

<p>Comme <a href="#cn">la négociation de contenu</a> est utilisée sur les 
pages web pour choisir la langue préférée, vous pouvez même fournir 
<code>sponsor.html</code> dans différentes langues. Pour cela vous devez 
simplement créer un sponsor.&lt;lang&gt;.html pour chaque &lt;lang&gt; que 
vous souhaitez.

<p>Soyez sûr d'ajouter tous les fichiers que vous ne voulez pas voir 
écraser par le miroir dans la liste d'exclusions du miroir.

<H2>Configuration du serveur web</H2>

<h3>Modifications diverses sur le serveur web</h3>

<p>Si votre machine tourne sous Debian, il a été décidé
de ne pas respecter la politique Debian et d'utiliser <code>/doc</code> 
pour les pages web. Cela signifie que vous devriez commenter les lignes
`<code>Alias /doc/ /usr/doc/</code>' de votre fichier
<code>/etc/apache/srm.conf</code>.

<P>Note : tous nos scripts CGI tournent de façon centralisée sur 
cgi.debian.org, donc vous n'avez pas à vous en soucier.

<h3><a name="cn">Négociation de Contenu</a></h3>

<p>La Négociation de Contenu est un moyen qui laisse le navigateur négocier 
avec le serveur le type de document qui doit être servi. Bien qu'il y ait 
un certain nombre d'utilisation pour cela, le plus courant est de négocier 
en quelle langue un document doit être servi. Cela permet à Debian de 
servir ses pages dans de multiples langues d'une façon (techniquement) très
élégante.

<P>Pour ceux qui utilisent Apache, la modification est presque triviale. 
Ajoutez simplement une section identique à la suivante dans
<kbd>/etc/apache/access.conf</kbd>
(modifiez le répertoire contenant les pages web de 
<kbd>/debian/web</kbd>) et relancez le serveur
(cet exemple fonctionne avec la version 1.3 bêta ou suivante d'Apache) :

<pre>
&lt;Directory /debian/web&gt;
Options +Multiviews   
&lt;/Directory&gt;
</pre>

<p>De plus, vous devez vérifier que le serveur peut gérer toutes les
langues qui seront sur le site web. Ceci peut être fait en utilisant
la commande <kbd>AddLanguage</kbd>. Ce qui suit est une liste des 
langues déjà utilisées - prévoyez d'en ajouter d'autres plus tard :

<pre>
AddLanguage en .en
AddLanguage fr .fr
AddLanguage de .de
AddLanguage da .da
AddLanguage it .it
AddLanguage es .es
AddLanguage ja .ja
AddLanguage pl .pl
AddLanguage ko .ko
AddLanguage hr .hr
AddLanguage pt .pt
AddLanguage fi .fi
AddLanguage zh-CN .zh-cn
AddLanguage zh-TW .zh-tw
AddLanguage cs .cs
AddLanguage sv .sv
AddLanguage no .no
AddLanguage ru .ru
AddLanguage tr .tr
AddLanguage eo .eo
AddLanguage ar .ar
AddLanguage nl .nl
AddLanguage hu .hu
AddLanguage ro .ro
</pre>

<p>À cause d'un bogue dans Apache la mauvaise langue peut être
servie dans certaines circonstances, c'est pourquoi c'est une bonne idée 
que d'ajouter chaque langue servie à l'option LanguagePriority 
comme ceci :

 <pre>
LanguagePriority en fr de it es ja pl hr da pt fi zh-cn zh-tw cs sv ko no ru tr eo ar nl hu ro
 </pre>

<p>De façon à éviter de servir des fichiers issus de la négociation de
contenu ayant un mauvais jeu de caractères, soyez certains que la
commande <code>AddDefaultCharSet</code> est soit commentée soit
mise à `<code>Off</code>'.

<p>De façon à servir les fichiers index de répertoire correctement, vous
devrez probablement modifier l'entrée <code>DirectoryIndex</code> dans
<code>/etc/apache/srm.conf</code>. La ligne suivante devrait suffire :

 <pre>
DirectoryIndex index index.html
 </pre>

<h3>Redirections</h3>

<p>Du fait que certaines parties du site web devenaient trop volumineuses pour
que la plupart des sites en fassent un miroir, nous les avons séparées du
site principal. Bien que la plupart des liens devraient avoir été transformés
pour utiliser les nouveaux emplacements, vous êtes invités à ajouter une
redirection de façon à ce qu'aucun lien ne soit cassé. Cela peut être
fait dans <kbd>/etc/apache/srm.conf</kbd>. Par exemple :

<pre>
Redirect /Lists-Archives http://lists.debian.org/
Redirect /search http://search.debian.org
Redirect /Packages http://packages.debian.org
Redirect /lintian http://lintian.debian.org
</pre>


