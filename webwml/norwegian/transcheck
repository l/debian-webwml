#!/bin/bash
########################################################################
### FILE:	transcheck
### PURPOSE:	Check translation updates on Debian site.
### HISTORY:	1999-Jul-17	Tor Slettnes	Created
### TERMS:	GNU Public License.
###             See <http://www.fsf.org/copyleft/gpl.html>.
###
### Copyrights reserved (c) 1999 by Tor Slettnes <tor@slett.net>
### Comments and enhancements appreciated.
###
### Keep track of translations in CVS repository for Debian's website.
### Modelled after `check_trans.pl' by Paolo Molaro <lupus@debian.org>.
### Translators need to embed the following text in the target language
### .wml file, possibly as a comment (between <!-- and -->) and/or on
### a line that starts with '#':
###
###     translation n.nn
### 
### `n.nn' is the source language revision that matches the translation.
### Look in the `CVS/Entries' file inside each directory, or issue the
### command "cvs status filename".  This script will then report on
### subsequent updates to the source language file.
###
### Please adjust the `src' and `tgt' variables below to reflect your
### own default source and target language directories.
###
### Example use:
###     transcheck --help
###         List options and usage
###
###     transcheck --source ~/webwml/english --target ~/webwml/norwegian
###         List every file that has not been updated to the latest
###         version inside the target top-level directory 
###         `~/webwml/norwegian'.
###
###     transcheck --verbose distrib
###         List files that have not been updated to the latest
###         revision, plus any missing files, in the subdirectory
###         `distrib' inside the default target directory.
###
###     transcheck --add-missing intro
###         Report on the subdirectory `intro', and if any files are
###         missing in the target directory, copy them from the source
###         directory with an added revision number from CVS.  Once
###         these files are translated, they can then be added to CVS:
###              cvs add file.wml
###
########################################################################

export PATH=/usr/bin:/bin
progname=`basename $0`

src=english
tgt=norwegian
verbose=false
detailed=false
showdiff=false
addmissing=false
subdirs=

trap "exit 1" 2 3 15

procdir()
{
    dir=$1
    subdirs=

    if [ ! -d "$src/$dir" ]
    then
	echo "*** Source directory \`$src/${dir%/}' does not exist" >&2
	break
    fi

    $detailed && echo "--- Source directory $src${dir:+/}${dir%/}"
    $detailed && echo "+++ Target directory $tgt${dir:+/}${dir%/}"

    exec < ${src}/${dir}CVS/Entries
    while IFS=/ read -r type file sver remainder
    do
	msg="$dir$file: source=$sver"

	if [ ! "$file" ]
	then
	    $detailed && echo "${dir}CVS/Entries: empty name"

	elif [ "$type" = "D" ]
	then
	    $detailed && echo "${dir}CVS/Entries: adding subdirectory \`$file'"
	    subdirs="${subdirs} ${dir}${file}/"

	elif [ "${file:${#file}-4}" != ".wml" ]
	then
	    $detailed && echo "$msg, not a .wml file"

	elif [ ! -f "$tgt/$dir$file" ]
	then
	    if $addmissing && [ -f "$src/$dir$file" ]
	    then
		mkdir -p $tgt/$dir
		echo "#<!--translation $sver-->"  > "$tgt/$dir$file"
		echo "$(<$src/$dir$file)"        >> "$tgt/$dir$file"
		echo "$msg, target did not exist, created"
	    else
		$verbose && echo "$msg, target does not exist"
	    fi
	elif ! grep -qs "/$file/" ${tgt}/${dir}CVS/Entries
	then
	    echo "$msg, target exists but has no CVS entry"
	else
	    text=$(<$tgt/$dir$file)
	    text=(${text#*translation })
	    tver=${text//[^0-9.]}

	    case "$tver" in
	      $sver)
		$verbose && echo "$msg, target is current"
		;;

	      [0-9]*)
		echo "$msg, target=$tver, needs update"
		$showdiff && cvs -z3 diff -r"$tver" -r"$sver" "$src/$dir$file"
		;;

	      "")
		echo "$msg, target has no version info"
		;;

	    esac
	fi
    done

    for subdir in ${subdirs}
    do
	procdir "$subdir"
    done
}


usage() {
    [ -n "$1" ] && exec >&2 && echo "*** ${progname}: $*" && echo ""
    echo "Usage: ${progname} [ options ] [ subdirectory ... ]"
    echo ""
    echo "Options:"
    echo "    -h|--help          Brief help (this text)"
    echo "    -v|--verbose       Print more information"
    echo "    -w|--extra-verbose Print too much information for your own good"
    echo "    -s|--source <dir>  Source language directory [$src]"
    echo "    -t|--target <dir>  Target language directory [$tgt]"
    echo "    -d|--differences   Show differences in updated files"
    echo "    -a|--add-missing   Copy missing files from source, add version"
    echo ""
    echo "If no subdirectories are given, processing starts at top level."
    echo ""
    [ -n "$1" ] && exit 1 || exit 0
}


while [ "$1" ]
do
    case "$1" in
	-h|--help)
	    usage ""
	    ;;

	-s|--source)
	    [ "$2" ] || usage "Well, what directory do you translate from?"
	    src="${2%/}"
	    shift
	    ;;

	-t|--target)
	    [ "$2" ] || usage "Well, what directory do you translate to?"
	    tgt="${2%/}"
	    shift
	    ;;

	-v|--verbose)
	    verbose=true
	    ;;

	-w|--extra-verbose)
	    verbose=true
	    detailed=true
	    ;;

	-d|--diff|--differences)
	    showdiff=true
	    ;;

	-a|--add-missing)
	    addmissing=true
	    ;;

	-*)
	    usage "Invalid option: \`$1'"
	    ;;

	*)
	    subdirs="${subdirs} ${1%/}/"
	    ;;
    esac
    shift
done

[ -d "$src" ] || usage "Source directory \`$src' does not exist"
[ -d "$tgt" ] || usage "Target directory \`$tgt' does not exist"


if $addmissing && [ ! "$subdirs" ]
then
    echo "*** You have asked to copy all missing files from \`$src'"
    echo "*** to \`$tgt', adding a version tag at the beginning of"
    echo "*** each file, starting at the top level directory."
    echo ""
    echo -n ">>> Are you sure you want to do this? (y/n) "

    read -r answer
    while [ "${answer:0:1}" != "y" ] && [ "${answer:0:1}" != "n" ]
    do
        echo -n ">>> Please answer 'y' or 'n'.  Copy all missing files? "
        read -r answer
    done

    echo ""
    if [ "$answer" == "y" ]
    then
	echo "Ok, I will do as you say."
    else
	echo "Phew, glad I asked.  You can perform this operation on certain"
	echo "subdirectories by specifying them on the command line, e.g."
	echo "      $progname --add-missing distrib"
	echo ""
	addmissing=false
    fi
fi

for subdir in ${subdirs:-""}
do
    procdir $subdir
done

