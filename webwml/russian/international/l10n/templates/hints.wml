#use wml::debian::template title="Рекомендации по локализации шаблонов Debconf"
#include "$(ENGLISHDIR)/international/l10n/templates/menu.inc"
#use wml::debian::translation-check translation="1.10"

<h2>Основные понятия</h2>
<p>
  Чтобы поддерживать переводы актуальными, интернационализированное приложение
  должно предоставлять переводчику простой способ обнаруживать и устранять
  устаревшие переводы.
</p>

<p>
  Файл шаблонов Debconf состоит из полей и значений. Переведённые поля следуют
  определённой схеме обозначений, например <code>Description-es</code> означает
  испанское описание. На самом деле, сначала будет проверено
  <code>Description-es_ES</code> (или <code>Description-es_MX</code> или
  что-то ещё).
</p>

<p>
  Таким образом, чтобы обнаружить устаревшие переводы, нужно знать какая строка
  использовалась при переводе описания. Способ Debconf состоит в том, чтобы
  хранить в файле шаблонов только исходные поля, а переведённые поля, вместе
  с соответствующими английскими полями, помещать в другой файл, называющийся
  <code>templates.xx</code> или <code>templates.xx_XX</code> в зависимости от
  языка. Ниже приведены советы, которые должны помочь в работе с отдельными
  файлами.
</p>

<h2>Первоначальный перевод</h2>

<p>
  Перед работой над пакетом, пожалуйста проверьте
  <a href="http://auric.debian.org/~grisu/debian_translation/">сервер перевода
  шаблонов Grisu</a> и BTS, чтобы удостоверится, в том что сопровождающий
  ещё не получил перевод. Убедившись в этом, загрузите файл шаблонов со
  <a href="./">страницы языка</a> или с вышеприведённой ссылки, а затем
  выполните
</p>
<pre>$ debconf-getlang xx templates &gt; templates.xx</pre><p>
  чтобы создать файл с пустыми полями перевода. Не удаляйте исходные поля,
  они необходимы для отслеживания устаревших переводов! Когда перевод
  готов, проверьте переведены ли все строки, выполнив
</p>
<pre>$ debconf-getlang --stats templates templates.xx</pre><p>
  и отправьте переведённый файл сопровождающему.
</p>

<h2>Слияние переводов</h2>

<p>
  Поскольку сопровождающий, скорее всего, также читал эту страницу, он знает,
  что для облегчения работы переводчиков, он не должен сливать шаблоны, а
  должен сохранять файлы в каталоге <tt>debian</tt> как есть.
</p>

<p>
  Переведённые файлы шаблонов объединяются только при сборке бинарного пакета.
  debhelper делает это автоматически, если вы выполните команду 
  <tt>dh_installdebconf</tt> в <tt>debian/rules</tt>. Если вы не используете
  debhelper, выполните команду наподобие:
</p>
<pre>
cd debian &amp;&amp; debconf-mergetemplate templates templates.* &gt; tmp/DEBIAN/templates
</pre>

<p>
  Так сопровождающий получит переведённые файлы шаблонов и поместит их в
  нужное место. Больше ничего не требуется.
</p>

<h2>Обновление перевода</h2>
<p>
  Теперь рассмотрим ситуацию, когда после внедрения первоначального перевода
  в пакет, формулировка в английских шаблонах была изменена. Изменения должны
  быть включены в исходные шаблоны. Для этого тоже используется
  команда <tt>debconf-getlang</tt>:
</p>
<pre>$ debconf-getlang xx templates templates.xx &gt; new.xx</pre>
<p>
  которая вставляет в конец устаревших полей тэг <tt>-fuzzy</tt> и вставляет
  выше пустую строку. Переводчик редактирует <tt>new.xx</tt>, обновляя
  устаревшие переводы, и проверяет командой
</p>
<pre>$ debconf-getlang --stats templates new.xx</pre>
<p>
  все ли строки переведены. После этого он переименовывает <tt>new.xx</tt> в
  <tt>templates.xx</tt> и отправляет этот файл сопровождающему, который делает
  то же, что и в прошлый раз.
</p>

<h2>Полный пример</h2>

<p>
  Приведём гипотетический пример, который иллюстрирует шаги, описанные выше.
  Рассмотрим следующий файл шаблонов, который, для удобства, назовём
  <code>debconf.templates</code>:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Slang, Text, Editor, Dialog, Gnome, Noninteractive
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The slang frontend provides a colorful, full-screen, character based
 windowing interface, while the text frontend uses a more traditional plain
 text interface, and the gnome frontend is a modern X interface. The editor
 frontend lets you configure things using your favorite text editor.  The
 noninteractive frontend never asks you any questions. The dialog frontend
 is a primitive frontend that is being phased out.
</pre>

<p>
  Для перевода на французский язык переводчик выполняет команду
</p>
<pre>$ debconf-getlang fr debconf.templates &gt; debconf.templates.fr</pre>
<p>
  и создаёт файл <code>debconf.templates.fr</code> с пустыми полями перевода:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Slang, Text, Editor, Dialog, Gnome, Noninteractive
<b>Choices-fr:</b>
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The slang frontend provides a colorful, full-screen, character based
 windowing interface, while the text frontend uses a more traditional plain
 text interface, and the gnome frontend is a modern X interface. The editor
 frontend lets you configure things using your favorite text editor.  The
 noninteractive frontend never asks you any questions. The dialog frontend
 is a primitive frontend that is being phased out.
<b>Description-fr:</b>
</pre>
<p>
  После того, как пустые поля заполнены, переводчик получает следующий 
  файл <code>debconf.templates.fr</code>:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Slang, Text, Editor, Dialog, Gnome, Noninteractive
Choices-fr: Slang, Texte, Йditeur, Dialogue, Gnome, Non-interactif
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The slang frontend provides a colorful, full-screen, character based
 windowing interface, while the text frontend uses a more traditional plain
 text interface, and the gnome frontend is a modern X interface. The editor
 frontend lets you configure things using your favorite text editor.  The
 noninteractive frontend never asks you any questions. The dialog frontend
 is a primitive frontend that is being phased out.
Description-fr: Quelle interface utiliser pour configurer les paquets ?
 Les paquets utilisant debconf pour leur configuration partagent la mкme
 apparence et ergonomie. Vous pouvez choisir leur interface utilisateur.  
 .
 'Slang' est une interface couleur en plein йcran basйe sur une interface 
 fenкtrйe en mode caractиre. 'Texte' est une interface en mode texte, plus
 traditionnelle et sans fioriture, et 'Gnome' est une interface X
 moderne. L'interface 'Йditeur' vous permet de faire vos configurations
 depuis votre йditeur favori. Si vous choisissez 'Non-interactif', le
 systиme ne vous posera jamais de question.  'Dialogue' est une interface
 primitive et dйpassйe. 
</pre>

<p>
  После этого переводчик отправляет переведённый файл
  <code>debconf.templates.fr</code> сопровождающему пакета Debian.
</p>

<p>
  Сопровождающий пакета помещает файл <code>debconf.templates.fr</code> в
  подкаталог <code>debian/</code>. Поскольку он использует
  <code>dh_installdebconf</code> в <code>debian/rules</code>, для слияния
  шаблонов ему не нужны специальные средства. Слияние шаблонов происходит
  автоматически программой <code>dh_installdebconf</code> при сборке
  двоичного пакета.
</p>

<p>
  Несколько недель спустя сопровождающий пакета заканчивает работу над новым
  внешним интерфейсом, и редактирует <code>debconf.templates</code>:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Dialog, Readline, Gnome, Editor, Noninteractive
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The dialog frontend is a full-screen, character based interface, while the
 readline frontend uses a more traditional plain text interface, and the gnome
 frontend is a modern X interface. The editor frontend lets you configure
 things using your favorite text editor. The noninteractive frontend never
 asks you any questions.
</pre>


<p>
  Но поскольку он не говорит по-французски, он не может отредактировать
  <code>debconf.templates.fr</code>, но в любом случае решает создать новую
  версию своего пакета.
</p>

<p>
  К счастью, поскольку он <i>правильно</i> написал файлы шаблонов, это
  несоответствие видимо на странице <a
  href="fr">http://www.debian.org/intl/l10n/templates/fr</a>, потому что строка
  отмечена в этом пакете как <b>fuzzy</b> (неточная). Несколько дней спустя один
  из французских переводчиков обращает внимание на эту неточную строку и хочет её
  исправить. Вначале он загружает новый файл <code>debconf.templates</code>,
  затем запускает:
</p>
<pre>$ debconf-getlang --stats debconf.templates debconf.templates.fr 
fr: 2 fuzzy translations</pre>
<p>
  убеждаясь, что перевод не является актуальным.
</p>
<p>
  Переводчик должен перевести файл <code>debconf.templates.fr</code> снова и
  будет редактировать временный файл <code>new.fr</code> созданный командой:
</p>

  <pre>$ debconf-getlang fr debconf.templates debconf.templates.fr &gt; new.fr</pre>

<p>
  Этот файл <code>new.fr</code> выглядит так:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Dialog, Readline, Gnome, Editor, Noninteractive
<b>Choices-fr</b>:
<b>Choices-fr-fuzzy</b>: Slang, Texte, Йditeur, Dialogue, Gnome, Non-interactif
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The dialog frontend is a full-screen, character based interface, while the
 readline frontend uses a more traditional plain text interface, and the
 gnome frontend is a modern X interface. The editor frontend lets you
 configure things using your favorite text editor. The noninteractive
 frontend never asks you any questions.
<b>Description-fr</b>:
<b>Description-fr-fuzzy</b>: Quelle interface utiliser pour configurer les paquets ?
 Les paquets utilisant debconf pour leur configuration partagent la mкme
 apparence et ergonomie. Vous pouvez choisir leur interface utilisateur.
 .
 'Slang' est une interface couleur en plein йcran basйe sur une interface
 fenкtrйe en mode caractиre. 'Texte' est une interface en mode texte, plus
 traditionnelle et sans fioriture, et 'Gnome' est une interface X moderne.
 L'interface 'Йditeur' vous permet de faire vos configurations depuis votre
 йditeur favori. Si vous choisissez 'Non-interactif', le systиme ne vous
 posera jamais de question.  'Dialogue' est une interface primitive et
 dйpassйe.
</pre>
<p>
  Неточные поля просто определить, и переводчик, быстро заканчивает работу над
  <code>new.fr</code>:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Dialog, Readline, Gnome, Editor, Noninteractive
Choices-fr: Dialogue, Readline, Gnome, Йditeur, Non-interactif
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The dialog frontend is a full-screen, character based interface, while the
 readline frontend uses a more traditional plain text interface, and the
 gnome frontend is a modern X interface. The editor frontend lets you
 configure things using your favorite text editor. The noninteractive
 frontend never asks you any questions.
Description-fr: Quelle interface utiliser pour configurer les paquets ?
 Les paquets utilisant debconf pour leur configuration partagent la mкme
 apparence et ergonomie. Vous pouvez choisir leur interface utilisateur.
 .
 <Dialogue> est une interface couleur en plein йcran en mode caractиre.
 <Readline> est une interface plus traditionelle en mode texte. <Gnome> est
 une interface X moderne. L'interface <Йditeur> vous permet de faire vos
 configurations depuis votre йditeur favori. Si vous choisissez  
 <Non-interactif>, le systиme ne vous posera jamais de question.
</pre>

<p>
  Он переименовывает его в <code>debconf.templates.fr</code> и отправляет
  сопровождающему пакета, который заменяет предыдущий файл
  <code>debian/debconf.templates.fr</code> этим обновлением.
</p>

