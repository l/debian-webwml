#use wml::debian::template title="Схема работы сети автоматической сборки (autobuilder)" BARETITLE="true"
#use wml::debian::translation-check translation="1.9" maintainer="Lev Lamberov"

<P>
Сердцем системы является база данных <TT>wanna-build</TT>, в которой
отслеживаются версии пакетов и их состояния. После каждого обновления архива <TT>quinn-diff</TT>
сравнивает список пакетов для целевой архитектуры со списком пакетов с
исходным кодом и передаёт базе данных список пакетов,
которые необходимо перекомпилировать; в базе данных они получают статус
<TT>Needs-Build</TT>.

<P>
Все службы сборки (их может быть несколько) регулярно опрашивают базу данных
о таких пакетах и выбирают некоторые из них, последние получают
статус <TT>Building</TT>. Конечно, люди тоже могут выбирать
пакеты, напр. в особых случаях, когда автоматическая компиляция
невозможна. Здесь мы видим и вторую цель <TT>wanna-build</TT>:
она гарантирует, что одна версия пакета не будет собрана дважды.

<DIV class="center"><A name="autobuilder34"></A>
<IMG SRC="scheme.png" alt="Autobuilder scheme">
<p><STRONG>Рисунок:</STRONG>
Состояния пакетов и перемещения</p>
</DIV>

<P>
Если всё идёт хорошо, позже готовый пакет может быть загружен,
что соответствует другому состоянию, <TT>Uploaded</TT>. После этого он будет
установлен в архив Debian и появится в
обновлённом списке пакетов для целевой архитектуры. Этот список будет
объединён с базой данных, а пакет перейдёт в состояние
<TT>Installed</TT> и останется в нём до тех пор, пока не появится следующая версия пакета с исходным кодом.

<P>
Имеются несколько других состояний; они включают в себя следующие: <TT>Failed</TT> для
пакетов, которые не удалось собрать из-за ошибок в исходном коде, и
ожидается, что эти ошибки будут исправлены в следующей версии (после
сообщения о проблеме, конечно). Поэтому новая версия сразу же
перейдёт в состояние <TT>Needs-Build</TT>, но с предупреждением о том, что что-то
было не так с предыдущей версией. Вместе с этим состоянием сохраняется
и описание ошибки. Состояние <TT>Dep-Wait</TT> используется, когда пакету
для компиляции требуются некоторые другие пакеты, но они пока не доступны
и должны быть собраны до этого пакета. Это состояние сохраняет список требуемых
пакетов и, возможно, версий, и если все они будут
установлены в архив, состояние исходного пакета снова изменится на <TT>Needs-Build</TT>.

<P>
Как мы уже видели, службы сборки выбирают пакеты из
базы данных для компиляции. Рассмотрим это подробнее. Если в базе данных
имеются некоторые пакеты, которые нужно собрать, для фактической компиляции используется
<TT>sbuild</TT>, а каждый журнал сборки отправляется сопровождающему
службы. Он просматривает журнал и решает, что делать с пакетом:
загрузить его, установить ему состояние <TT>Failed</TT> или <TT>Dep-Wait</TT> и повторить сборку
и т.д. Если получено положительное подтверждение (подписанный файл
<TT>.changes</TT>), служба перемещает пакет в каталог загрузки, откуда все
пакеты загружаются при помощи задачи cron.

<P>
Просмотр файлов журналов является единственным вмешательством человека в весь
процесс сборки, если, конечно, не происходит ошибок. Имеются две причины того, чтобы
больше не автоматизировать этот процесс. Во-первых, иногда сборки заканчиваются с результатом «OK»,
но сборка всё равно может завершиться неудачно по причинам, которые
машина определить не может. А во-вторых, для загрузки напрямую потребовалось бы
автоматически подписывать получившиеся файлы ключом без
пароля на машине сборки. Мне это кажется недопустимой
дырой в безопасности.

<P>
Сценарий сборки <TT>sbuild</TT> более или менее лишь вызывает некоторые стандартные
инструменты Debian для компиляции исходного кода. Он также помогает некоторым общим
задачам и ведению учёта с автоматической установкой
зависимостей, необходимых для сборки, которые требуются собираемым пакетом.

<hrline />
<p><small>Содержание разработано Романом Ходеком (Roman Hodek) для
6-ого международного Linux-конгресса 1999 года; оно было слегка обновлено Филиппом Керном (Philipp Kern) для
отражения настоящего положения дел в 2009 году</small></p>
