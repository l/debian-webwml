#use wml::debian::template title="Сеть автоматической сборки"
#use wml::debian::translation-check translation="1.26" maintainer="Lev Lamberov"

<p>Сеть автоматической сборки (autobuilder) является разработкой Debian, управляющей
компиляцией пакетов для всех <a href="$(HOME)/ports/">поддерживаемых в настоящее время в Debian</a>
архитектур. Эта
сеть состоит из нескольких машин, использующих специальный пакет ПО,
называемый <em>buildd</em> для выборки пакетов из архива Debian
и пересборки их для целевой архитектуры.</p>

<h2>Зачем нужна сеть автоматической сборки?</h2>

<p>Дистрибутив Debian поддерживает <a href="$(HOME)/ports/">довольно
много архитектур</a>, но сопровождающие пактов обычно компилируют
двоичные версии только для одной архитектуры, к которой у них есть доступ
(обычно i386 или amd64). Другие сборки создаются автоматически,
гарантируя, что каждый пакет будет собран только один раз. Неудачные попытки сборки
отслеживаются в базе данных автоматического сборщика.</p>

<p>
Когда был начат перенос Debian/m68k (первый перенос на платформу, отличную от Intel), его разработчикам
приходилось следить за новыми версиями пакетов и перекомпилировать их,
если они хотели, чтобы эти пакеты были актуальны относительно дистрибутива на платформе Intel. Всё
это делалось вручную: разработчики отслеживали в списке рассылки загрузки пакетов новые
пакеты и выбирали некоторые из них для сборки. Координация того, что ни один
пакет не будет собран дважды разными людьми, происходила путём анонсирования в
списке рассылки. Очевидно, эта процедура подвержена ошибкам и
затратна в плане времени. Тем не менее, на протяжении долгого времени это было обычным способом
поддержания актуальности выпусков для платформ, отличных от i386.
</p>

<p>
Система службы сборки автоматизирует большую часть этого процесса. Она состоит из
набора сценариев (написанных на Perl и Python), которые со временем были разработаны
для того, чтобы помочь тем, кто осуществляет перенос, в решении различных задач. Наконец они развились
до уровня системы, которая способна поддерживать выпуски Debian в актуальном состоянии почти целиком
автоматически. Обновления безопасности собираются на том же наборе
машин, чтобы гарантировать своевременную доступность этих обновлений.
</p>

<h2>Как работает buildd?</h2>

<p><em>Buildd</em> &mdash; имя, которое обычно даётся программному обеспечению, используемому 
сетью автоматической сборки, но в действительности это ПО состоит из нескольких частей:</p>

<dl>

<dt>wanna-build</dt>
<dd>
инструмент, который помогает координировать (пере)сборку пакета с помощью базы данных,
в которой хранится список пакетов и их статус. Существует одна центральная
база данных для каждой архитектуры, в которой сохраняются состояния пакета, версии и
некоторая другая информация. База данных наполняется содержанием файлов Sources и Packages,
получаемых из различных архивов пакетов Debian (напр.,
ftp-master и security-master).
</dd>

<dt><a href="http://packages.debian.org/buildd">buildd</a></dt>
<dd>
служба, периодически проверяющий базу данных, поддерживаемую
<em>wanna-build</em> и вызывающий <em>sbuild</em> для сборки пакетов.
После принятия журнала сборки администратором buildd, эта служба загружает
пакет в соответствующий архив.
</dd>

<dt><a href="http://packages.debian.org/sbuild">sbuild</a></dt>
<dd>
ответственна за фактическую компиляцию пакетов в изолированных окружениях chroot.
Она гарантирует, что все требуемые для исходного кода зависимости будут установлены в
chroot до начала сборки, и затем вызывает стандартные инструменты Debian для запуска
процесса сборки. Журналы сборки отправляются в
<a href="https://buildd.debian.org">базу данных журналов сборки</a>.
</dd>

</dl>

<p>Все эти части <a href="operation">функционируют</a>
вместе для того, чтобы работала сеть сборки.</p>

<h2>Что должен делать разработчик Debian?</h2>

<p>В действительности, обычному разработчику Debian не нужно явным образом использовать
сеть buildd. Когда он загружает пакет в архив
(двоичный скомпилированный пакет для данной архитектуры), он будет добавлен в базу данных
для всех архитектур (в состоянии <em>Needs-Build</em>). 
Машины сборки отправят запрос в базу данных о наличии пакетов в этом состоянии,
и в плановом порядке получат пакеты из этого списка. Список
отсортирован по предыдущему состоянию компиляции (либо <em>out-of-date</em>,
либо <em>uncompiled</em>), приоритету, разделу и имени пакета. Более того,
для того, чтобы не допустить задержки некоторых пакетов в конце очереди, приоритет
пакетов динамически увеличивается с увеличением времени ожидания в очереди.</p>

<p>Если сборка завершилась успешно для всех архитектур, сопровождающему больше
ничего делать не нужно. Все эти двоичные пакеты будут загружены в
соответствующий архив. Если сборка не была успешна, пакет
входит в специальное состояние (<em>Build-Attempted</em> для неудач при сборки, которые
не были просмотрены администратором, <em>Failed</em> для просмотренных администратором и
указанных в отчёте об ошибке, либо <em>Dep-Wait</em>, если они зависят от конкретных сборочных зависимостей,
которые пока недоступны).
Администраторы сети автоматической сборки просматривают пакеты, сборка которых не была успешна,
и сообщают о проблемах сопровождающему, обычно путём открытия ошибки в
системе отслеживания ошибок.</p>

<p>Иногда для того, чтобы собрать пакет для данной архитектуры,
требуется большое количество времени, что не даёт пакету войти в <a href="$(HOME)/devel/testing">\
тестируемый выпуск</a>. Если переход пакета задерживается, по запросу выпускающей команды
обычно изменяются его приоритет сборки. Другие запросы
не будут приняты, поскольку увеличение времени ожидания в очереди приведёт к
автоматическому увеличению приоритета сборки.</p>

<p>Вы можете проверить статус различных попыток сборки пакетов с помощью buildd,
относящихся к любому данному сопровождающему, просмотрев 
<a href="https://buildd.debian.org/status/">журналы buildd</a>. 
Ссылки на эти журналы имеются также со страницы обзора сопровождающего пакетов.</p>

<p>Дополнительную информацию о различных состояниях пакетов см.
на странице <a href="wanna-build-states">wanna-build-states</a>.</p>

<h2>Где я могу найти дополнительную информацию?</h2>

<p>Конечно, доступная документация и исходный код этих
инструментов является лучшим способом понять то, как работает
сеть buildd. Дополнительно см. раздел
<a href="$(HOME)/doc/manuals/developers-reference/pkgs#porting">\
Перенос и переносимое</a> 
<a href="$(HOME)/doc/manuals/developers-reference/">Руководств разработчика
Debian</a>, где представлена дополнительная информация о том, как работает сеть автоматической
сборки, также там представлена некоторая информация о
<a href="$(HOME)/doc/manuals/developers-reference/tools#tools-builders">\
сборщиках пакетов</a> и
<a href="$(HOME)/doc/manuals/developers-reference/tools#tools-porting">\
инструментах переноса</a>, которые используются в процессе установки и настройки, а также
сопровождения сети buildd.</p>

<p>На <a href="https://buildd.debian.org/stats/">странице статистики buildd</a>
доступна некоторая статистика о работе сети автоматической сборки.</p>

<h2>Как я могу настроить собственный узел сети автоматической сборки?</h2>

<p>Вот несколько причин, почему разработчик (или пользователь)
может захотеть установить и запустить автоматический сборщик:</p>

<ul>
<li>Чтобы помочь в разработке переноса на данную архитектуру (когда требуются
автоматические сборщики).</li>
<li>Чтобы оценить влияние данной оптимизации компилятора или заплаты
путём перекомпилирования большого подмножества пакетов.</li>
<li>Чтобы запустить инструменты для анализа пакетов на наличие известных ошибок, которые
выявляются в скомпилированных пакетах. Это также необходимо для выполнения анализа
исходного кода, напр., в качестве проверки пакетов
с использованием <tt>dpatch</tt>.</li>
</ul>

<p>См. дополнительную информацию о том, как
<a href="https://buildd.debian.org/docs/buildd-setup.txt">настроить автоматический сборщик</a>.</p>

<h2>Связь с администраторами buildd</h2>

<p>Связаться с администраторами, ответственными за buildd для какой-то определённой архитектуры, можно
по адресу <email arch@buildd.debian.org>, напр. <email
i386@buildd.debian.org>.</p>

<hrline />
<p><small>Это введение в сеть автоматической сборки было написано
Романом Ходеком (Roman Hodek), 
Кристианом Штайгисом (Christian T. Steigies), Вутером Ферелстом (Wouter Verhelst), Андреасом Бартом (Andreas Barth), 
Франческо Паоло Ловержи (Francesco Paolo Lovergine), Хавьером Фернандез-Сангуино (Javier Fern&aacute;ndez-Sanguino) и
Филиппом Керном (Philipp Kern).</small></p>
