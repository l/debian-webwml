#use wml::debian::template title="Пример автоматического аудита: pscan"
#use wml::debian::recent_list
#use wml::debian::translation-check translation="1.5" maintainer="Lev Lamberov"

<p><a href="http://packages.debian.org/pscan">pscan</a> &mdash; пакет, разработанный для аудита уязвимостей форматных строк в файлах с исходным кодом на C и C++.</p>
<p>Эта программа не является инструментом аудита общего назначения.</p>

<h2>Запуск pscan</h2>
<p>Запуск pscan представляет собой вызов pscan с именем файла или файлов, которые следует проверить.  Например:</p>
<pre>
pscan <a href="test.c.html">test.c</a>
</pre>
<p>Вывод будет отображён в консоли:</p>
<hr />
<samp>
test.c:42 SECURITY: printf call should have "%s" as argument 0
</samp>
<hr />

<h2>Вывод</h2>
<p>Вывод в этом случае легко понять. Было верно установлено, что
 вызов <tt>printf</tt> не заключает свои аргументы в
 кавычки.</p>
<p>Этот вывод также показывает, что мы должны (чтобы исправить исполнение) изменить этот код:
<pre>
printf( buff );
</pre>
<p>На этот код:</p>
<pre>
printf( "%s", buff );
</pre>
<p>Если этого не сделать, атакующий, контролирующий вывод <tt>ls</tt>, сможет атаковать программу, создав файл с именем «%s» или схожим.</p>
<p>Атаки форматных строк обсуждаются <a href="http://www.securityfocus.com/guest/3342">в этом введении от Security Focus</a>.</p>
<p><a href="http://www.dwheeler.com/secure-programs/">HOWTO по безопасному программированию для Linux и Unix</a> содержит информацию о том, как защититься от атак, обычно используемых для атаки функций с переменным количеством параметров, таких как:</p>
<ul>
<li>printf</li>
<li>fprintf</li>
<li>syslog</li>
</ul>
<hr />
<p><a href="..">Назад на страницу Проекта по аудиту</a> | <a href="index">Назад на страницу примеров аудита</a></p>
