#use wml::debian::template title="Руководство по приоритету пакетов для аудита"
#use wml::debian::recent_list
#use wml::debian::translation-check translation="1.16" maintainer="Lev Lamberov"

<p>При выполнении аудита выпуска Debian одной из
наиважнейших проблем является выбор того, какие пакеты следует проверить.</p>

<p>В идеале, все пакеты должны быть проверены, но из-за размера
архива требуется способ расстановки рабочих приоритетов.</p>

<p>В качестве простого набора правил для определения тех пакетов, которые желательно
исследовать в первую очередь, может использоваться следующий список:</p>

<ol>
<li>Всякий двоичный файл, с установленным setuid или setgid.</li>

<li>Всё, что предоставляет сервис через сети.</li>

<li>Все доступные удалённо CGI/PHP сценарии.</li>

<li>Всё, что содержит задачу cron или другой автоматизированный сценарий,
выполняемый с правами root.</li>

</ol>

<p>По большей части популярные пакеты должны получать более высокий приоритет, поскольку любые
проблемы в них повлияют на большее число пользователей.</p>

<p><a href="https://popcon.debian.org/">Debian Popularity
Contest</a> продолжает сбор информации, показывающий то, какие пакеты
более популярны среди добровольных участников этого исследования.</p>

<p>В частности, обратите внимание на
<a href="https://popcon.debian.org/by_vote">пакеты, отсортированные по голосам</a>.
Список <q>по голосам</q> ранжирует пакеты по тому, как часто они используются
людьми, участвующими в исследовании.</p>

<p>Если пакет является важным с точки зрения безопасности, особенно если он отвечает
одному из приведённых выше критериев, и он популярен (согласно исследованию на подобие
уже приведённого), то он <em>определённо</em> является кандидатом для проверки.</p>


<h2>Двоичные файлы с <tt>setuid</tt> и <tt>setgid</tt></h2>

<p>Двоичные файлы с <tt>setuid</tt> и <tt>setgid</tt> являются традиционными
целями аудита безопасности, поскольку компрометирование уязвимого двоичного файла,
с выставленными правами setuid или setgid, может привести к тому, что локальный пользователь получит доступ к
правам, которыми он не должен обладать.</p>

<p>Для облегчения поиска существует список всех двоичных файлов с setuid и setgid,
содержащихся в текущем стабильном выпуске.
</p>

<ul>

<li><a href="https://lintian.debian.org/tags/setuid-binary.html">Отчёт Lintian
о двоичных файлах с Setuid в Debian</a></li>

<li><a href="https://lintian.debian.org/tags/setgid-binary.html">Отчёт Lintian
о двоичных файлах с Setgid в Debian</a></li>

</ul>

# TODO (jfs): the above does not provide the same information as was available at
# http://shellcode.org/Setuid/
# ask Steve Kemp to move this feature to a Debian-administered machine?
# (or to the Alioth project)
#

<p>При сортировке этих двоичных файлов для проверки важно помнить, что
некоторые из них более чувствительны к проблемам безопасности, чем другие.
Двоичные файлы с setuid(root) должны проверяться раньше, чем двоичные файлы с setgid(games) или,
к примеру, с setuid(bugs).</p>


<h2>Сетевые серверы</h2>

<p>Сетевые серверы представляют собой другой очевидный объект внимания во
время выполнения аудита безопасности, поскольку проблема в
них может привести к тому, что атакующие смогут компрометировать машины удалённо.</p>

<p>Удалённые риски обычно намного более существенны, чем локальные
риски.</p>

<h2>Online сценарии</h2>

<p>Online сценарии, в особенности CGI-сценарии, в действительности находятся в
том же классе сетевых серверов &mdash; хотя ваш веб-сервер сам по себе может быть
безопасен, сценарии, которые выполняются на нём, так же важны.</p>

<p>Ошибка в сценарии, который доступен по сети, является такой же
серьезной ошибкой в сервере, прослушивающем соединения &mdash; оба равным образом могут
позволить компрометировать вашу машину.</p>

<h2>Задачи cron и системные службы</h2>

<p>Хотя автоматических сценариев, задач cron и проч. не так много, стоит
проверять те, что включены в содержимое
пакетов.</p>

<p>Множество вспомогательных программ выполняются по умолчанию с правами root для очистки
файлов журналов и проч.</p>

<p>Успешное использование symlink-атаки может привести к тому, что локальная
машина будет компрометирована.</p>

