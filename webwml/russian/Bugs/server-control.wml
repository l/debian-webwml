#use wml::debian::template title="Debian BTS &mdash; сервер управления" NOHEADER=yes NOCOPYRIGHT=true
#use wml::debian::translation-check translation="1.57"

<h1>Введение в управление ошибками и работу с почтовым сервером</h1>

<p>Кроме почтового сервера <code>request@bugs.debian.org</code>,
позволяющего получать по электронной почте данные об ошибке и документацию,
существует другой сервер, по адресу <code>control@bugs.debian.org</code>,
позволяющий также различным образом управлять сообщениями об ошибках.</p>

<p>Сервер управления работает так же, как и сервер запросов, за исключением
того, что имеет несколько дополнительных команд. На самом деле это та же
программа. Разные адреса введены только для того, чтобы пользователи
не делали ошибок и не создавали проблемы, пытаясь лишь запросить информацию.</p>

<p>Поскольку команды сервера управления изменяют состояние ошибки,
сопровождающему пакета(ов), с которым(и) связана ошибка, отправляется
уведомление об обработке этих команд. Кроме того, сообщение, полученное
сервером, и произведённые изменения сохраняются в журнале ошибки и,
соответственно, доступны на web-страницах.</p>

<p>Пожалуйста, прочитайте подробности работы с почтовыми серверами и список
общих команд, доступных на обоих серверах, в
<a href="server-request#introduction">введении в работу сервера запросов</a>
на www-сайте, в файле <code>bug-log-mailserver.txt</code>, либо
послав команду <code>help</code> любому из серверов.</p>

<p><a href="server-refcard">Краткое описание</a> почтовых серверов
доступно на www-сайте, в файле <code>bug-mailserver-refcard.txt</code>,
или при отправке на сервер команды <code>refcard</code>.</p>

<h1>Команды, доступные на почтовом сервере управления</h1>

<dl>

<dt><code>reassign</code> <var>номер_ошибки</var> <var>пакет</var>
 [ <var>версия</var> ]
<dd>

Делает запись о том, что ошибка #<var>номер_ошибки</var> на самом деле
относится к пакету <var>пакет</var>. Это может использоваться для
задания информации о пакете, если пользователь забыл включить псевдо-заголовок
или для изменения сопоставления, сделанного ранее. Никакие уведомления
никому не посылаются (за исключением обычной информации об обработке
запроса).

<p>Если вы предоставили <var>версию</var>, система отслеживания ошибок
отметит, что ошибке подвержена данная версия нового принятого пакета.</p>

<dt><code>reopen</code> <var>номер_ошибки</var>
 [ <var>адрес_создателя</var> | <code>=</code> | <code>!</code> ]
<dd>

Заново открывает ошибку #<var>номер_ошибки</var>, если она закрыта.

<p>По умолчанию или если вы задали <code>=</code>, создателем отчёта
по прежнему считается первый отправитель сообщения об ошибке, так что
если ошибка будет закрыта, уведомление получит именно он.</p>

<p>Если вы укажете <var>адрес_создателя</var>, создателем будет
считаться обладатель этого адреса. Если вы хотите сами считаться
создателем заново открытого сообщения об ошибке, вы можете либо указать
свой собственный адрес, либо просто поставить <code>!</code>.</p>

<p>Обычно стоит предупредить человека, которого вы собираетесь записать
создателем отчёта, что вы заново открываете ошибку, чтобы уведомление,
посылаемое при её новом закрытии, не стало для него неожиданностью.</p>

<p>Если ошибка не закрыта, reopen не делает ничего, даже не меняет
запись о создателе отчёта. Чтобы поменять создателя открытого сообщения
об ошибке, используйте команду <code>submitter</code>. Имейте в виду,
что первоначальный отправитель получит сообщение об этом изменении.</p>

<p>Если ошибка была записана как бывшая закрытой в конкретной версии пакета
но восстановлена в поздней версии, то лучше использовать команду
<code>found</code>.

<dt><code>found</code> <var>номер_ошибки</var> [ <var>версия</var> ]

<dd>Записывает, что #<var>номер_ошибки</var> была выявлена в данной
<var>версии</var> пакета, с которым она связана.

<p>Система отслеживания ошибок использует эту информацию, совместно с
исправленными версиями, записанными при закрытии ошибок, чтобы отобразить список
ошибок, открытых в различных версиях каждого пакета. Ошибка считается открытой,
когда нет исправленной версии или когда она была найдена позже чем была
исправлена.</p>

<p>Если <var>версия</var> не установлена, тогда список исправленных версий
для ошибки очищается. Это идентично поведению команды <code>reopen</code>.

<p>Эта команда была введена в предпочтение <code>reopen</code>, так как
было сложно добавить <var>версию</var> к её командному синтаксису без
внесения неясностей.</p>

<dt><code>notfound</code> <var>номер_ошибки</var> <var>версия</var>

<dd>Удаляет запись #<var>номер_ошибки</var>, встреченной в той
<var>версии</var> пакета, к которому она была назначена.

<p>Это отличается от закрытия ошибки в той версии, в которой ошибка не перечислена
как исправленная и в этой версии тоже; никакой информации об той версии
не будет известно. Это предназначено для исправления ошибок в записи о времени,
когда ошибка была найдена.</p>

<dt><code>submitter</code> <var>номер_ошибки</var>
<var>адрес_создателя</var> | <code>!</code>
<dd>

Изменяет запись об отправителе ошибки #<var>номер_ошибки</var>
на <var>адрес_создателя</var>.

<p>Если вы хотите сами считаться создателем сообщения об ошибке,
вы можете либо указать свой собственный адрес, либо просто
поставить <code>!</code>.</p>

<p>В то время как команда <code>reopen</code> изменяет создателей и
других ошибок, слитых с той, которая открывается заново,
<code>submitter</code> не влияет на слитые ошибки.</p>

<dt><code>forwarded</code> <var>номер_ошибки</var> <var>адрес</var>
<dd>

Отмечает, что сообщение об ошибке <var>номер_ошибки</var> было
отправлено разработчику оригинального пакета по адресу <var>адрес</var>.
Она сама не пересылает сообщение. Это может использоваться для
исправления существующего неправильного адреса пересылки или для добавления
нового к ошибке, которая ранее не была помечена как перенаправленная.

<dt><code>notforwarded</code> <var>номер_ошибки</var>
<dd>

Убирает все записи о том, что ошибка <var>bugnumber</var> была
переслана автору оригинального пакета. Если ошибка не помечена,
как перенаправленная, не делает ничего.

<dt><code>retitle</code> <var>номер_ошибки</var> <var>новое_название</var>
<dd>

Изменяет название сообщения об ошибке на заданное (по умолчанию им
является содержимое заголовка <code>Subject</code> (тема) первоначального
сообщения об ошибке).

<p>В отличие от большинства других команд управления ошибками, при
применении к одному отчёту из набора слитых ошибок, эта команда изменит
название только одного сообщения, а не всех слитых с ней.</p>

<dt><code>severity</code> <var>номер_ошибки</var> <var>важность</var>
<dd>

<p>Устанавливает уровень важности ошибки #<var>номер_ошибки</var>
на <var>важность</var>. Пользователю, сообщившему об ошибке,
уведомление не посылается.</p>

<p>Допустимые уровни важности: <code>critical</code>, <code>grave</code>,
<code>serious</code>, <code>important</code>, <code>normal</code>,
<code>minor</code>, и <code>wishlist</code>.

<p><a href="Developer#severities">Их значение</a> см. в общей документации
по системе отслеживания ошибок для разработчика.</p>

<dt><code>clone</code> <var>номер_ошибки</var> <var>новый идентификатор</var>
 [ <var>новые идентификаторы</var> ... ]

  <dd>Управляющая команда clone позволяет вам продублировать сообщение
  об ошибке. Это полезно в случае, когда одно сообщение на самом деле
  относится к нескольким различным ошибкам. "<var>Новые идентификаторы</var>"&nbsp;&mdash;
  это отрицательные числа, разделённые пробелами, которые могут использоваться
  в последующих командах управления для ссылки на созданные дубликаты.
  Для каждого нового идентификатора создаётся новый отчёт.

  <p>Пример использования:</p>

  <pre>
        clone 12345 -1 -2
        reassign -1 foo
        retitle -1 foo: foo sucks
        reassign -2 bar
        retitle -2 bar: bar sucks when used with foo
        severity -2 wishlist
        clone 123456 -3
        reassign -3 foo
        retitle -3 foo: foo sucks
        merge -1 -3
  </pre>

<dt><code>merge</code> <var>номер_ошибки</var> <var>номер_ошибки</var> ...
<dd>

Сливает несколько сообщений об ошибках. При открытии, закрытии,
пометке как пересланные или снятии такой отметки и при пересопоставлении
другому пакету любой из слитых ошибок то же самое произойдёт со всеми
слитыми отчётами.

<p>Перед тем, как ошибки можно будет слить, они должны быть в точности
в одном состоянии: либо все открыты, либо все закрыты, с одним и тем
же адресом пересылки автору, либо не помечены как перенаправленные,
все сопоставлены одному и тому же пакету или пакетам (требуется точное
соответствие строк с названиями пакетов), а также все иметь одну
и ту же важность. Если вначале они находятся не в одном состоянии,
вам следует перед отправкой команды <code>merge</code> использовать команды
<code>reassign</code>, <code>reopen</code> и т.д. Названия сообщений
не обязаны совпадать и никак не изменяются этой командой. Теги не обязаны
совпадать. Если они не совпадают, списки тегов будут объединены.</p>

<p>Если какая-либо из ошибок, перечисленных в команде <code>merge</code>,
уже слита с другими ошибками, то сливаются все сообщения об ошибках,
слитые с любой из перечисленных. Слияние подобно эквивалентности&nbsp;&mdash;
оно рефлексивно, транзитивно и симметрично.</p>

<p>Слияние отчётов добавляет примечание к журналу каждого отчёта,
на www-страницах оно включает ссылки на другие ошибки.</p>

<p>Слитые отчёты устаревают одновременно и только тогда, когда каждый
отдельный отчёт будет удовлетворять критериям устаревания.</p>

<dt><code>forcemerge</code> <var>номер_ошибки</var> <var>номер_ошибки</var> ...</dt>
  <dd>С силой сливает два или более отчётов сообщений об ошибках. Первая из перечисленных
  ошибок является главной ошибкой, а её установки (установки, которые для обычного слияния
  должны быть эквивалентны) назначаются ошибкам, перечисленным следующими в команде.
  Чтобы исключить ошибочного слияния ошибок из-за опечаток, ошибки должны быть в
  одном и том же пакете. Смотрите выше текст, описывающий что означает слияние.

  <p>Нужно учесть, что это делает возможным закрыть ошибку при слиянии; если вы
  сделаете это, вы несёте ответственность за уведомление людей, предоставивших
  ошибки, соответствующим закрытым письмом.</p>
  </dd>

<dt><code>unmerge</code> <var>номер_ошибки</var>
<dd>

Отсоединяет сообщение об ошибке от других сообщений, с которыми
она слита. Если указанная ошибка слита с несколькими другими, они
остаются слиты друг с другом, удаляется только их связь с указанной
ошибкой.

<p>Если слито много сообщений об ошибках и вы хотите разделить их
на две группы слитых ошибок, вы должны отсоединить каждый отчёт
одной из новых групп по отдельности, и затем слить их в новую группу.</p>

<p>Одной командой <code>unmerge</code> вы можете отсоединить только
одно сообщение. Если вы хотите отсоединить несколько ошибок, включите
в сообщение несколько команд <code>unmerge</code>.</p>

<dt><code>tags</code> <var>номер_ошибки</var> [ <code>+</code> | <code>-</code> | <code>=</code> ] <var>тег</var> [ <var>тег</var> ... ]

  <dd>Устанавливает теги отчёта об ошибки #<var>номер_ошибки</var>.
  Пользователю, сообщившему об ошибку, уведомление не отправляется. Если
  перед тегами стоит символ <code>+</code>, перечисленные <var>теги</var>
  будут установлены, <code>-</code>&nbsp;&mdash; сняты, при использовании
  <code>=</code> теги будут установлены в соответствии с заданным списком
  независимо от текущего состояния. По умолчанию теги добавляются.

  <p>Пример:</p>

  <pre>
        \# то же, что 'tags 123456 + patch'
        tags 123456 patch

        \# то же, что 'tags 123456 + help security'
        tags 123456 help security

        \# добавить теги 'fixed' и 'pending'
        tags 123456 + fixed pending

        \# снять тег 'unreproducible'
        tags 123456 - unreproducible

        \# установить теги 'moreinfo' и 'unreproducible' и снять все остальные
        tags 123456 = moreinfo unreproducible
  </pre>

  <p>Возможные теги: <code>patch</code>, <code>wontfix</code>,
  <code>moreinfo</code>, <code>unreproducible</code>, <code>help</code>,
  <code>pending</code>, <code>fixed</code>,
  <code>fixed-in-experimental</code>, <code>fixed-upstream</code>,
  <code>security</code>, 
  <code>upstream</code>, <code>confirmed</code>, <code>d-i</code>,
  <code>ipv6</code>, <code>lfs</code>, <code>l10n</code>,
  <code>potato</code>, <code>woody</code>, <code>sarge</code>,
  <code>sarge-ignore</code>, <code>etch</code>, <code>etch-ignore</code>,
  <code>sid</code> и <code>experimental</code>.</p>

  <p><a href="Developer#tags">Их значение</a> см. в общей документации
  по системе отслеживания ошибок для разработчика.</p>

<dt><code>block</code> <var>номер_ошибки</var> <code>by</code> <var>ошибка</var> ...
  <dd>Учтите, что исправление для первой ошибки блокируется другими перечисленными ошибками.

<dt><code>unblock</code> <var>номер_ошибки</var> <code>by</code> <var>ошибка</var> ...
  <dd>Учтите, что исправление для первой ошибки больше не блокируется другими перечисленными
  ошибками.

<dt><code>close</code> <var>номер_ошибки</var> [ <var>исправленная_версия</var> ]
(не рекомендуется)
<dd>

Закрывает сообщение об ошибке #<var>номер_ошибки</var>.

<p>Пользователю, отправившему сообщение об ошибке, посылается уведомление,
но (в отличие от отправки сообщения по адресу
<var>номер_ошибки</var><code>-done@bugs.debian.org</code>) в уведомление <strong>не
включается</strong> текст письма, закрывшего ошибку. Сопровождающий,
закрывший ошибку, должен убедиться, вероятно, послав отдельное письмо,
что сообщивший об ошибке пользователь знает, почему она была закрыта.
Поэтому использование этой команды не рекомендуется. См. информацию для
разработчиков о том, <a href="Developer#closing">как правильно закрывать
ошибки</a>.</p>

<p>Если вы предоставили <var>исправленную_версию</var>, система отслеживания
ошибок отметит, что ошибка была исправлена в данной версии пакета.</p>

<dt><code>package</code> [ <var>имя_пакета</var> ... ]

  <dd>Последующие команды будут относиться только к ошибкам в указанных
  пакетах. Можно перечислить несколько пакетов. Если пакеты не указаны,
  последующие команды будут относиться ко всем ошибкам. Эту возможность
  следует использовать для страховки от использования неверных номеров
  ошибок.

  <p>Пример:</p>

  <pre>
        package foo
        reassign 123456 bar 1.0-1

        package bar
        retitle 123456 bar: bar sucks
        severity 123456 normal

        package
        severity 234567 wishlist
  </pre>

<dt><code>owner</code> <var>номер_ошибки</var> <var>адрес</var> | <code>!</code>

  <dd>Делает <var>адрес</var> "хозяином" ошибки #<var>номер_ошибки</var>.
  Хозяин ошибки берёт на себя ответственность за её исправление и будет
  получать все сообщения, касающиеся этого отчёта. Это полезно для
  распределения обязанностей в команде сопровождающих пакета.

  <p>Если вы хотите стать хозяином ошибки сами, можно либо указать ваш
  собственный электронный адрес, либо использовать сокращение
  <code>!</code>.</p>

<dt><code>noowner</code> <var>номер_ошибки</var>

  <dd>Удаляет запись о каком-либо хозяине ошибки, помимо основного
  сопровождающего пакета. Если у ошибки не зафиксирован хозяин, ничего
  не делает.

<dt><code>#</code>...

  <dd>Однострочный комментарий. Символ <code>#</code> должен быть в
  начале строки. Текст комментария будет включён в уведомления отправителю
  и сопровождающим. Его можно использовать для указания причин ваших
  действий.

<dt><code>quit</code>
<dt><code>stop</code>
<dt><code>thank</code>
<dt><code>thanks</code>
<dt><code>thankyou</code>
<dt><code>thank you</code>
<dt><code>--</code>
<!-- #366093, I blame you! -->
<!-- <dt><code>kthxbye</code> -->
<!-- See... I documented it! -->

  <dd>Отдельной строкой, перед которой могут быть пробелы, 
      указывает серверу управления прекратить обработку письма, оставшаяся
      его часть может включать объяснения, подписи или что-то ещё. Она никак
      не обрабатывается сервером управления.

</dl>

<hr>

#use "otherpages.inc"

#use "$(ENGLISHDIR)/Bugs/footer.inc"
