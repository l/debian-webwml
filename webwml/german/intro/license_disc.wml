#use wml::debian::template title="Vergleich von Software-Lizenzen"
#use wml::debian::translation-check translation="1.10"

  <!--                             -*- Mode: SGML -*-
  Translator       : Philipp Frauenfelder (pfrauenf@debian.org)
  Original text    : licence_disc.html
  $Id$
  -->

<P><STRONG>******Dieses Dokument befindet sich noch in der Entwicklung******</STRONG>

<p>Leute, die mit Open Software zu tun haben, neigen dazu eine
ausgepr&auml;gte Meinung &uuml;ber die Lizenzen zu
entwickeln. Anf&auml;nger k&uuml;mmert das nicht so gro&szlig;, da sie viel
mehr daran interessiert sind, ihr aktuelles Problem zu l&ouml;sen und
nicht verstehen, was die langfristigen Folgen der Wahl einer Software
mit einer bestimmten Lizenz sein k&ouml;nnen. (Es ist sogar sehr zweifelhaft,
ob Leute, die keine ausgepr&auml;gte Meinung zu Lizenzen haben, alle Nuancen
verstehen)

<p>&Uuml;ber die Jahre haben einige Lizenzen Ber&uuml;hmtheit erlangt,
weil sie den Software-Autoren die Kontrolle &uuml;ber ihre Arbeit
geben, die sie sich w&uuml;nschen. Man findet immer noch h&auml;ufig
Software, die kein sichtbares Copyright besitzt oder eine Lizenz
beinhaltet, die der Autor f&uuml;r seine Bed&uuml;rfnisse geschrieben
hat. Letzteres kann f&uuml;r die Distributoren der Software (f&uuml;r
solche im Internet als auch f&uuml;r CD-Verk&auml;ufer) ziemlich
&auml;rgerlich sein, da viele dieser Lizenzen <a 
href="#mistakes">weitverbreitete Fehler</a> enthalten, die es
schwer machen, die Software zu verteilen.

<h2>&Uuml;bliche freie Software-Lizenzen</h2>

<p>Die nun folgende Liste enth&auml;lt &uuml;bliche freie
Software-Lizenzen (frei im Sinne von Freiheit, nicht von gratis) und
einige gute und schlechte Punkte daabei. Es sind nur die Punkte
aufgef&uuml;hrt, die in der Diskussion um die Lizenzen wichtig
sind. Ebenso gibt es Punkte, die unter &ldquo;gut / schlecht&rdquo;
aufgef&uuml;hrt sind &mdash; sie sind gut oder schlecht je nach
Standpunkt.

<UL>
<li>Die allgemeine und &ouml;ffentliche Lizenz von 
    <a href="http://www.gnu.org/">GNU</a> (GPL, GNU General Public
    License)
    <dl>
        <dt><strong>Zusammenfassung:</strong>
        <dd>Die Quellen m&uuml;ssen verf&uuml;gbar gemacht werden; die
            Software kann verkauft werden; abgeleitete Arbeiten
            m&uuml;ssen die selbe Lizenz tragen.
        <dt><strong>gut:</strong>
        <dd>Es gibt gute Gr&uuml;nde, dass diese Lizenz die am
            weitesten verbreitete f&uuml;r freie Software ist. Sie
            leistet guten Schutz f&uuml;r die Rechte der
            Software-Entwickler und die Verf&uuml;gbarkeit der Quellen
            garantiert den Benutzern, da&szlig; sie sich keine Sorgen um
            die zuk&uuml;nftige Unterst&uuml;tzung machen m&uuml;ssen.
        <dt><strong>gut / schlecht:</strong>
        <dd>Software, die unter Benutzung der GPL ver&ouml;ffentlicht
            wird, kann nicht in kommerzielle Software eingebaut
            werden. Ob das wirklich schlecht ist, h&auml;ngt von Ihrem
            Standpunkt ab. Leute, die kommerzielle Software
            entwickeln, sind oft frustriert, wenn es eine L&ouml;sung
            f&uuml;r ihr Problem gibt, die aber wegen Lizenz-Problemen
            nicht genutzt werden kann. Nat&uuml;rlich k&ouml;nnen sie
            immer noch den Autor um eine Version mit anderer Lizenz
            nachsuchen (zum Beispiel auch gegen Geld).

# Der folgende Satz ist mir in der englischen Version nicht ganz klar
# (vor allem der letzte Teil). Hier die englische Version: 
# Anyone who releases software using the GPL does not consider these
# restrictions bad, because it prevents others from making money off
# of their hard work while allowing others to use it.

            Jeder, der Software unter Benutzung der GPL
            ver&ouml;ffentlicht empfindet diese Einschr&auml;nkung
            nicht als Nachteil, da sie verhindert, da&szlig; andere Leute
            Geld mit ihrer Arbeit machen ohne andere am
            ge&auml;nderten Code teilhaben zu lassen.
    </dl></li>
<li><A HREF="http://language.perl.com/misc/Artistic.html">Artistic
    License</a>.
    <dl>
        <dt><strong>Zusammenfassung:</strong>
        <dd>
        <dt><strong>gut:</strong>
        <dd>
        <dt><strong>schlecht:</strong>
        <dd>
    </dl></li>
<li><A HREF="../misc/bsd.license">Lizenz nach BSD-Art</a>.
    <dl>
        <dt><strong>Zusammenfassung:</strong>
        <dd>Sowohl Quellen als auch Binaries m&uuml;ssen die Lizenz
            enthalten; Werbung mu&szlig; den Entwickler, der in der Lizenz
            genannt wird, anerkennen.
        <dt><strong>gut / schlecht:</strong>
        <dd>Firmen, die ein Programm allgemein zug&auml;nglich machen
            wollen (m&ouml;glicherweise gratis) ohne die Quellen zu
            ver&ouml;ffentlichen greifen oft zu dieser Lizenz. Ein
            gutes Beispiel ist eine Firma, die Treiber zu einer
            Grafik-Karte herausgeben will. Verfechter der offenen
            Quellen w&uuml;rde sowieso die Herausgabe der
            Hardware-Spezifikation vorziehen. Falls die Entwicklung
            von Treibern f&uuml;r XFree86 hier bezeichnend ist &mdash;
            XFree86 hat die besten Treiber bei vorhandenen Quellen
            geschrieben. Firmen lassen ihr Produkt schlecht aussehen,
            wenn sie nur propriet&auml;re Treiber herausgeben, die
            erst noch langsam und fehlerhaft sind. Sie k&ouml;nnen
            auch Entwicklungskosten sparen, wenn sie andere Leute den
            Treiber f&uuml;r ihre Hardware entwickeln lassen.
            <p>Jeder kann die Quellen nehmen, sie ver&auml;ndern und
            das Resultat dann herausgeben, ohne die Ver&auml;nderungen
            bekanntzugeben. Ob Sie denken, das sei gut oder schlecht
            ist eine pers&ouml;nliche Einsch&auml;tzung.
    </dl></li>
</UL>

<p><a name="mistakes">Einige weit verbreitete Fehler in selbstgeschriebenen Lizenzen</a>:

<UL>
<li>Entweder <strong>Verbot oder Einschr&auml;nkung des
    gewinnorientierten Verkaufs</strong> der Software. Das macht es
    schwierig, die Software auf CD zu vertreiben. Manche Leute machen
    auch den Fehler, schwammige Begriffe wie &quot;zu
    vern&uuml;nftiger Preis&quot; (&quot;reasonable
    cost&quot;). Besser ist, einfach eine der obigen Lizenzen zu
    verwenden, da sie den selben Zweck erf&uuml;llen ohne solche
    begrifflichen Schwierigkeiten heraufzubeschw&ouml;ren. Die GPL zum
    Beispiel h&auml;lt die Kosten dadurch niedrig, da&szlig; sie jedem das
    Verteilen erlaubt &mdash; hier regulieren die
    Marktkr&auml;fte. Wenn einer eine CD mit hoher Gewinn-Marge
    verkauft, wird es nicht lange dauern, bis Konkurrenten zu einem 
    g&uuml;nstigeren Preis in den Verkauf einsteigen. 
    <br>Beachte: die Artistic License benutzt den Begriff
    &quot;vern&uuml;nftige Kopier-Geb&uuml;hr&quot;, relativiert ihn
    aber, soda&szlig; er weniger schwammig ist.
</li>
<li><strong>Verbot eine ver&auml;nderte Version</strong> der Software
    <strong>zu verteilen</strong>. Das behindert das Verteilen der
    Software durch gewisse Gruppen. Als Beispiel Debian: da wir
    kompilierte Software verteilen, ist es oft n&ouml;tig, die Quellen
    zu ver&auml;ndern, damit die Software kompiliert oder damit sie
    dem Dateisystem-Standard 
    <A HREF="http://www.pathname.com/fhs/">FHS</A> entspricht. Wenn
    wir das machen, d&uuml;rfen wir die Software nachher nicht mehr
    verteilen.
</li>
<li><strong>Alle Ver&auml;nderungen m&uuml;ssen dem Autor mitgeteilt
    werden</strong>. Obwohl es an sich eine gute Idee ist,
    Verbesserungen und Ver&auml;nderungen dem Autor zum melden, damit
    sie an ein gr&ouml;sseres Publikum verteilt werden
    k&ouml;nnen. Dies zu als Mu&szlig; zu verlangen kann allerdings
    Probleme bereiten. Wieviele Leute wissen schon, wo sie sich in
    f&uuml;nf Jahren aufhalten? Besser ist, wenn man schreibt, da&szlig;
    alle Ver&auml;nderungen dem Autor mitgeteilt werden
    <em>sollten</em>. Die meisten Leute werden sich daran halten.
    <br>So eine Klausel wird &uuml;blicherweise eingef&uuml;gt, um
    Absplitterungen vom Projekt zu verhindern. Die Geschichte lehrt
    einen allerdings, dass Absplitterungen bei fortgef&uuml;hrter
    Entwicklung des Projekts nur dann erfolgreich sind, wenn auch
    andere Kr&auml;fte spaltend wirken.

# Der letzte Satz war im Englischen nicht so verst&auml;ndlich. Eigene
# Interpretation in der deutschen Fassung. Kann falsch sein. Hier die
# englische Version: 
# History has shown that as long as development on the original code
# doesn't stall branches only succeed if there are other forces
# driving the split.

</li>
<li>Die Software im <strong>&ouml;ffentlichen Eigentum</strong>
    (&quot;public domain&quot;) plazieren, dann aber
    <strong>Einschr&auml;nkungen hinzuf&uuml;gen</strong> (so wie zum
    Beispiel keinen gewinnorientierten Verkauf zu erlauben). Entweder
    ist etwas &ouml;ffentliches Eigentum oder es ist es nicht &mdash;
    da gibt es keine Kompromisse. Solche Lizenzen sind bedeutungslos
    und es kann sein, da&szlig; die zus&auml;tzlichen Einschr&auml;nkungen
    vor Gericht nicht durchkommen.
</li>
</UL>
