<define-tag description>Mehrere Verwundbarkeiten</define-tag>
<define-tag moreinfo>
<p>Alexander Hvostov, Julien Blache und Aurelien Jarno entdeckten mehrere
sicherheitsrelevante Probleme im sane-backends Paket, das eine API-Bibliothek
für Scanner enthält, die einen Scanning-Daemon (im Paket libsane) enthält, der
entfernt ausgenutzt werden kann. Diese Probleme erlauben es einem entfernten
Angreifer, einen Segmentation-Fehler auszulösen und/oder willkürliche Mengen an
Speicher zu verbrauchen. Der Angriff ist erfolgreich, selbst wenn der Rechner
des Angreifers nicht in der saned.conf eingetragen ist.</p>

<p>Sie sind nur angreifbar, wenn Sie saned tatsächlich starten, z.B. in
xinetd oder inetd. Falls die Einträge in der Konfigurationsdatei von xinetd
oder inetd entsprechend auskommentiert oder nicht vorhanden sind, sind Sie
sicher.</p>

<p>Versuchen Sie »<kbd>telnet localhost 6566</kbd>« auf dem Server, auf dem
saned laufen dürfte. Falls Sie ein »connection refused« erhalten, läuft saned
nicht und Sie sind sicher.</p>

<p>Das Common Vulnerabilities and Exposures Projekt identifiziert die
folgenden Probleme:</p>

<ul>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0773">\
   CAN-2003-0773</a>:

   <p>saned prüft die Identität (IP-Adresse) des entfernten Rechners erst,
   nachdem die ersten Nachrichten ausgetauscht wurden (SANE_NET_INIT). Daher
   kann jeder dieses RPC schicken, selbst wenn es dem entfernten Rechner nicht
   erlaubt ist, zu scannen (nicht in saned.conf eingetragen).</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0774">\
   CAN-2003-0774</a>:

   <p>saned fehlt beinahe überall im Code eine Fehlerprüfung. Daher werden
   unterbrochene Verbindungen erst sehr spät erkannt. Wenn die Unterbrechung
   der Verbindung nicht erkannt wird, behält der Zugriff auf den internen
   Wire-Puffer die Grenzen des reservierten Speichers. Daher wird zufälliger
   Speicher "nach" dem Wire-Puffer gelesen, was zu einem Segmentation-Fehler
   führt.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0775">\
   CAN-2003-0775</a>:

   <p>Wenn saned Zeichenketten erwartet, reserviert es den benötigten
   Speicher, um die komplette Zeichenkette zu speichern, nachdem die Größe der
   Zeichenkette übermittelt wurde. Falls die Verbindung unterbrochen wurde,
   bevor die Größe übertragen wurde, reserviert malloc eine willkürliche
   Speichergröße. Abhängig von der Größe und der Menge von verfügbarem
   Speicher scheitert malloc (-&gt;saned beendet sich sauber) oder eine große
   Speichermenge wird reserviert. Swapping und OOM-Maßnahmen könnten abhängig
   vom Kernel auftreten.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0776">\
   CAN-2003-0776</a>:

   <p>saned prüft nicht die Gültigkeit von RPC-Nummern, die vor den Parametern
   erhalten werden.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0777">\
   CAN-2003-0777</a>:

   <p>Falls Debug-Meldungen aktiviert sind und eine Verbindung unterbrochen
   wird, können nicht-NULL terminierte Zeichenketten ausgegeben werden und
   Segmentation-Fehler auftreten.</p></li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0778">\
   CAN-2003-0778</a>:

   <p>Es ist möglich, eine willkürliche Speichermenge auf dem Server zu
   reservieren, auf dem saned läuft, selbst wenn die Verbindung nicht
   unterbrochen wird. Im Augenblick kann dies entsprechend dem Autor nicht
   leicht behoben werden. Beschränken Sie besser die gesamte Speichermenge,
   die saned verwenden darf (ulimit).</p></li>
</ul>

<p>Für die stable Distribution (Woody) wurde dieses Problem in
Version 1.0.7-4 behoben.</p>

<p>Für die unstable Distribution (Sid) wurde dieses Problem in
Version 1.0.11-1 und neuer behoben.</p>

<p>Wir empfehlen Ihnen, Ihre libsane-Pakete zu aktualisieren.</p>
</define-tag>

# do not modify the following line
#include "$(ENGLISHDIR)/security/2003/dsa-379.data"
#use wml::debian::translation-check translation="1.6"
# $Id$
