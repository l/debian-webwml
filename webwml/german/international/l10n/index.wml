#use wml::debian::template title="Zentrale Überstzungsstatistik von Debian"
#use wml::debian::translation-check translation="1.8"

<p>Diese Seiten zeigen die Anzahl der Pakete in debian, die bereit
sind, übersetzt zu werden und die bereits übersetzt sind.

<p>Die Seiten werden von Skripten erzeugt, die von Martin Quinson
entwickelt wurden, einem der französischen Debian-Übersetzer.

<p>Beachten Sie bitte, daß dieser Prozeß nur ein Teil von i18n und
l10n ist. `I18n' steht für Internationalisierung und `l10n' für
Lokalisierung.  Ein Programm zu internationalisieren bedeutet, seine
l10n erlauben, es zu lokalisieren umfaßt alles, so daß das Programm
auf alle Besonderheiten des Landes gefaßt ist.  Das umfaßt mehrere Teile:

<dl compact>
 <dt>LC_COLLATE
  <dd>Wie Text sortiert werden soll.

 <dt>LC_CTYPE
  <dd>Welcher Zeichensatz zu benutzen ist.

 <dt>LC_MONETARY
  <dd>Wie Geld repräsentiert wird.

 <dt>LC_NUMERIC
  <dd>Wie Zahlen repräsentiert werden.

 <dt>LC_TIME
  <dd>Wie das Datum dargestellt wird.

 <dt>LC_MESSAGES
  <dd>In welcher Sprache Texte ausgegeben werden sollen.
</dl>

<p>Wie Sie sehen, ist das Übersetzen von Texten einer Anwendung nur
ein Teil des gesamten Prozesses, es ist jedoch der einzige Teil, den
Skripte überwachen können.  Auf den weiteren Seiten, verwende ich i18n
oder l10n für den LC_MESSAGES-Teil von i18n oder l10n.  Mir ist
bewußt, daß es falsch ist, doch ist es so aufwendig, es jedesmal
korrekt zu screiben.  Sorry. :)

<p>In einem internationalisierten Programm besteht die Möglichkeit, Text-Kataloge

<p>Ein internationalisiertes Programm ist eines, das die Möglichkeit
erhalten hat, übersetzt zu werden, wenn der Quellcode verändert wurde,
um in der Lage zu sein, Kataloge von Übersetzungen für seine Meldungen
zu benutzen.  Ein solches Programm ist in einer Sprache übersetzt,
wenn diese Kataloge in diese Sprache übersetzt wurden.

<p>Es gibt wenigstens zwei Systeme von Übersetzungskatalogen:

<ul>
<li>NLS: Verwendung von	catgets() und entsprechender Funktionen von POSIX.
<li>GNU: Verwendung von	gettext() und entsprechender Funktionen von GNU.
</ul>

<p>Ich werde nicht in die Details zwischen beiden Lösungen gehen.
Doch obwohl dieses Skript Programme beider Kategorien entdecken kann,
werden die Programme, die gettext verwenden, besser unterstützt.
Beispielsweise weiß ich nicht, wie ein catgets-Programm untersucht
werden soll (um herauszufinden, wie gut es übersetzt ist).

<p>Der Entwickler organisiert sein Paket normalerweise indem er einem
Standard-Verzeichnis-Layout verwendet.  Dieses Skript erkennt drei dieser:

<ul>
<li>GNU: Alle po-Dateien befinden sich in einem Verzeichnis namens
    `po', dieses Verzeichnis enthält den vollständigen Mechanismus, um sie zu
    compilieren (Dateien namens `Makefile.in.in' und `POTFILES.in')
<li>NLS: Alle NLS-Dateien befinden sich in einem Verzeichnis namens `nls'
<li>full: Alle i18n-Informationen sind in verschiedenen Verzeichnissen
    gespeichert, eines pro Sprache. Jedes enthält po-Dateien, Manpages
    und anderes zugehörige Material. (Bitte flamen Sie mich nicht
    dafür, daß ich diese Organisation `full' genannt habe :)
</ul>

<p>Sie wissen jetzt ausreichend, um die Ergebnisse des Skriptes zu
betrachten.  Sie können zwischen mehreren Ausgaben unterscheiden:</b>

<p><ul>
 <li>Status von `i18n', genauer, welche Pakete sind bereit, übersetzt zu werden:
 <ul>
  <li><a href="i18n">Sortiert nach Abschnitten</a>
 </ul>
 <br><br>
 <li>Status von `l10n', genauer, wie gut sind die Pakete übersetzt:
 <ul>
  <li><a href="l10n">Sortiert nach Paketen, in einer Zusammenfassung</a>
  <li><a href="l10n-packages">Sortiert nach Paketen, in einer ausführlichen Form</a>
  <li><a href="l10n-errors">nach Kategorien der Fehler und Warnungne</a>
  <li><a href="l10n-rank">Wertung der Sprachen</a>
  <li><a href="l10n-lang">Liste aller Sprachen, um Material zum Übersetzen herunterzuladen</a>
 </ul>
</ul>
