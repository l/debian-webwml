#use wml::debian::template title="Hinweise über l10n von Debconf-templates"
#include "$(ENGLISHDIR)/international/l10n/templates/menu.inc"
#use wml::debian::translation-check translation="1.8"
# $Id$
# Translator: Gerfried Fuchs <alfie@debian.org> 2002-02-15


<h2>Konzepte</h2>

<p>
  Um seine Übersetzungen aktuell zu halten, muss ein i18n-tes Programm den
  Übersetzern einen einfachen Weg liefern, um veraltete Übersetzungen zu
  erkennen und zu aktualisieren.
</p>

<p>
  Eine Debconf templates Datei besteht aus Feldern und Werten. Übersetzte
  Felder folgen einem speziellen Namensschema, z.B. steht
  <code>Description-es</code> für eine spanische Beschreibung.  Tatsächlich
  wird <code>Description-es_ES</code> (oder <code>Description-es_MX</code>,
  oder was auch immer) zuerst geprüft.
</p>

<p>
  Um daher veraltete Übersetzungen zu erkennen muss man wissen, von welchem
  Text diese Beschreibung übersetzt ist. Der Debconf-Weg ist es, nur die
  Original-Felder in der templates Datei zu behalten, und übersetzte Felder
  gemeinsam mit den entsprechenden englischen Feldern in eine andere Datei zu
  speichern, die <code>templates.xx</code> oder <code>templates.xx_XX</code>
  heißt, abhängig vom Name der Sprache. Hinweise dafür werden unterhalb
  erteilt, um mit getrennten Dateien zu arbeiten.
</p>


<h2>Anfängliche Übersetzung</h2>

<p>
  Bevor an einem Paket zu arbeiten begonnen wird, sollte
  <a href="http://auric.debian.org/~grisu/debian_translation/">Grisu's
  templates Übersetzungs-Server</a> und das BTS geprüft werden, ob nicht
  bereits eine Übersetzung an den Paket-Betreuer geschickt wurde. Wenn man
  sich davon versichert hat, holt man sich die templates Datei von
  <a href="./">der Sprach-Seite</a> oder von dem Link oben, und ruft dann
</p>

<pre>$ debconf-getlang xx templates &gt; templates.xx</pre>

<p>
  auf, um eine Datei mit leeren Übersetzungs-Feldern zu generieren.
  Löschen Sie nicht die Original-Felder, diese sind zum Erkennen von
  veralteten Übersetzungen notwendig! Wenn man
  fertig ist, prüft man, dass alle Felder übersetzt sind, indem man
</p>

<pre>$ debconf-getlang --stats templates templates.xx</pre>

<p>
  aufruft, und schickt die übersetzte Datei an den
  Paket-Betreuer.
</p>


<h2>Übersetzungen zusammenführen</h2>

<p>
  Da der Paket-Betreuer auch diese Seite gelesen hat, weiß er um die Arbeit
  der Übersetzer nicht zu erschweren, dass er die templates nicht
  zusammenführen soll, sondern diese Dateien wie sie sind im
  <tt>debian</tt> Verzeichnis
  beherbergen soll.
</p>

<p>
  Die übersetzten templates Dateien müssen nur zusammengeführt werden, wenn
  das Binär-Paket gebaut wird. Debhelper wird das automatisch für Sie tun,
  wenn Sie den <tt>dh_installdebconf</tt> Befehl in Ihrer
  <tt>debian/rules</tt> verwenden. Anderenfalls fügen Sie einen Befehl ähnlich
  dem folgendem hinzu:
</p>

<pre>
	cd debian &amp;&amp; debconf-mergetemplate templates templates.* &gt; tmp/DEBIAN/templates
</pre>

<p>
  Das heißt, die Paket-Betreuer erhalten die übersetzten templates Dateien
  und legen Sie lediglich am richtigen Platz ab, das ist alles.
</p>


<h2>Übersetzungen aktualisieren</h2>

<p>
  Jetzt wurden anfängliche Übersetzungen eingebaut, jedoch hat sich der Text
  in den englischen templates geändert. Änderungen in den original templates
  müssen nachgeführt werden. <tt>debconf-getlang</tt> übernimmt wieder diese
  Aufgabe für Sie:
</p>

<pre>$ debconf-getlang xx templates templates.xx &gt; new.xx</pre>

<p>
  hängt eine <tt>-fuzzy</tt> Markierung an veraltete Felder an, und fügt
  darüber eine leere Zeile ein. Übersetzer editieren <tt>new.xx</tt>, arbeiten
  an veralteten Übersetzungen, und prüfen mit
</p>

<pre>$ debconf-getlang --stats templates new.xx</pre>

<p>
  dass alle Texte behandelt wurden. Er benennt dann <tt>new.xx</tt> auf
  <tt>templates.xx</tt> um und sendet diese Datei an den Paket-Betreuer, der
  es genauso behandelt wie im vorhergehenden Abschnitt.
</p>


<h2>Vollständiges Beispiel</h2>

<p>
  Hier ist nun ein gänzlich imaginäres Beispiel, das die oben angegebenen
  Schritte zeigt. Nehmen wir die folgende templates-Datei, die der Einfachheit
  halber <code>debconf.templates</code> benannt ist:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Slang, Text, Editor, Dialog, Gnome, Noninteractive
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The slang frontend provides a colorful, full-screen, character based
 windowing interface, while the text frontend uses a more traditional plain
 text interface, and the gnome frontend is a modern X interface. The editor
 frontend lets you configure things using your favorite text editor.  The
 noninteractive frontend never asks you any questions. The dialog frontend
 is a primitive frontend that is being phased out.
</pre>

<p>
  Um sie auf deutsch zu übersetzen, gibt der Übersetzer folgendes ein:
</p>

<pre>$ debconf-getlang de debconf.templates &gt; debconf.templates.de</pre>

<p>
  und erstellt diese <code>debconf.templates.de</code> Datei mit
  leer-übersetzten Feldern:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Slang, Text, Editor, Dialog, Gnome, Noninteractive
<b>Choices-de:</b>
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The slang frontend provides a colorful, full-screen, character based
 windowing interface, while the text frontend uses a more traditional plain
 text interface, and the gnome frontend is a modern X interface. The editor
 frontend lets you configure things using your favorite text editor.  The
 noninteractive frontend never asks you any questions. The dialog frontend
 is a primitive frontend that is being phased out.
<b>Description-de:</b>
</pre>

<p>
  Nachdem die leeren Felder ausgefüllt wurden, hat der Übersetzer folgende
  <code>debconf.templates.de</code> Datei:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Slang, Text, Editor, Dialog, Gnome, Noninteractive
Choices-de: Slang, Text, Editor, Dialog, Gnome, Nichtinteraktiv
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The slang frontend provides a colorful, full-screen, character based
 windowing interface, while the text frontend uses a more traditional plain
 text interface, and the gnome frontend is a modern X interface. The editor
 frontend lets you configure things using your favorite text editor.  The
 noninteractive frontend never asks you any questions. The dialog frontend
 is a primitive frontend that is being phased out.
Description-de: Welche Schnittstelle soll zum Konfigurieren der Pakete verwendet werden?
  Pakete die Debconf für die Konfiguration verwenden teilen ein gemeinsames
  »look and feel«. Sie können wählen, welches User-Interface sie benutzen.
 .
 Das Slang-Frontend bietet ein farbiges symbolzeichenbasiertes
 vollbildschirm Interface, während das Text-Frontend ein traditionelleres
 rein-text basiertes Interface verwendet, und das Gnome-Frontend ein
 modernes X-Interface ist. Das Editor-Frontend lässt Sie Dinge mit Ihrem
 Lieblingseditor konfigurieren. Das nichtinteraktive Frontend stellt Ihnen
 keine Fragen. Das Dialog-Frontend ist ein primitives Frontend, das
 ausgegliedert wird.
</pre>

<p>
  Der Übersetzer sendet nun diese übersetzte <code>debconf.templates.de</code>
  Datei an den Debian-Paket-Betreuer.
</p>

<p>
  Der Paket-Betreuer fügt diese <code>debconf.templates.de</code> Datei in das
  <code>debian/</code> Unterverzeichnis ein. Da er
  <code>dh_installdebconf</code> in <code>debian/rules</code> verwendet, muss
  er nichts besonderes tun, um die templates zusammenzuführen.
  Die templates-Zusammenführung wird automatisch von
  <code>dh_installdebconf</code> übernommen, wenn das binär-Paket gebaut wird.
</p>

<p>
  Einige Wochen später beendet der Paket-Betreuer seine Arbeit an neuen
  Frontends, und muss <code>debconf.templates</code> editieren:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Dialog, Readline, Gnome, Editor, Noninteractive
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The dialog frontend is a full-screen, character based interface, while the
 readline frontend uses a more traditional plain text interface, and the gnome
 frontend is a modern X interface. The editor frontend lets you configure
 things using your favorite text editor. The noninteractive frontend never
 asks you any questions.
</pre>

<p>
  Da er aber nicht deutsch spricht, kann er die
  <code>debconf.templates.de</code> nicht ebenfalls aktualisieren, aber
  entschließt sich, trotzdem die neue Version seines Paketes hochzuladen.
</p>

<p>
  Glücklicherweise, da er die templates Dateien <i>richtig behandelt</i>, war
  dieser Unterschied auf
  <a href="de">http://www.debian.org/intl/l10n/templates/de</a> sichtbar, da
  ein Textfeld als <b>fuzzy</b> in diesem Paket markiert wurde. Einige Tage
  später bemerkte einer der Übersetzer für die deutschen Dateien dieses
  ungenaue Textfeld und will es beheben. Er ladet zuerst die neue
  <code>debconf.templates</code> Datei herunter, und ruft folgendes auf:
</p>

<pre>$ debconf-getlang --stats debconf.templates debconf.templates.de
de: 2 fuzzy translations</pre>

<p>
  um sich zu vergewissern, dass die Übersetzung nicht mehr aktuell ist.
</p>


<p>
  Der Übersetzer muss die <code>debconf.templates.de</code> Datei nochmals
  übersetzen und wird an einer temporären Datei <code>new.de</code>
  arbeiten, die so erstellt wird:
</p>

<pre>$ debconf-getlang de debconf.templates debconf.templates.de &gt; new.de</pre>

<p>
  Diese Datei <code>new.de</code> sieht folgendermaßen aus:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Dialog, Readline, Gnome, Editor, Noninteractive
<b>Choices-de</b>:
<b>Choices-de-fuzzy</b>: Slang, Text, Editor, Dialog, Gnome, Nichtinteraktiv
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The dialog frontend is a full-screen, character based interface, while the
 readline frontend uses a more traditional plain text interface, and the
 gnome frontend is a modern X interface. The editor frontend lets you
 configure things using your favorite text editor. The noninteractive
 frontend never asks you any questions.
<b>Description-de</b>:
<b>Description-de-fuzzy</b>: Welche Schnittstelle soll zum Konfigurieren der Pakete verwendet werden?
  Pakete die Debconf für die Konfiguration verwenden teilen ein gemeinsames
  »look and feel«. Sie können wählen, welches User-Interface sie benutzen.
 .
 Das Slang-Frontend bietet ein farbiges symbolzeichenbasiertes
 vollbildschirm Interface, während das Text-Frontend ein traditionelleres
 rein-text basiertes Interface verwendet, und das Gnome-Frontend ein
 modernes X-Interface ist. Das Editor-Frontend lässt Sie Dinge mit Ihrem
 Lieblingseditor konfigurieren. Das nichtinteraktive Frontend stellt Ihnen
 keine Fragen. Das Dialog-Frontend ist ein primitives Frontend, das
 ausgegliedert wird.
</pre>

<p>
  Die ungenauen Felder sind leicht zu finden, und der Übersetzer beendet rasch
  <code>new.de</code>:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Dialog, Readline, Gnome, Editor, Noninteractive
Choices-de: Dialog, Readline, Gnome, Editor, Nichtinteraktiv
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The dialog frontend is a full-screen, character based interface, while the
 readline frontend uses a more traditional plain text interface, and the
 gnome frontend is a modern X interface. The editor frontend lets you
 configure things using your favorite text editor. The noninteractive
 frontend never asks you any questions.
Description-de: Welche Schnittstelle soll zum Konfigurieren der Pakete verwendet werden?
 Pakete die Debconf für die Konfiguration verwenden teilen ein gemeinsames
 »look and feel«. Sie können wählen, welches User-Interface sie benutzen.
 .
 Das Dialog-Frontend ist ein symbolzeichenbasiertes vollbildschirm
 Interface, das Readline-Frontend verwendet ein traditionelleres
 Text-Interface und das Gnome-Frontend ist ein modernes X-Interface. Das
 Editor-Frontend lässt Sie Dinge mit Ihrem Lieblingseditor konfigurieren.
 Das nichtinteraktive Frontend stellt ihnen keine Fragen.
</pre>

<p>
  Er benennt diese Datei in <code>debconf.templates.de</code> um und sendet
  sie an den Paket-Betreuer, der die vorherige
  <code>debian/debconf.templates.de</code> Datei mit dieser Aktualisierung
  ersetzt.
</p>
