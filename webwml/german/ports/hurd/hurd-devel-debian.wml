#use wml::debian::template title="Debian GNU/Hurd &ndash; Entwicklung" NOHEADER="yes"
#include "$(ENGLISHDIR)/ports/hurd/menu.inc"
#use wml::debian::translation-check translation="1.43"
# $Id$
# Translator: Frank Lichtenheld <frank@lichtenheld.de> 2003-03-08
# Updated: Holger Wansing <linux@wansing-online.de>, 2011

<h1>Debian GNU/Hurd</h1>

<h2>Entwicklung der Distribution</h2>

<h3>Installationssystem</h3>
<p>Aktuell arbeiten wir nicht an einem nativen
Installationssystem. Wir versuchen allerdings die Basis dafür zu
schaffen und portieren manchmal dafür wichtige Pakete. Wenn Sie uns
helfen wollen, arbeiten sie am debian-installer-Projekt mit und
stellen Sie sicher, dass die Komponenten auf dem Hurd laufen.</p>

<h3>Debian-Pakete portieren</h3>
<p>Wenn Sie dem Debian GNU/Hurd Port helfen wollen, sollten Sie sich
mit dem Debian-Paketsystem vertraut machen. Wenn Sie dies getan haben,
durch Lesen der verfügbaren Dokumentation und Besuchen der 
<a href="$(HOME)/devel/">Entwickler-Ecke</a>, sollten Sie gelernt haben,
wie man Debian-Quellcodepakete auspackt und wie man Debian-Pakete
erstellt. Nachfolgend finden sie einen Crashkurs für die ganz faulen
Leute:</p>

<h3>Quellcode bekommen und Pakete erstellen</h3>
<p>Um ein Debian-Quellcodepaket auszupacken, benötigt man die Datei
<code>paketname_version.dsc</code> und die in ihr aufgelisteten
Dateien. Sie erstellen das Debian-Paketverzeichnis mit dem Programm
<code>dpkg-source -x paketname_version.dsc</code></p>

<p>Um ein Paket zu erstellen, wechseln Sie in das
Debian-Paketverzeichnis <code>paketname_version</code> und führen Sie
den Befehl <code>dpkg-buildpackage -B -rsudo "-mMeinName
&lt;Meine-E-Mail&gt;"</code> aus. Anstelle von <code>-B</code> können
Sie auch <code>-b</code> benutzen, um auch die architekturunabhängigen
Teile des Pakets zu erstellen. Sie können <code>-rfakeroot</code>
statt <code>-rsudo</code> benutzen, wenn Sie das fakeroot-Paket
installiert haben. Oder Sie können das <code>-r</code> weglassen, wenn
Sie den Befehl als Benutzer root ausführen. Sie können auch
<code>-uc</code> hinzufügen, wenn Sie das Paket nicht mit ihrem
PGP-Schlüssel signieren wollen.</p>

<h3>Ein Paket auswählen</h3>
<p>An welchem Paket sollte gearbeitet werden? An jedem, das noch nicht
portiert wurde, aber portiert werden muss. Dies ändert sich ständig,
daher wird empfohlen, sich zunächst auf Pakete mit vielen
Rückwärts-Abhängigkeiten zu konzentrieren, was man in dem
Paket-Abhängigkeits-Graphen
<url "http://people.debian.org/~sthibault/graph-radial.pdf">
sehen kann, der täglich aktualisiert wird, oder auf der
Liste der meist-gewünschten Pakete (most-wanted list)
<url "http://people.debian.org/~sthibault/graph-total-top.txt">.
Sie können sich aber auch eines der noch nicht portierten Pakete
zufällig heraussuchen, auf der debian-hurd-Mailingliste nach
Informationen über den autobuilding-Prozess Ausschau halten
oder die Liste der fehlgeschlagenen Pakete (wanna-build list) von
<url "http://people.debian.org/~sthibault/failed_packages.txt.gz">
benutzen.
</p>
<p>
Überprüfen Sie ebenfalls, ob Arbeiten bereits erledigt wurden, auf
<url "https://alioth.debian.org/tracker/?atid=410472&amp;group_id=30628&amp;func=browse">,
<url "https://alioth.debian.org/tracker/?atid=411594&amp;group_id=30628&amp;func=browse">
und im BTS.
</p>

<h4>Pakete, die nicht portiert werden</h4>
<p>Manche dieser Pakete oder Teile von ihnen könnten später doch
portabel sein, aber im Moment werden sie als nicht portabel
angesehen.</p>

<ul>
      <li><code>base/update</code>, weil der Hurd keinen update-Daemon
	benötigt (die Dateisysteme synchronisieren sich selbst). Wollen
	Sie das Synchronisationsintervall ändern, können sie
	<code>fsysopts</code> verwenden, um die <code>--sync</code>
	Option einzustellen. Sie können für jedes Dateisystem ein
	anderes Synchronisationsintervall einstellen. Um dies manuell
	zu tun, benutzen Sie das <a href="hurd-doc-utils#syncfs">\
	  <code>syncfs</code>-Hilfsprogramm</a>.</li> 

      <li><code>base/makedev</code>, weil der Hurd eine eigene Version
	dieses Skripts mitbringt. Das Debian-Quellcodepaket enthält
	nur eine linuxspezifische Version.</li>

      <li><code>base/ld.so</code>, weil der Hurd den Linker benutzt,
	der bei der GNU C-Bibliothek mitgeliefert wird.</li>
      
      <li><code>base/modconf</code> und <code>base/modutils</code>,
	weil Module ein linuxspezifisches Konzept sind.</li>

      <li><code>base/netbase</code>, weil der dort übrig gebliebene
	Kram sehr spezifisch für den Linux-Kernel ist. Der Hurd benutzt
	stattdessen <code>inetutils</code>.</li>

      <li><code>base/pcmcia-cs</code>, weil der Hurd keine
	PCMCIA-Unterstützung hat (und wenn er sie hätte, wäre das
	Paket wahrscheinlich trotzdem linuxspezifisch).</li>

      <li><code>base/procps</code>, weil der Code speziell für das
	Linux proc-Dateisystem ist.</li>

      <li><code>base/ppp</code> und <code>base/pppconfig</code>, weil
	der Hurd keine PPP-Unterstützung hat (und wenn er sie hätte,
	wäre das Paket wahrscheinlich trotzdem linuxspezifisch).</li>

      <li><code>base/setserial</code>, weil es speziell für den
	Linux-Kernel ist. Das Paket könnte dennoch nutzbar sein, wenn
	die Linuxtreiber für zeichenorientierte Geräte für den GNU
	Mach portiert werden.</li>
</ul>

<h3><a name="porting_issues">Allgemeine Portierungsprobleme</a></h3>

<p><a href=http://www.gnu.org/software/hurd/hurd/porting/guidelines.html>Eine
   Liste häufiger Problem</a> ist auf der Website der Originalautoren verfügbar.
   Die nachfolgende Liste von häufigen Problemen ist spezifisch für Debian.</p>
<p>Bevor Sie versuchen, ein Problem zu beheben, überprüfen Sie, ob die
   kfreebsd-Portierung bereits einen passenden Fix hat, der nur noch für
   hurd-i386 angepasst werden muss.</p>

<ul>
      <li><code>Defekte Abhängigkeit für libc6</code> (<code>Broken libc6 
          dependency</code>)
       <p>Einige Pakete verwenden eine fehlerhafte Abhängigkeit auf 
          <code>libc6-dev</code>. Das ist inkorrekt, da <code>libc6</code>
	  speziell für bestimmte GNU/Linux-Architekturen gilt. Das 
	  korrespondierende Paket für GNU lautet <code>libc0.3-dev</code>, aber
	  andere Betriebssysteme haben andere Pakete. Sie können das Problem
	  in der Datei <code>debian/control</code> des Quellbaums ermitteln. 
	  Typische Lösungen sind u.A. die Erkennung des Betriebssystems mittels
	  <code>dpkg-architecture</code> und die Hardkodierung des Sonamens.
	  Besser verwenden Sie ein logisches ODER, z.B. 
	  <code>libc6-dev | libc6.1-dev | libc0.3-dev | libc0.1-dev | libc-dev</code>,
	  hierbei ist <code>libc-dev</code> ein virtuelles Paket, das für jeden
	  Sonamen funktioniert. Sie dürfen es aber nur als letzte Option 
	  einsetzen.</p></li>
</ul>
