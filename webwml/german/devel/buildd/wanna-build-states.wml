#use wml::debian::template title="Wanna-build-Zustände: Eine Erklärung" BARETITLE="true"
#use wml::debian::translation-check translation="1.19"
# $Id$
# Translator: Kai Wasserbäch <debian@carbon-project.org>, 2008-01-14

    <p>Diese Seite versucht zu erklären, welche wanna-build Zustände es gibt und 
      was es für ein Paket bedeutet, wenn es in einem dieser Zustände ist. Diese 
      Seite ist für die Debian-Paketbetreuer gedacht, die herausfinden möchten, 
      warum ihr Paket für eine bestimmte Architektur erzeugt bzw. noch nicht 
      erzeugt wurde. Zusätzlich wird eine Erklärung für die unterschiedlichen 
      Meldungen des Ergebnisprotokolls gegeben.</p> 

    <p>Zusätzlich existiert ein <a href="#graphlink">Ablaufdiagramm</a>.
      In diesem wird aber nicht alles dargestellt, das dieses Dokument 
      beschreibt.</p>

<h2>Die wanna-build Zustände</h2>
<p>Für jede von Debian unterstützte Architektur ist auf buildd.debian.org 
eine Datenbank installiert. Sie enthält alle Pakete und deren jeweiligen Kompilierungsstatus.
Es gibt sieben Zustände: <em>needs-build</em>,
<em>building</em>, <em>uploaded</em>, <em>dep-wait</em>,
<em>failed</em>, <em>not-for-us</em> und
<em>installed</em>.</p>

<p>Die Bedeutung derselben ist wie folgt:</p>
    <dl>
      <dt><a name="needs-build">needs-build</a></dt>
      <dd>Ein Paket mit dem Status <em>needs-build</em> wurde von seinem Betreuer
        in einer neuen Version hochgeladen, allerdings für eine andere Architektur 
	als die dieser wanna-build-Datenbank. Deshalb muss das Paket neu erzeugt werden. 
	Der Zustand <em>needs-build</em> zeigt hierbei an, dass das Paket noch von keinem 
	Autobuilder bearbeitet wurde. Dies geschieht, sobald das Paket in der Warteschlange 
	in die Nähe der Spitze gekommen ist und ein Autobuilder verfügbar ist. Meistens wird von 
	einem Paket als <q>auf eine Neuerzeugung wartend</q> bezeichnet, wenn dessen Status 
	<em>needs-build</em> ist.<br />
	Es kann interessant sein, anzumerken, dass die Warteschlange nicht
	chronologisch 
	(<acronym lang="en" title="First In, First Out">FIFO</acronym>), 
	sondern nach den folgenden Kriterien geordnet wird:
	<ol>
	  <li>Vorheriger Kompilierungsstatus des Paketes: Pakete, die zuvor
	    schon einmal erzeugt wurden, erhalten eine höhere Priorität als 
	    neue.
	  </li>
	  <li>Paketprioritäten: Pakete mit der Priorität <em>required</em> (<em>erforderlich</em>) 
	    werden vor Paketen mit der Priorität <em>extra</em> erzeugt.
	  </li>
	  <li>Der Bereich, in dem sich das Paket befindet: Diese Sortierung 
	      basiert auf der Einschätzung, welche 
	      der Pakete als wichtiger erachtet werden als andere. 
	      Beispielsweise wird ein Paket im
	    Bereich <em>games</em> nach Paketen im Bereich <em>base</em> und 
	    Pakete des Bereichs <em>libs</em> vor solchen in <em>devel</em> erzeugt.
	  </li>
	  <li>Nach Paketnamen: Hierzu werden die <acronym lang="en" 
	    title="American Standard Code for Information Interchange">ASCII</acronym>-Zeichen 
	    herangezogen.
	  </li> 
	</ol>
	Unter bestimmten Bedingungen kann es außerdem passieren, dass ein buildd 
	ein Paket auswählt, welches nicht an der Spitze der Warteschlange ist. Dies 
	passiert unter anderem dann, wenn ein buildd die Quelldateien eines bestimmten 
	Paketes nicht finden kann. In diesem Fall wird das betreffende Paket wieder zurück 
	in die Warteschlange eingereiht (an der vorherigen Position, d.h. den Anfang). 
	Das Paket wird dann für einige Stunden vom buildd ignoriert. Ein anderes Beispiel 
	wäre, wenn für eine Architektur mehrere Autobuilder vorhanden sind. In diesem 
	Fall können die Portierenden entscheiden, dass die schnelleren Autobuilder die größeren 
	Pakete und die langsameren Maschinen die kleineren Pakete bearbeiten
	sollen. Ein buildd kann 
	theoretisch auch eine andere Bereichssortierung anfordern, dies ist üblicherweise 
	aber nicht der Fall.<br />
	Es könnte weitere Situationen geben, in denen die Sortierung scheinbar ignoriert wird, 
	aber dies sind immer Ausnahmen.
      </dd>
      <dt><a name="building">building</a></dt>
      <dd>Ein Paket wird als <em>building</em> markiert, sobald der Autobuilder 
        das Paket von der Spitze der Warteschlange geholt hat. Der Status wird 
	beibehalten bis der Administrator des Autobuilders auf die E-Mail mit 
	dem Protokoll geantwortet hat. Da Pakete nicht eines nach dem anderen 
	aus der Warteschlange genommen werden, 
	bedeutet dies, dass Pakete meist schon als <em>building</em> markiert sind 
	bevor der der Prozess eigentlich begonnen hat. Da aber die lokale 
	Warteschlange des buildds nach dem FIFO-Prinzip funktioniert, sollte es 
	nicht mehr allzu lange dauern. Außerdem ändert sich der Status <strong>nicht</strong> 
	automatisch nach Abschluss des Erzeugens, sondern erst, nachdem der 
	Administrator des Autobuilders auf die E-Mail mit dem Protokoll geantwortet hat.</dd>
      <dt><a name="uploaded">uploaded</a></dt>
      <dd>Wenn der Versuch, das Paket zu erzeugen, erfolgreich war, 
        wird das Protokoll an den Betreuer des Autobuilders sowie an 
	buildd.debian.org gesandt. Der Betreuer unterschreibt dann die 
	.changes-Datei, die im Protokoll enthalten ist, und sendet diese 
	an den Autobuilder. Daraufhin lädt der Autobuilder 
	das Paket hoch und ändert den Status in der buildd-Datenbank auf 
	<em>uploaded</em>. Dies bedeutet, dass ein solches Paket irgendwo 
	in der Incoming-Warteschlange zu finden ist.<br />
	Kein Autobuilder ändert mehr etwas an einem Paket, sobald dessen 
	Status <em>uploaded</em> ist &ndash; sofern keine neue Version hochgeladen 
	wird oder ein Portierer etwas manuell am Status des Paketes ändert.
      </dd>
      <dt><a name="dep-wait">dep-wait</a></dt>
      <dd>Im Falle, dass ein Paket nicht erzeugt werden konnte, weil eine 
        oder mehrere Abhängigkeiten zum Erzeugen des Paketes nicht erfüllt 
	werden konnten, sendet der Betreuer des Autobuilders eine E-Mail an den
	Autobuilder, in der der Autobuilder angewiesen wird, das Paket inklusive 
	seiner Quellen zu entfernen und das Paket selbst als <em>dep-wait</em> 
	zu markieren, bis die erforderlichen Abhängigkeiten erfüllt sind. 
	Sobald die Abhängigkeiten erfüllbar sind, wird der Status ohne menschliches 
	Eingreifen automatisch als <em><a href='#needs-build'>needs-build 
	markiert</a></em>.<br />
	Ursprünglich war ein Versuch, das Paket zu erzeugen, notwendig, 
	bevor der Betreuer manuell dessen Status auf <em>dep-wait</em> setzte. 
	Seit August 2005 ist dies nicht mehr notwendig, da wanna-build 
	dahingehend erweitert wurde, fehlende Abhängigkeiten selbst zu erkennen 
	und den Zustand eines Paketes, falls zutreffend, direkt von 
	<em><a href='#installed'>installed</a></em> auf <em>dep-wait</em> 
	zu ändern.<br />
	Es gibt zwei Fälle, in denen der Zustand eines Paketes dauerhaft 
	<em>dep-wait</em> sein kann. Erstens, wenn eine Abhängigkeit falsch 
	geschrieben wurde (das wartende Paket hängt dann von einem Paket ab, welches 
	weder vorhanden ist, noch jemals sein wird) und zweitens, wenn ein 
	Paket eine Abhängigkeit auf ein als <em>not-for-us</em> (<em>nicht für uns</em>) markiertes oder auf der 
	<em>packages-arch-specific</em>-Liste stehendes Paket besitzt.<br />
	Ein Beispiel für den letzten Fall: Man stelle sich drei Pakete vor. Das 
	Paket <tt>foo</tt>, welches nur für <tt>i386</tt> vorhanden ist, das 
	Paket <tt>bar</tt>, welches nur für <tt>m68k</tt> vorhanden ist (und ungefähr 
	die gleiche Funktion wie ersteres bereitstellt) und ein Paket namens <tt>baz</tt>, 
	welches entweder mit <tt>foo</tt> oder <tt>bar</tt> erzeugt werden kann. Sollte 
	nun der Paketbetreuer von <tt>baz</tt> vergessen <tt>bar</tt> als 
	Abhängigkeit für die Erzeugung zu definieren und er es hinzufügen, sobald er 
	bemerkt, dass <tt>baz</tt> auf das auf der Architektur <tt>m68k</tt> nicht 
	verfügbare Paket <tt>foo</tt> wartet, dann muss der Zustand <em>dep-wait</em> 
	manuell für die Architektur <tt>m68k</tt> von dessen Portierern aufgehoben werden.
      </dd>
      <dt><a name="wanna-build-state-failed">failed</a></dt>
      <dd>Sollte das Erzeugen eines Paketes fehlschlagen und der Betreuer des 
        Autobuilders entscheiden, dass kein erneuter Versuch gestartet 
	werden soll, dann markiert er dieses Paket als <em>failed</em>. 
	Ein Paket bleibt in diesem Zustand, bis entweder ein Portierer dies 
	ändert oder eine neue Version des Paketes verfügbar ist. Im zweiten 
	Fall wird allerdings der Administrator des Autobuilders von diesem 
	um Erlaubnis gebeten, das Paket erzeugen zu dürfen, um einen offensichtlichen 
	erneuten Fehlschlag zu vermeiden und keine Rechenzeit auf dem 
	Autobuilder zu verschwenden. Auch wenn 
	dieses Vorgehen im Allgemeinen nicht der richtige Weg ist, steht es 
	dem Administrator des Autobuilders offen.<br />
	Ein Paket wird <strong>niemals</strong> automatisch ohne den Eingriff 
	eines Menschen als <em>failed</em> markiert.
      </dd>
      <dt><a name="not-for-us">not-for-us</a></dt>
      <dd>Einige ausgewählte Pakete sind nur für bestimmte Architekturen 
        gedacht, wie zum Beispiel <tt>lilo</tt>, ein Boot-Loader für i386. 
	Dieser sollte nicht für alpha, m68k oder s390 erzeugt werden. 
	Allerdings beachtet <em>wanna-build</em> die Steuerdatei nicht, 
	während die eigene Datenbank erzeugt wird (nur der Name, der Bereich,
	der vorhergehende Status und die Priorität eines Paketes werden in Betracht gezogen). 
	Deshalb wird nach dem ersten Hochladen eines architekturspezifischen 
	Paketes ein Versuch unternommen, es dennoch zu erzeugen. Dieser 
	Versuch schlägt fehl, bevor die zum Erzeugen notwendigen Abhängigkeiten 
	heruntergeladen/installiert wurden.<br />
	Da die Autobuilder ihre Zeit nicht mit Paketen 
	verschwenden sollen, die für diese Architektur nicht gedacht sind, ist es notwendig, solche Pakete in irgendeiner 
	Form aufzulisten. Die erste Lösung für dieses Problem war 
	<em>not-for-us</em>. Da dies aber schwer zu verwalten ist, 
	gilt der Zustand heute als veraltet und die Betreuer eines 
	Autobuilders sollten <em>packages-arch-specific</em> stattdessen verwenden. 
	Dies ist kein Zustand von wanna-build, sondern eine Liste für eine 
	oder mehrere Architekturen, die Pakete aufführt, die nur für bestimmte 
	Architekturen gedacht sind.<br />
	Ein Paket, welches entweder als <em>not-for-us</em> markiert wurde oder 
	auf der <em>packages-arch-specific</em>-Liste steht, wird auch dann 
	<strong>nicht</strong> automatisch daraus entfernt, wenn das Paket in 
	einer neueren Version zusätzliche Architekturen unterstützt. Das 
	Paket muss <strong>manuell</strong> erneut in die Warteschlange eingereiht 
	werden.<br />
	Im Falle, dass dies für ein von Ihnen betreutes Paket zutrifft, müssen Sie 
	den Administrator des entsprechenden buildds (auf Englisch) fragen. Dieser kann via
	$arch@buildd.debian.org kontaktiert werden.
      </dd>
      <dt><a name="installed">installed</a></dt>
      <dd>Wie der Name bereits nahelegt, ist ein Paket, welches im Zustand
        <em>installed</em> ist, für die von der entsprechenden wanna-build-Datenbank 
	abgedeckte Architektur kompiliert worden. Vor der Veröffentlichung von 
	Woody änderte sich der Status von <em>uploaded</em> zu <em>installed</em> 
	nach dem täglichen Durchlauf von katie. Seit der Implementierung von 
	<a href="http://lists.debian.org/debian-devel-announce/2002/debian-devel-announce-200206/msg00002.html">Accepted-autobuild</a> 
	stimmt dies so nicht mehr. Momentan ändert sich der Status eines Paketes 
	von <em>uploaded</em> zu <em>installed</em> sobald es im Archiv akzeptiert 
	wurde. Dies passiert im Durchschnitt nach ungefähr 15 Minuten.
      </dd>
    </dl>
    <p>Außer diesen sieben Zuständen kennt <em>wanna-build</em> noch 
    zwei -removed-Zustände, die aber Sonderfälle sind. Es handelt 
    sich hierbei um <em>dep-wait-removed</em> und <em>failed-removed</em>. 
    Sie hängen direkt mit ihren respektiven <q>einfachen</q> Zuständen wie 
    folgt zusammen: Sollte ein Paket, welches zuvor als <em>dep-wait</em> 
    oder <em>failed</em> markiert war, in einer neuen, an wanna-build 
    übergebenen Paketliste nicht mehr aufgeführt sein, so wird es mit dem 
    entsprechenden -removed-Zustand markiert, da es so scheint, als ob das 
    Paket entfernt wurde. Die Informationen zum Paket werden allerdings 
    nicht entfernt, da es sich nur um einen zeitweiligen Fehler handeln 
    könnte. Oder das Paket mit Absicht zeitweise entfernt wurde, um zu 
    einem späteren Zeitpunkt wieder ins Archiv aufgenommen zu werden. Stattdessen
    wird ein solches Paket in einen <em>-removed</em> Zustand versetzt, so dass
    der Grund des Fehlschlages oder worauf es wartet erhalten bleibt.
    Sollte ein solches Paket auf eine späteren Paketliste für 
    wanna-build wieder aufgeführt sein, so wird dessen Status wieder auf 
    <em>failed</em> bzw. <em>dep-wait</em> vor seiner weiteren 
    Bearbeitung zurückgesetzt.</p>
    <p>Es ist nicht möglich, direkt auf die auf ftp-master.debian.org 
    installierte wanna-build-Datenbank zuzugreifen. Nur die Autobuilder 
    haben einen SSH-Schlüssel, mit dem sie die Datenbank für ihre 
    Architektur zugreifen können. Dies war bereits der Fall, als 
    ftp-master noch nicht in seiner Benutzung für die Allgemeinheit 
    eingeschränkt war, da wanna-build die Datenbank für andere Zugriffe 
    sperrt, sobald es selbst (auch nur lesend) darauf zugreift. Für einen direkten Zugriff 
    auf eine wanna-build-Datenbank muss der Zugreifende in der richtigen Benutzergruppe 
    (wb-&lt;arch&gt;) sein.</p>
    <p>Für die Allgemeinheit ist der Status eines Paketes auf der <a 
    href="http://buildd.debian.org/stats/">buildd-Statusseite</a> 
    einsehbar. Eine Ausnahme hiervon stellt der Zustand <em>installed</em> 
    dar, dieser ist nur in den mehreren Megabyte großen <q>&lt;arch&gt;-all.txt</q>-Dateien 
    nachzulesen.</p>
    <h2>Das Ergebnisprotokoll des Erzeugens</h2>
    <p>Wenn sbuild (die Komponente des buildd, die das Paket erzeugt) 
    ein Paket erzeugt hat, sendet sie eine E-Mail an 
    den Administrator des Autobuilders und an logs@buildd.debian.org 
    (um schlussendlich unter http://buildd.debian.org/ verfügbar zu sein), 
    welches das Protokoll des Erzeugens enthält. Das Ergebnis kann eines 
    der folgenden sein: <em>successful</em>, <em>failed</em>, <em>given-back</em> 
    oder <em>skipped</em>. Auf der <a 
    href="http://buildd.debian.org/">buildd-Protokollübersichtsseite</a> 
    wird immer das Präfix <em>maybe-</em> hinzugefügt, da es Fälle gibt, 
    in denen das Erzeugen als <em>failed</em> eingestuft wird, es aber 
    keinen <em>wirklichen</em> Fehlschlag gab. Auch der umgekehrte Fall, 
    dass ein Paket als erfolgreich erzeugt markiert ist, es aber in 
    Wirklichkeit fehlerhaft ist und erneut erzeugt werden muss, kann vorkommen. 
    Dies hatte in der Vergangenheit zu einiger Verwirrung geführt und 
    um diese fürderhin zu vermeiden, wurde oben genannter Präfix eingeführt.</p>
    <p>Die Bedeutung der Ergebnisse ist wie folgt:</p>
    <dl>
      <dt><a name="successful">successful</a></dt>
      <dd>Das Erzeugen war erfolgreich. Wenn der Administrator eines Autobuilders 
        ein solches Protokoll erhält, extrahiert er die enthaltene 
	<code>.changes</code>-Datei, unterschreibt diese und sendet sie 
	an den Autobuilder zurück, der dann das Paket hochlädt.</dd>
      <dt><a name="failed">failed</a></dt>
      <dd>Das Erzeugen ist fehlgeschlagen. Da es etliche Gründe gibt, 
        warum das Erzeugen eines Paketes fehlgeschlagen sein kann, wird 
	hier darauf verzichtet, sie alle zu nennen. Sollte eines Ihrer 
	Pakete als <em>(maybe-)failed</em> markiert worden sein, sollten 
	Sie den gesamten Artikel lesen und den aktuellen 
	wanna-build-Zustand überprüfen.</dd>
      <dt><a name="given-back">given-back</a></dt>
      <dd>Das Erzeugen schlug auf Grund eines temporären Fehlers des 
        Autobuilders fehl. Beispiele hierfür können Netzwerkprobleme, 
	nicht verfügbare Pakete (nicht in den in der aktuellen sources.list 
	enthalten Quellen verfügbar), kein ausreichender Speicherplatz usw. sein.<br />
	Ein solches Paket wird erneut als <em><a href="#needs-build">needs-build</a></em> 
	markiert. So wird dafür Sorge getragen, dass ein anderer 
	Autobuilder, sobald einer verfügbar ist, erneut versucht, das Paket 
	zu erzeugen.</dd>
      <dt><a name="skipped">skipped</a></dt>
      <dd>Sollte in der Zeit nachdem der/ein Autobuilder ein Paket als <a 
        href="#building">building</a> markiert hat und dem eigentlichen Versuch,
	es zu erzeugen, eine neue Version des Paketes hochgeladen werden oder ein 
	Portierer den wanna-build-Status manuell geändert haben, so wird dies von sbuild 
	registriert und der Vorgang übersprungen. Ein Protokoll mit dieser 
	Information wird versandt.</dd>
    </dl>

<h2><a name="graphlink">Die graphische Version</a></h2>
<p>Um die oben dargestellten Punkte zu illustrieren, ist ein vereinfachtes <a
href="wanna-build.png">Ablaufdiagramm</a> dieser Prozedur verfügbar.
</p>
