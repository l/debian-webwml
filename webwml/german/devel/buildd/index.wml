#use wml::debian::template title="Autobuilder-Netz" BARETITLE="true"
#use wml::debian::translation-check translation="1.19"
# $Id$
# Translator: Helge Kreutzmann <debian@helgefjell.de> 2006-04-26

<p>Das Autobuilder-Netz ist eine Debian-Entwicklung die hilft, die 
   Paket-Neuübersetzung für alle Architekturen, die <a href="$(HOME)/ports/">\
   Debian derzeit unterstützt</a>, zu beschleunigen. Dieses Netz besteht aus
   mehreren Maschinen, die ein spezielles Software-Paket namens <em>buildd</em> 
   verwenden, um Pakete aus dem Debian-Archiv herauszuholen und sie für die 
   Ziel-Architektur neu zu bauen.
</p>

<h2>Warum wird das Autobuilder-Netz benötigt?</h2>

<p>Die Debian-Distribution unterstützt <a href="$(HOME)/ports/">etliche 
   Architekturen</a>, aber die Paket-Betreuer kompilieren Binärversionen
   gewöhnlich nur für eine einzige Architektur (normalerweise i386). Entwickler
   für andere Architekturen müssen auf neue Versionen von Paketen aufpassen und
   diese rekompilieren, falls sie aktuell zu der Intel-Distribution bleiben
   wollen.
</p>

<p>Als Debian/m68k (die erste nicht-Intel-Portierung) begann, wurde all dies
   manuell durchgeführt: Entwickler beobachteten die Upload-Mailingliste für
   neue Pakete und nahmen einige von ihnen zum Bauen. Die Koordination, dass
   kein Paket zweimal von verschiedenen Leuten gebaut werde, geschah über 
   Ankündigungen auf einer Mailingliste. Es ist offensichtlich, dass diese
   Prozedur fehlerbehaftet und zeitraubend ist. Dies war allerdings lange der
   normale Weg, um nicht-i386-Distributionen aktuell zu halten.
</p>

<p>Das build-Daemon-System automatisiert den Großteil dieses Prozesses. Es 
   besteht aus einer Reihe von Skripten (die in Perl und Python geschrieben
   sind), die sich im Laufe der Zeit entwickelt haben, um den Portierern bei
   verschiedenen Aufgaben zu helfen. Sie haben sich schließlich in ein System
   entwickelt, dass in der Lage ist, nicht-i386 Debian-Distributionen fast
   automatisch aktuell zu halten.
</p>

<h2>Wie funktioniert buildd?</h2>

<p><em>Buildd</em> ist der Name, der normalerweise der vom Autobuilder-Netz
   verwandten Software gegeben wird, aber tatsächlich besteht es aus einer
   Reihe von verschiedenen Teilen:
</p>

<dl>

<dt><a href="http://svn.cyberhqz.com/svn/wanna-build/">wanna-build</a></dt>
<dd>
   ein Werkzeug, dass bei der Koordination des (Neu-)Bauens über eine Datenbank
   hilft, die eine Liste von Paketen und ihrem Status hält. Dort ist eine
   zentrale Datenbank pro Architektur vorhanden, die Paket-Statusse, Versionen
   und einige andere Informationen aufbewahrt.
</dd>

<dt><a href="http://svn.cyberhqz.com/svn/wanna-build/">buildd</a></dt>
<dd>
   ein Daemon, der periodisch die von <em>wanna-build</em> verwaltete Datenbank
   überprüft und <em>sbuild</em> aufruft, um Pakete zu bauen. Er behält Fehler
   und Erfolge beim Bauen im Auge und wird auch das Paket hochladen, nachdem
   der Bau-Bericht vom Administrator bestätigt wurde.
</dd>

<dt><a href="http://packages.debian.org/sbuild">sbuild</a></dt>
<dd>
   ist für die eigentliche Übersetzung von Paketen in isolierten Chroots
   zuständig. Es verwendet dafür hauptsächlich normale Debian-Werkzeuge, 
   kümmert sich aber auch um Quell-Abhängigkeiten und einige andere kleine
   Macken.
</dd>

<dt><a href="http://packages.debian.org/quinn-diff">quinn-diff</a></dt>
<dd>
   Füttert die wanna-build-Datenbank mit neuen Paketen. Es vergleicht die
   verfügbaren Pakete-Versionen für zwei Architekturen und gibt die
   Unterschiede aus (vergleicht eine Quell-Datei und eine Paket-Datei). 
</dd>

</dl>

<p>Alle diese Teile <a href="operation">arbeiten</a> zusammen, um das Bau-Netz
   zum Laufen zu bekommen.</p>

<h2>Was muss ein Debian-Entwickler machen?</h2>

<p>In der Tat muss ein durchschnittlicher Debian-Entwickler das buildd-Netz
   nicht explizit benutzen. Immer wenn er ein Paket in das Archiv hochlädt
   (binär übersetzt für eine gegebene Architektur) wird es zu der Datenbank
   für alle Architekturen (im Zustand <em>Needs-Build</em>) hinzugefügt.
   Bau-Maschinen fragen die Datenbank nach Paketen in diesem Zustand ab und
   werden routinemäßig Pakete von dieser Liste nehmen. Die Liste wird nach
   vorherigem Übersetzungszustand, Priorität, Abschnitt und schließlich
   Paketnamen priorisiert.
</p>

<p>Falls der Bau auf allen Architekturen gelingt, braucht der Betreuer nichts
   zu machen. Alle diese Binärpakete werden auf die Haupt-Site der Architektur
   hochgeladen. Falls der Bau nicht gelingt, kommt das Paket in einen speziellen
   Zustand (<em>Failed</em> oder <em>Dep-Wait</em>, falls sie von speziellen
   Bau-Abhängigkeiten abhängt, die nicht verfügbar sind). Der Administrator
   des Autobuilders wird die Pakete, die nicht bauen, durchsehen und wird dies
   dem Betreuer zurückmelden, gewöhnlich indem er einen Fehler in der
   Fehlerdatenbank öffnet.
</p>

<p>Manchmal braucht ein Paket lange, um auf einer gegebenen Architektur zu
   bauen und dies hält das Paket vom Übergang nach <a
   href="$(HOME)/devel/testing">Testing</a> ab. Unglücklicherweise muss das
   Paket warten, bis eine Maschine es einsammelt. Buildd-Administratoren
   werden keine Bitten, den Bau zu beschleunigen, akzeptieren, da die 
   Prioritäten-Liste bereits festgelegt ist.
</p>

<p>Sie können den Status verschiedener buildd-Versuche von Paketen, die zu
   einem bestimmten Betreuer gehören, überprüfen, indem Sie die <a 
   href="http://buildd.debian.org/bymaint.php">buildd-Protokolle</a> überprüfen.
   Diese Protokolle sind auch vom Paket-Betreuer-Überblick aus verlinkt.
</p>

<p>Für weitere Informationen über die verschiedenen Zustände, in denen ein
   Paket sein kann, lesen Sie bitte die <a href="wanna-build-states">\
   wanna-build-states</a>.
</p>

<h2>Wo kann ich weitere Informationen finden?</h2>

<p>Natürlich sind sowohl die Dokumentation als auch der Quellcode, der für diese
   verschiedenen Werkzeuge verfügbar ist, der beste Weg um herauszufinden, wie
   das buildd-Netz arbeitet. Zusätzlich enthält der <a 
   href="$(HOME)/doc/manuals/developers-reference/pkgs#porting">Portieren 
   und portiert werden</a>-Abschnitt der <a 
   href="$(HOME)/doc/manuals/developers-reference/">\
   Debian-Entwicklerreferenz</a> ergänzende Informationen über die 
   Funktionsweise und stellt auch einige Informationen über <a
   href="$(HOME)/doc/manuals/developers-reference/tools#tools-builders">\
   Paket-Bauer</a> und <a 
   href="$(HOME)/doc/manuals/developers-reference/tools#tools-porting">\
   Portierungs-Werkzeuge</a> bereit, die sowohl an dem Prozess des Aufsetzens
   als auch des Wartens des buildd-Netzes beteiligt sind.
</p>

<p>Auf <a href="http://buildd.debian.org/stats/">der Buildd-Statusseite</a> 
   sind einige Statistiken über das Autobuilder-Netz verfügbar.
</p>

<h2>Wie kann ich meinen eigenen Auto-Builder-Knoten aufsetzen?</h2>

<p>Es gibt mehrere Gründe, warum ein Entwickler (oder Benutzer) einen
   Autobuilder aufsetzen und betreiben möchte:
</p>

<ul>
 <li>Um bei der Entwicklung einer Portierung auf eine gegebene Architektur zu
     helfen (wenn Autobuilder benötigt werden).</li>
 <li>Um die Auswirkungen einer gegebenen Compiler-Optimierung oder Patches zu
     ermitteln, indem eine große Teilmenge von Paketen neu übersetzt wird.</li>
 <li>Um Werkzeuge laufen zu lassen, die Pakete nach bekannten Fehlern
     durchsuchen und mit compilierten Paketen arbeiten müssen. Dies wird sogar
     für Quellcode-Analysen benötigt, zum Beispiel als Hilfskonstruktion für
     Pakete die <tt>dpatch</tt> verwenden.</li>
</ul>

<p>Sie können weitere Information darüber, wie Sie einen <a href="setting-up">\
   Autobuilder aufsetzen können</a>, lesen.
</p>

<h2>Die Buildd-Administratoren kontaktieren</h2>
  	 
<p>Die Administratoren, die für die Buildds für einer bestimmten
Architektur verantwortlich sind, können unter 
 <email arch@buildd.debian.org> erreicht werden, zum Beispiel
<email i386@buildd.debian.org>.</p>
  	 
<hrline />
<p><small>Diese Einführung in das Autobuilder-Netz wurde mit Teilen und Stücken
   bereitgestellt von Roman Hodek, Christian T. Steigies, Wouter Verhelst,
   Andreas Barth, Francesco Paolo Lovergine und Javier 
   Fern&aacute;ndez-Sanguino geschrieben.</small></p>
