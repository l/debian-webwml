#use wml::debian::template title="GTK-Frontend Debian-Installer" NOHEADER="true"
#use wml::debian::translation-check translation="1.12"
# $Id$


<h1>Statusseite zum GTK-Frontend des debian-installers</h1>


<h3>Neuigkeiten</h3>

<p><b>19.06.2003</b>: Ein neues Update, nach einer langen Zeit. Leider hat sich
innerhalb der letzten zwei Monate nicht viel getan. Zumindest sind nun alle
udebs hochgeladen, und sie scheinen auch zu funktionieren. Danke an alle
beteiligten Betreuer. Vikram Singh hat ein <a
href="http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/partitioner/partition.png">\
graphisches Partitionierungsprogramm</a> geschrieben, das hilfreich sein könnte,
wenn wir einen Weg finden, wie wir solche Widgets in das cdebconf-Design
integrieren können.</p>

<p><b>28.03.2003</b>: Neue Version von libgtk-directfb. Kein Konflikt zu libgtk
mehr, sollte somit fertig sein und getestet werden. Ein erster Build von
cdebconf und des GTK-Frontends war erfolgreich.</p>

<p><b>25.03.2003</b>: Viel Arbeit wurde am Frontend selbst geleistet. Es kann
nun eine beliebige Anzahl von Fragen auf einmal anzeigen, unterstützt Backup und
kann Fortschrittsanzeigen darstellen. 
<a href="http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/screenshots/">\
Schnappschüsse finden sich hier</a>.</p>

<p><b>17.03.2003</b>: Die pthread-Angelegenheit wurde durch eine neue Version
der libc gelöst, welche nun die Bibliothek enthält.</p>

<p><b>12.03.2003</b>: Eine funktionierende Version von gtk+-directfb hinzugefügt,
basierend auf der Arbeit von Alastair McKinstry. Außerdem eine neue Version von
libdirectfb hinzugefügt. Diese beinhaltet einige Ideen von Thomas Viehmann und
einen Patch, der einen Speicherzugriffsfehler behebt, der auftrat, wenn
libdirectfb vom GTK-Frontend aufgerufen wurde. Kommentare erwünscht.</p>

<p><b>11.03.2003</b>: Wir machen Fortschritte: Der erste 
<a href="http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/screenshots/gtk-frontend.old.png">\
Schnappschuss</a></p>

<p><b>07.03.2003</b>: Neue Version von libfontconfig zu einem udeb gemacht.
Einen Patch ans BTS gesendet.</p>

<p><b>07.03.2003</b>: Kleine Änderungen an libdirectfb. Patch wurde an den
Betreuer geschickt.</p>

<p><b>07.03.2003</b>: Akira Tagoh hat atk, glib und pango hochgeladen. Ebenfalls
Freetype hochgeladen.</p>

<p><b>06.03.2003</b>: Regeln für »udeb-dev«-Pakete geändert: Bibliotheken
sollten in /usr/lib/udeblib installiert werden und nicht in ein ihrem Namen
entsprechendes Unterverzeichnis.</p>

<p><b>05.03.2003</b>: udebs für libexpat und libfontconfig erstellt.</p>

<p><b>04.03.2003</b>: Pango verwendet nun libfontconfig als Freetype-Backend.
Somit müssen wir dies ebenfalls paketieren, und da es libexpat nutzt, haben wir
noch einen weiteren Kandidaten... Suche nach Freiwilligen.</p>

<p><b>04.03.2003</b> Sektion über Platzlimitationen hinzugefügt.</p>

<p><b>04.03.2003</b>: zlib und libpng udebs aktualisiert, Patches ins BTS
eingereicht.</p>

<p><b>03.03.2003</b>: Hinweis auf Akiras pango udebs hinzugefügt.</p>

<p><b>03.03.2003</b>: Die Empfehlungen zum udeb-Paketieren von Bibliotheken
aktualisiert, siehe den Fuß dieser Seite. Auch zwecks Überprüfung an
debian-boot weitergereicht, jegliche Kommentare sind gerne gesehen.</p>

<p><b>03.03.2003</b>: Einen Fehler gegen libc-udeb eingereicht (#183155,
pthreads benötigt). Die glib-Betreuer zeigten sich nicht allzu glücklich, wir
sollten untersuchen, ob Unterstützung für Threads wirklich notwendig ist.</p>

<p><b>02.03.2003</b>: Dokumentation zu wichtigen Punkten hinsichtlich des
Paketierens von Bibliotheken-udebs begonnen. Ich werde diese bald an debian-boot
senden, bitte überprüft sie.</p>


<h3>Übersicht</h3>

<p>Derzeit wird der Debian-Installer neu geschrieben mit dem Ziel, modular und
flexibler als das derzeitige System der »boot-floppies« zu sein. Hinsichtlich
allgemeiner Angelegenheiten siehe bitte die <a
href="index">Debian-Installer-Homepage</a>.  Diese Seite hier ist dem 
GTK-Frontend des neuen Installers gewidmet. Falls Sie sich beteiligen wollen,
ist dies hier ein guter Einstiegspunkt. Vergewissern Sie sich, die Dokumentation
im Debian-Installer Subversion-Repository zu lesen.</p>

<p> Falls Sie irgendetwas hinzufügen wollen oder eine Verbesserung vorschlagen
wollen, senden Sie mir eine Mail: <email "sebastian.ley@mmweg.rwth-aachen.de">.</p>


<h3>Was muss getan werden</h3>

<ul>
  <li> Ein Frontend für cdebconf, unter Verwendung von GTK. Michael Cardenas
  hat hiermit angefangen, dies ist im Debian-Installer Subversion-Repository
  verfügbar.</li>
  <li> Installer-Module (udebs), die eine GTK-Bibliothek bereitstellen, die
  direkt auf dem Framebuffer und den Bibliotheken aufsetzt, von denen GTK
  abhängt. Siehe unten betreffend den Status der einzelnen Pakete.</li>
  <li> Der Installer-Kernel muss Framebuffer-Unterstützung bereitstellen.</li>
  <li> Ein Konzept zur Integration des GTK-Frontends muss erstellt werden,
  siehe unten.</li>
  <li> Detaillierte Instruktionen zum eigentlichen Testen des GTK-frontends</li>
  <li> Einen Weg finden, spezialisiertere Widgets in das derzeitige Design zu
  integrieren.</li>
  <li> Noch irgendetwas?</li>
</ul>


<h3>Wie man sich beteiligt</h3> 

<p>Falls Sie beim GTK-Frontend aushelfen wollen, lesen Sie bitte die
Dokumentation im Installer Subversion-Repository. Schauen Sie sich die unten
angeführten udebs an und untersuchen Sie sie. Die meisten von ihnen entsprechen
nicht den Spezifikationen, finden Sie Fehler und erstellen Sie Patches.
Bibliotheken in udebs zu paketieren beinhaltet einige Komplikationen. Es gibt
ein paar Hinweise am Ende dieser Seite. Falls Sie Fehler finden, senden Sie mir
bitte eine Nachricht. Diskussionen werden auf der Mailingliste »debian-boot«
abgehalten.</p>


<h3>Größe ist wichtig</h3>

<p>Unmöglich können alle Dateien, die für den graphischen Installer benötigt
werden, auf eine 1,44 MB Diskette passen. Auch werden sie nicht auf eine 2,88 MB
Diskette passen, was das obere Limit im ElTorito-Standard ist, wenn man von
CDs booten will.</p>

<p>Folgerichtig müssen die udebs aus dem Netzwerk oder einem CD-Repository in
eine Ramdisk geladen werden. Eine Ramdisk ist naturgemäß in ihrer Größe
limitiert, und es wäre großartig, wenn der graphische Installer selbst mit einer
kleinen Ramdisk funktionieren würde. Es ist also von hoher Priorität, alles
klein zu halten. Werfen Sie nicht benötigtes Zeugs raus, eliminieren Sie
unnötige Abhängigkeiten, wo auch immer es möglich ist.</p>


<h3>Status der udebs</h3>

<p>Die Status-Einfärbungen bedeuten Folgendes:</p>

<ul>
<li><b>rot:</b> Dieses Paket braucht noch Arbeit, bis es im Debian-Installer
oder überhaupt funktionieren wird.</li>
<li><b>gelb:</b> Dieses Paket sollte fertig sein. Es muss getestet und dann
hochgeladen werden.</li>
<li><b>grün:</b> Dieses Paket wurde getestet und funktioniert wie erwartet.
Vielleicht sind kleinere kosmetische Änderungen notwendig, aber die
Funktionalität ist gegeben.</li>
</ul>

<table border="1">

<tr><th>Paket</th><th>Vorläufiges Paket</th><th>Wer arbeitet
daran?</th><th>Hochgeladen?</th><th>Noch zu erledigen, Kommentare</th></tr>

<tr bgcolor="ffff99">
<td>gtk+-directfb</td>
<td>http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/udebs</td>
<td><a href="mailto:mbc@debian.org">Michael Cardenas</a>,<br><a
href="mailto:sebastian.ley@mmweg.rwth-aachen.de">Sebastian Ley</a></td>
<td>ja</td>
<td>udeb sollte fertig sein, muss getestet werden</td>
</tr>

<tr bgcolor="ffff99">
<td>libdirectfb</td>
<td>http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/udebs</td>
<td><a href="mailto:sebastian.ley@mmweg.rwth-aachen.de">Sebastian
Ley</a></td>
<td>ja</td>
<td>udeb sollte fertig sein, muss getestet werden</td>
</tr>

<tr bgcolor="ffff99">
<td>libpango</td>
<td>n/a</td>
<td><a href="mailto:tagoh@debian.org">Akira Tagoh</a></td>
<td>ja</td>
<td>udeb sollte fertig sein, muss getestet werden</td>
</tr>

<tr bgcolor="ffff99">
<td>glib</td>
<td>n/a</td>
<td><a href="mailto:tagoh@debian.org">Akira Tagoh</a></td>
<td>ja</td>
<td>sollte fertig sein, muss getestet werden</td>
</tr>

<tr bgcolor="ffff99">
<td>libatk</td>
<td>n/a</td>
<td><a href="mailto:tagoh@debian.org">Akira Tagoh</a></td>
<td>ja</td>
<td>sollte fertig sein, muss getestet werden</td>
</tr>

<tr bgcolor="ffff99">
<td>zlib</td>
<td>n/a</td>
<td>n/a</td>
<td>ja</td>
<td>udeb sollte fertig sein, muss getestet werden</td>
</tr>

<tr bgcolor="ffff99">
<td>libpng</td>
<td>http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/udebs</td>
<td><a href="mailto:sebastian.ley@mmweg.rwth-aachen.de">Sebastian
Ley</a></td>
<td>ja</td>
<td>udeb sollte fertig sein, muss getestet werden</td>
</tr>

<tr bgcolor="ffff99">
<td>libc</td>
<td>n/a</td>
<td>n/a</td>
<td>ja</td>
<td>udeb sollte fertig sein, muss getestet werden</td>
</tr>

<tr bgcolor="ffff99">
<td>libfreetype</td>
<td>n/a</td>
<td>n/a</td>
<td>ja</td>
<td>udeb sollte fertig sein, muss getestet werden</td></tr>

<tr bgcolor="ffff99">
<td>ttf-freefont</td>
<td>n/a</td>
<td>n/a</td>
<td>ja</td>
<td>Muss kleiner sein. Einige Schriftsätze müssen aufgegeben werden.</td></tr>

<tr bgcolor="ffff99">
<td>libfontconfig</td>
<td>http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/udebs</td>
<td><a href="mailto:sebastian.ley@mmweg.rwth-aachen.de">Sebastian
Ley</a></td>
<td>ja</td>
<td>udeb sollte fertig sein, muss getestet werden</td>
</tr>

<tr bgcolor="ffff99">
<td>libexpat</td>
<td>n/a</td>
<td>n/a</td>
<td>ja</td>
<td>udeb sollte fertig sein, muss getestet werden</td></tr>

</table>


<h3>Integration des GTK-Frontends</h3>

<p>Da all die für das GTK-Frontend benötigten Bibliotheken niemals auf eine
Disk passen werden, brauchen wir eine Lösung dazu, wie das Frontend benutzt
werden wird. Bis jetzt gibt es zwei Ansätze:</p>

<ul>
<li>Erkenne das CDROM bei einer CD-Installation ohne Benutzereingriff, richte
anna ein und ziehe die benötigten Bibliotheken automatisch nach. Dann wechsle
zum GTK-Frontend.</li>
<li>Beginne die Installation mit einem Text- oder Slang- (oder sonstigem)
Frontend und lasse den Benutzer das Installationsmedium konfigurieren. Danach
gib ihm die Option, zum GTK-Frontend zu wechseln.</li>
</ul>

<p>Dies sind lediglich Ideen, hieran wurde noch nicht gearbeitet.</p>


<h3>Paketieren von Bibliotheken in udebs</h3>

<em>Dies ist nur ein Vorschlag, der auf meinen Erfahrungen basiert. Richten Sie
bitte jegliche Kommentare an mich oder diskutieren Sie es bei debian-boot.</em>

<p>Zuallererst lesen Sie bitte die generellen Instruktionen dazu, wie man udebs
erstellt (zu finden im Installer Subversion-Repository). Die folgenden Punkte
beziehen sich spezifisch auf Bibliotheken:</p>

<p>Beim Paketieren von Bibliotheksmodulen muss besonders aufgepasst werden.
Dieses Dokument liefert einige grundlegende Informationen zu diesem Thema.</p>

<p>Vorm Lesen ist es gut, bereits all die andere Dokumentation zum
Installer-Projekt zu lesen. Der
<a href="http://www.netfort.gr.jp/~dancer/column/libpkg-guide/libpkg-guide.html">\
Leitfaden zum Paketieren von Bibliotheken</a> von Junichi Uekawa zeigt die
generelle Praxis beim Paketieren von Bibliotheken. Auch diesen sollte man
gelesen haben.</p>


<h4>Namensgebung</h4>

<p>Bibliotheksmodule sollten wie ihre deb-Gegenstücke benannt werden, wobei
ihnen noch die Zeichenkette »-udeb« angehängt wird. Zum Beispiel wird libc6 ein
Gegenstück »libc6-udeb« haben und libglib2.0-0 wird zu »libglib2.0-0-udeb«. Es
ist wichtig, die soname-Nummer im Modulnamen einzufügen, da ein ABI-Wechsel der
Bibliothek alle abhängigen Module ruiniert und somit eine Netzinstallation
unmöglich macht, bis die abhängigen Module neu erstellt werden.</p>


<h4>Abhängigkeiten</h4>

<p>Es ist normal für ein Debian-Paket, dass es seine Abhängigkeiten über das
»shlibs«-System findet. Jede installierte Bibliothek liefert eine
»shlibs«-Datei, die angibt, welches Paket diese Bibliothek liefert. Dies
funktioniert jedoch nicht, um die Abhängigkeiten der Installer-Module
herauszufinden, da die »shlibs«-Dateien auf die deb-Pakete verweisen werden,
welche die fragliche Bibliothek liefern, aber nicht auf das betreffende
Installer-Modul.</p>

<p>Um also dennoch dh_shlibdeps nutzen zu können sollte jede Bibliothek eine
»Provides:«-Zeile hinzufügen, in welcher der Name des passenden deb-Pakets der
Bibliothek angegeben ist. Z.B. »libc6« bei »libc6-udeb«.</p>


<h4>Inhalt</h4>

<p>Das Modul muss natürlich die Bibliothek selbst enthalten wie auch eine
symbolische Verknüpfung auf die Bibliothek, die wie der SONAME der Bibliothek
benannt ist. Der Entwicklungs-Link ebenso wie libtools ».la«-Dateien werden
nicht benötigt. Falls eine Bibliothek Module oder Daten mit sich bringt
(gespeichert in /usr/share), ist es gut zu untersuchen, ob alles davon notwendig
ist und, falls nicht, ob es irgendwie entfernt werden kann.</p>


<h4>Ändern von Kompilierungssoptionen</h4>

<p>Manchmal kann es notwendig sein, die Kompilierungsoptionen für eine
Modulbibliothek zu ändern und somit die Binärkompatibilität zu zerstören. Nicht
alle Änderungen bei den Kompilierungsoptionen führen zu einer Veränderung der
ABI, die Verwendung von »-O« ist beispielsweise harmlos.</p>

<p>Ein Ändern der ABI war zum Beispiel bei libdirectfb notwendig, da die
Bibliothek des deb-Pakets mit SDL- und X-Unterstützung kompiliert worden war,
was den Installer unnötig aufgebläht hätte.</p>

<p>Wenn Binärkompatibilität zerstört wird, dann muss der »soname« der Bibliothek
verändert werden, um diesem Umstand Rechnung zu tragen. Es wird empfohlen, die
Zeichenkette »udeb« in den »soname« aufzunehmen. Den »soname« zu ändern kann
einfach sein, wenn die Bibliothek von libtool erstellt wurde und autoconf
verwendet. Halten Sie sich an das
<a href="http://www.gnu.org/software/libtool/manual.html">libtool-Handbuch</a>
und das <a href="http://www.gnu.org/software/autoconf/manual/autoconf-2.57/autoconf.html">autoconf-Handbuch</a>.</p>

<p>Es reicht nicht aus, einfach nur die neue Bibliothek in ein Installer-Modul
zu paketieren. Falls ein anderes Modul Programme enthält, die zu dieser
Bibliothek linken, dann muss diese Bibliothek im Build-System verfügbar sein.</p>

<p>Da Module nicht auf normalen Systemen installiert werden sollten, besteht
Bedarf an deb-Paketen, die diese Bibliothek wie auch den notwendigen
Entwicklungs-Link liefern. Das Paket sollte »libfoo-udeb-dev« genannt werden
und eine Abhängigkeit zu »libfoo-dev« aufweisen. Die einzigen Dateien, die
»libfoo-udeb-dev« liefern soll, ist die ABI-veränderte Bibliothek und die
notwendigen symbolischen Verknüpfungen. Da der Entwicklungs-Link identisch
ist mit dem Entwicklungs-Link in »libfoo-dev«, sollten die Bibliothek und die
Verknüpfungen in das Verzeichnis <code>/usr/lib/udeblib</code> installiert
werden.</p>

<p>Falls nun ein Programm aus dem Installer zur ABI-veränderten Bibliothek
linken sollte, muss der Linker mit der Option <kbd>»-L/usr/lib/udeblib«</kbd>
aufgerufen werden, um ihm mitzuteilen, wo er zuerst nach dem Entwicklungs-Link
»libfoo« suchen soll. Diese Vorgehensweise sollte in der Datei »README.Debian«
von »libfoo-udeb-dev« dokumentiert werden.</p>

<p>Damit das shlibs-System alles korrekt handhabt, müssen ein paar kleinere
Anpassungen vorgenommen werden. Um korrekte Abhängigkeiten für Installer-Module
zu erhalten, die von »libfoo-udeb« abhängen, sollte das »xlibfoo-udeb-dev«-Paket
eine »shlibs«-Datei liefern. die auf das »libfoo-udeb«-Paket verweist. Für
»libdirectfb-udeb-dev« sollte die »shlibs«-Datei enthalten:</p>

<p align="center">
        libdirectfb-0.9-udeb 16 libdirectfb-0.9-16-udeb
</p>

<p>Es bleibt nur ein Problem zurück. Falls es ein Installer-Modul »libbar-udeb«
gibt, das von »libfoo-udeb« abhängt, und das selbst hingegen außerdem aufgrund
von Binärinkompatibilitäten ein »libbar-udeb-dev« aufweist, wird
»libbar-udeb-dev« nicht von »libfoo-udeb« abhängen, bei welchem es sich um ein
Installer-Modul handelt und welches nicht auf dem Build-System installiert
werden darf. Um dieses Problem anzugehen sollte jedes »udeb-dev« das passende
udeb-Paket liefern,
z.B. sollte »libdirectfb-udeb-dev« ein Zeile</p>

<p align="center">
               Provides: libdirectfb-0.9-16-udeb
</p>

<p>aufweisen.</p>
