<define-tag moreinfo>
<p>Original submitter of the report: &lt;solar@ideal.ru&gt;

<p>The [exploit] shellcode is a bit different from the usual one:
<p>
<ul>
  <li> it does setuid(geteuid()) by itself;
  <li> easier to modify (no more fixed offsets in shellcode, and the shell
       name can be changed, too &mdash; the length is not fixed);
  <li> the NULL pointer itself is passed in %edx to the execve syscall, not
       the pointer to NULL (it seems like a mistake in the Aleph One's
       article); this doesn't seem to affect anything though.
</ul>

<p>It might be possible to exploit this hole remotely, if one would use a patched
telnet client which would allow exporting large environment variable values.
The overflow would happen at /bin/login startup then (somewhat like the
famous LD_PRELOAD exploit, but an overflow). I'm not sure of that though,
there might be some restrictions on environment variables in telnetd.
</define-tag>
<define-tag description>libc NLSPATH buffer overflow</define-tag>

# do not modify the following line
#include '$(ENGLISHDIR)/security/1997/19970213.data'
