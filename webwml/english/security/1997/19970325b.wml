#!wml -o ../../../../debian.org/security/1997/%BASE.html.en
<define-tag pagetitle>inetd</define-tag>
<define-tag report_date>25 Mar 1997</define-tag>
<define-tag packages>netbase</define-tag>
<define-tag description>inetd passes priviledged groups on to subprocesses</define-tag>
<define-tag isvulnerable>yes</define-tag>
<define-tag fixed>netbase 2.11-1</define-tag>
#use wml::debian::basic title="Debian GNU/Linux &mdash; <pagetitle>"
#use wml::debian::security

<blockquote>
<b>Date: 	Tue, 25 Mar 1997 02:30:39 -0500</b> <br>
<b>From: David Holland &lt;dholland@eecs.harvard.edu&gt;</b> <p>

<pre>
 > In message <Pine.SUN.3.94.970324024042.15592A@dfw.dfw.net> Aleph One writes:
 > :   tftpd in FreeBSD distribution uses chroot() and sets its uid to nobody.
 > : I don't think, it does anything reasonable with groups.
 >
 > FreeBSD's inherits the groups from the calling process, which is
 > inetd.  I don't know if this is reasonable or not, but I think that it
 > means that the group will be daemon.  tftpd doesn't do anything with
 > groups.
</pre>

While we're at it: many inetds don't clear the groups list when they
start up, so that if you kill and restart inetd from your root shell
inetd subprocesses may inherit additional (probably privileged)
groups. <p>

I don't know if FreeBSD's inetd suffers from this problem, but the
currently released Linux one does. (The next release won't; if there's
interest I can post the patch.) <p>

The impact of this problem is fortunately fairly limited, and there's
not usually any real reason for root to be in a whole stack of groups. <p>

</blockquote>

<:= languages ("$(HOME)", "security", "$(WML_SRC_BASENAME)", "$(CUR_LANG)") :>

<HR>
#use wml::debian::footer
