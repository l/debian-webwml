<define-tag description>predictable random number generator</define-tag>
<define-tag moreinfo>
<p>The recently announced vulnerability in Debian's openssl package
(<a href="/security/2008/dsa-1571">DSA-1571-1</a>, <a href="https://security-tracker.debian.org/tracker/CVE-2008-0166">CVE-2008-0166</a>) indirectly affects OpenSSH.  As a result,
all user and host keys generated using broken versions of the openssl
package must be considered untrustworthy, even after the openssl update
has been applied.</p>

<p>1. Install the security updates</p>

   <p>This update contains a dependency on the openssl update and will
   automatically install a corrected version of the libssl0.9.8 package,
   and a new package openssh-blacklist.</p>

   <p>Once the update is applied, weak user keys will be automatically
   rejected where possible (though they cannot be detected in all
   cases).  If you are using such keys for user authentication, they
   will immediately stop working and will need to be replaced (see
   step 3).</p>

   <p>OpenSSH host keys can be automatically regenerated when the OpenSSH
   security update is applied.  The update will prompt for confirmation
   before taking this step.</p>

<p>2. Update OpenSSH known_hosts files</p>

   <p>The regeneration of host keys will cause a warning to be displayed when
   connecting to the system using SSH until the host key is updated in the
   known_hosts file.  The warning will look like this:</p>

<pre>
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
Someone could be eavesdropping on you right now (man-in-the-middle attack)!
It is also possible that the RSA host key has just been changed.
</pre>

   <p>In this case, the host key has simply been changed, and you should update
   the relevant known_hosts file as indicated in the error message.
   
   It is recommended that you use a trustworthy channel to exchange the
   server key.  It is found in the file /etc/ssh/ssh_host_rsa_key.pub on
   the server; it's fingerprint can be printed using the command:</p>

      <p>ssh-keygen -l -f /etc/ssh/ssh_host_rsa_key.pub</p>

   <p>In addition to user-specific known_hosts files, there may be a
   system-wide known hosts file /etc/ssh/ssh_known_hosts.  This is file is
   used both by the ssh client and by sshd for the hosts.equiv
   functionality.  This file needs to be updated as well.</p>

<p>3. Check all OpenSSH user keys</p>

   <p>The safest course of action is to regenerate all OpenSSH user keys,
   except where it can be established to a high degree of certainty that the
   key was generated on an unaffected system.</p>

   <p>Check whether your key is affected by running the ssh-vulnkey tool, included
   in the security update.  By default, ssh-vulnkey will check the standard
   location for user keys (~/.ssh/id_rsa, ~/.ssh/id_dsa and ~/.ssh/identity),
   your authorized_keys file (~/.ssh/authorized_keys and
   ~/.ssh/authorized_keys2), and the system's host keys
   (/etc/ssh/ssh_host_dsa_key and /etc/ssh/ssh_host_rsa_key).</p>

   <p>To check all your own keys, assuming they are in the standard
   locations (~/.ssh/id_rsa, ~/.ssh/id_dsa, or ~/.ssh/identity):</p>

     <p>ssh-vulnkey</p>

   <p>To check all keys on your system:</p>

     <p>sudo ssh-vulnkey -a</p>

   <p>To check a key in a non-standard location:</p>

     <p>ssh-vulnkey /path/to/key</p>

   <p>If ssh-vulnkey says "Unknown (no blacklist information)", then it has no
   information about whether that key is affected.  In this case, you
   can examine the modification time (mtime) of the file using "ls -l".
   Keys generated before September 2006 are not affected.  Keep in mind
   that, although unlikely, backup procedures may have changed the file
   date back in time (or the system clock may have been incorrectly
   set).
   
   If in doubt, generate a new key and remove the old one from any
   servers.</p>

<p>4. Regenerate any affected user keys</p>

   <p>OpenSSH keys used for user authentication must be manually regenerated,
   including those which may have since been transferred to a different system
   after being generated.</p>

   <p>New keys can be generated using ssh-keygen, e.g.:</p>

<pre>
   $ ssh-keygen
   Generating public/private rsa key pair.
   Enter file in which to save the key (/home/user/.ssh/id_rsa):
   Enter passphrase (empty for no passphrase):
   Enter same passphrase again:
   Your identification has been saved in /home/user/.ssh/id_rsa.
   Your public key has been saved in /home/user/.ssh/id_rsa.pub.
   The key fingerprint is:
   00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00 user@host
</pre>

<p>5. Update authorized_keys files (if necessary)</p>

   <p>Once the user keys have been regenerated, the relevant public keys
   must be propagated to any authorized_keys files (and authorized_keys2
   files, if applicable) on remote systems.  Be sure to delete the lines
   containing old keys from those files.</p>


<p>In addition to countermeasures to mitigate the randomness vulnerability,
this OpenSSH update fixes several other vulnerabilities:</p>

<p><a href="https://security-tracker.debian.org/tracker/CVE-2008-1483">CVE-2008-1483</a>:
   Timo Juhani Lindfors discovered that, when using X11 forwarding, the
   SSH client selects an X11 forwarding port without ensuring that it
   can be bound on all address families. If the system is configured
   with IPv6 (even if it does not have working IPv6 connectivity), this
   could allow a local attacker on the remote server to hijack X11
   forwarding.</p>

<p><a href="https://security-tracker.debian.org/tracker/CVE-2007-4752">CVE-2007-4752</a>:
   Jan Pechanec discovered that ssh falls back to creating a trusted X11
   cookie if creating an untrusted cookie fails, potentially exposing
   the local display to a malicious remote server when using X11
   forwarding.</p>

<p>For the stable distribution (etch), these problems have been fixed in
version 4.3p2-9etch1.  Currently, only a subset of all supported
architectures have been built; further updates will be provided when
they become available.</p>

<p>For the unstable distribution (sid) and the testing distribution
(lenny), these problems have been fixed in version 4.7p1-9.</p>

<p>We recommend that you upgrade your openssh packages and take the
measures indicated above.</p>
</define-tag>

# do not modify the following line
#include "$(ENGLISHDIR)/security/2008/dsa-1576.data"
# $Id$
