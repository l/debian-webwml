#use wml::debian::template title="Auditing Package Prioritization Guidelines " GEN_TIME="yes"
#use wml::debian::recent_list

<p>When performing an audit of the Debian distribution one of the first problems is deciding which packages to examine.</p>
<p>Ideally all packages would be eximined, but due to the sheer size of the archive there has to be a simple way of prioritizing the work.</p>
<p>As a simple set of guidelines the packages worth examination first are:</p>
<ol>
<li>Any binary which is installed setuid or setgid.</li>
<li>Anything which provides a service over a network.</li>
<li>Any remotely accessible CGI/PHP scripts.</li>
<li>Anything which contains a cronjob or other automated script which runs with root privileges.</li>
</ol>

<h2><tt>setuid</tt> and <tt>setgid</tt> binaries</h2>
<p><tt>setuid</tt> and <tt>setgid</tt> binaries are the traditional targets for security audits, as compromising a vulnerable binary with either of these permissions can lead to a local user gaining access to privileges they shouldn't otherwise have.</p>
<p>To aid the search there is a list of all the setuid and setgid binaries contained in the current stable release in a searchable form here:</p>
<ul>
<li><a href="http://shellcode.org/Setuid/">Searchable setuid/setgid list</a></li>
</ul>
<p>When it comes to choosing these binaries it's important to remember that some such binaries are more security sensitive than others.  setuid(root) binaries should be examined ahead of setgid(games) and setuid(bugs) for example.</p>

<h2>Network Servers</h2>
<p>Networking servers are another obvious source of inspiration when it comes to performing a security audit, as an exploitable problem in them could lead to attackers compromising machines remotely.</p>
<p>Remote compromises are usually much more severe than local compromises.</p>

<h2>Online Scripts</h2>
<p>Online scripts, especially CGI scripts, are really in the same class as network servers - although your webserver itself may be secure the scripts which run upon it are just as important.</p>
<p>A bug in a script that is available across the network is as serious as a bug in a server listening for connections - both could allow your machine to be compromised equally.</p>

<h2>Cronjobs and system services</h2>
<p>Whilst there aren't many of these around it's worth looking at the automatic scripts, cronjobs, etc, which are included inside packages.</p>
<p>A lot of supporting things run as root by default for cleaning logfiles, etc.</p>
<p>Successful exploitation of a symlink attack could result in a local compromise.</p>