#use wml::debian::template title="Conducting an audit"
#use wml::debian::recent_list


<p>This page gives a rough overview of the steps necessary to conduct
 an audit of a package.</p>

<p>The first step is to actually choose a package to examine, you should
 pick one that's more critical to security.</p>

<p>See <a href="$(HOME)/security/audit/packages">the list of packages
that we think are most important to audit</a> for suggestions on how
to make your decision.</p>

<p>One thing that should be made clear is that we are <em>not</em> trying
 to make sure that a package is only audited once.  If many people choose to
 examine the same package this is a good thing, as it demonstrates that 
 many people believe the package is security sensitive.</p>

<p>By allowing an essentially random selection of packages we simplify
coordination and we eliminate the problem of <q>how can you trust person
X to do a good job?</q>  (We don't need to as it is assumed that sooner
or later somebody else will choose to examine the same program).</p>

<h2>Starting the audit</h2>

<p>After making your package selection you actually need to start the
audit.</p>

<p>If you're not sure about the kind of problems you're looking for
first start by reading a book on how to develop secure software.</p>

<p>The <a href="http://www.dwheeler.com/secure-programs">Secure
Programming for Linux and Unix HOWTO</a> has a lot of good information
that can help you. 
<a href="http://www.securecoding.org/">Secure Coding: Principles &amp; Practices</a>
by Mark G. Graff and Kenneth R. van Wyk is also an excellent
book.</p>

<p>Although tools are imperfect, they can still be extremely helpful
in finding likely vulnerabilities, See <a href="tools">the auditing
tools page</a> for more information on some of the available auditing
tools and how they are used.</p> 

<p>As well as looking at the code itself it is a good idea to read the
documentation of the package itself, and try installing it and using
it.</p>

<p>This might allow you to think of ways to subvert the program in
 its typical operation.</p>

<h2>Reporting Problems</h2>

<p>If you do discover a problem within the package that you are
examining it then you should report it. When reporting a security bug
try to provide also a patch for it so that the developers can fix it
in a timely fashion. There is no need to provide an attack sample
(often called an <em>exploit</em> or <em>proof of concept</em>) since
the patch should speak for itself, it is usually best to invest time
in provide a proper patch that to provide a successful attack that
exploits the bug.</p>

<p>Here is a list of recommended steps once you have found a security
bug in Debian:</p>

<ol>

<li>Try to produce a patch for the bug or obtain sufficient
information so others can determine the bug's existence. Ideally each
report should contain a fix for the problem which you have discovered,
which has been tested and verified to actually close the problem.

<p>If you do not have a fix then the more detail you can give on the
scope of the problem, the relative severity of the issue and any
workarounds the better.</p></li>

<li>First review if the security bug is present in the stable
Debian release or if it might be present in other distributions or in
the version provided by upstream maintainers.</li>

<li>Based on the above review, report the issue:

<ul>

<li>To the upstream maintainer through their security
contact e-mail, provide the analysis and the patch.</li>

<li>To the Debian Security Team if the bug is present in a released
Debian version. The Debian Security Team will typically assign a <a
href="$(HOME)/security/cve-compatibility">CVE name</a> to the
vulnerability. The security team will coordinate with any other Linux
Distributions if necessary and contact the package maintainer on your
behalf. You can, however, send a copy of the mail also to the package
maintainer. Do so only when handling low risk vulnerabilities (see
below).</li>

<li>If the bug is not present in a released Debian version and the
application might be present in other distributions or operating
systems then mail <a
href="http://oss-security.openwall.org/wiki/mailing-lists/oss-security">oss-security</a>
(a public mailing list used to report and discuss security bugs that
have been publicly disclosed). You don't need to do this if you have
already sent the bug to the Debian Security Team as they will forward
it to this list too.</li>

<li>If the bug is <strong>not</strong> present in any released Debian version
and you are absolutely sure that the application is <strong>not</strong> included 
in any other distributions or operating system then report it through the
Bug Tracking system.</li> 

</ul></li>

<li>Once the vulnerability is public (i.e. when the Debian Security
Team or other vendor has issued an advisory) then a bug with all the
relevant information should be filed in the Debian Bug Tracking System
to keep track of the security issue in unreleased Debian versions
(i.e. <em>sid</em> or <em>testing</em>).  This is usually done by the
Security Team itself, if you find that they have missed this or you
are not reporting this to the Security Team then you can report it
yourself.  Make sure you tag the bug appropriately (use the
<em>security</em> tag) and that you set the proper priority (usually
<em>grave</em> or higher). Also make sure that the bug title includes
the proper <a href="$(HOME)/security/cve-compatibility">CVE name</a>
if one has been assigned to it. This provides a way to keep track of
security bugs so that they are fixed both in the released and
unreleased Debian versions.</li>

<li>If you wish, once the issue is public, you can forward this information 
to public full disclosure mailing lists such as 
<a href="http://lists.netsys.com/full-disclosure-charter.html">full-disclosure</a>
or
<a href="http://www.securityfocus.com/archive/1">Bugtraq</a>.</li>

</ol>

<p>Notice that these steps might depend based on the risk associated with
the vulnerability found. You need to assess the risk based on:</p>

<ul>
<li>If the vulnerability is remote or local.</li>
<li>The consequences of the vulnerability if exploited.</li>
<li>The widespread usage of the software affected by the vulnerability.</li>
</ul>

<p>Different steps should be taken, for example, to report a local
symlink attack that can only be used by authenticated users and only
provides a way to damage the system than to report a remote buffer
overflow that provides administrative privileges and is present in
software which is in widespread use.</p>

<p>In most cases, as most security bugs shouldn't be disclosed
generally until after they have been fixed <em>do not</em> report them
via the standard <a href="http://bugs.debian.org/">Debian Bug Tracking
System</a>, instead first report the problem directly to <a
href="$(HOME)/security/">the Security Team</a> who will handle the
release of an updated package and, once fixed, report them to the
BTS.</p>


