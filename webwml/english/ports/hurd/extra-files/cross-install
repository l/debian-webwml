#!/bin/bash
#
# Copyright (c) 1999 by Marcus Brinkmann <Marcus.Brinkmann@ruhr-uni-bochum.de>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as
#   published by the Free Software Foundation; either version 2 of
#   the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Library General Public License for more details.
#
#   You should have received a copy of the GNU General Public
#   License along with this library; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

# INSTRUCTIONS:
#
# * You need dpkg, sharutils (uudecode) and patch to use this script.
#   If you do not use Debian, you can find dpkg on any Debian mirror
#   in debian/project/dpkg/.
# * Mount your hurd partition, created with "mke2fs -o hurd /dev/???"
# * Make a directory somewhere, and put the following files in it:
#   cross-install    - this file. Installs the base packages on the hurd partition.
#   native-install   - To be run after booting to the Hurd.
#   dpkg-hurd        - a script to cross install packages even if they contain pre* scripts.
#   Also the packages mentioned in ${plist}, below.

# cross-install <path>
#
# for example: cross-install /gnu
#
#    1 Jan 1999 - v0.0 <Marcus.Brinkmann@ruhr-uni-bochum.de>
#        Original created by Marcus Brinkmann.
#                 v0.1 Added etc/login and terminal support.
#                 v0.2 Fixed typo in passwd file.
#    4 Jan 1999 - v1.0 Added logging and verbose messages.
#                      Adding checks for certain malfunctions.
#                      Cleaned up the hacks.
#                      Only using ONE directory of base packages.
#   16 Jan 1999 - v1.1 now works with or without the symlink /usr -> /
#                      Uncommented timezone option.
#                      Install perl tar file only if it exists.
#   16 Feb 1999 - v1.2 Fix stupid error.
#                      Added error check for dpkg run.
#   2  Mar 1999 - v1.3 Replace [ == ] with [ = ], because former doesn't
#                      work on all systems (Emmanuel Michon).
#                      Only install known packages.
#                      Change working directory before applying patches (Brian May)
#                      Check if servers.boot is a conffile and needs to be copied.
#   6  Mar 1999 - v1.4 slang0.99.38 -> slang1 (Brian May)
#                      Don't bail out for NFS kernel problem (Brian May).
#                 v1.5 Do install terminfo in /usr/share, not in /share.
#                      Copy boot/servers.boot, not /servers.boot (Gavin Lewis)
#   28 Mar 1999	- v1.6 Add link from mtab to fstab.
#                      Patch shlibs of libc6 package, or dpkg-shlibdeps won't work.
#                      Make it work for flat and hierarchical repository.
#                      Move if/fi to include more patches against dpkg (thanks Santiago!)
#   27 Apr 1999 - v2.0 Update package list, move perl.dist to perl (because
#                      glibc 2.1.1 needs perl to configure, sucker!)
#                      Copy also dpkg-hurd to ${dest}.
#    2 Mai 1999 - v2.1 Remove base/timezones, add base/e2fsprogs.
#    7 Mai 1999 - v2.2 Add base/grub.
#                      Do not ask about /usr symlink. All known problems are
#                      resolved.
#   13 Mai 1999 - v2.3 Add editors/ed to oplist (requested by Roland McGrath)
#                      base/libstdc++2.9 for dselect
#                      Replace /etc/motd with something more sensible.
#   17 Mai 1999 - v2.4 Added syslogd and inetutils. A lot of packages are
#                      now required which were optional before. I am not
#                      going to take a risk. Base is base.
#                      Add ncurses-base.
#                      Don't do the mtab symlink. It is harmful for e2fsck.
#   27 Mai 1999 - v2.5 Commented out some old fixes. I am going to remove
#                      them silently in one of the next versions.
#                      Add /etc/hosts.
#   15 Jun 1999 - v2.6 Add adduser.
#   30 Jun 1999 - v2.7 Add overwrite stuff to grep, so it doesn't bail out.
#                      Also mention that you need dpkg, sharutils and patch.
#                      Reported by Ognyan Kulev. 
#    2 Jul 1999 - v2.8 Remove some patches. We don't want to carry around
#                      this crap for ever.
#   22 Jul 1999 - v3.0 Work with perl5, add libgdbmg1.
#                      Only set up /etc/ttys if it is not a conffile.
#                      Really fix the overwrite stuff now (blech).
#    6 Aug 1999 - v3.1 Add base/perl-base dummy package.
#    7 Sep 1999 - v3.2 Add base/libwrap0, base/tcpd, base/dpkg-mountable,
#                      base/dpkg-multicd, base/libnet-perl.
#                      Apply patch to support download and option parsing by
#                      Daniel Burrows.

plist="base/adduser base/ae base/base-files base/base-passwd base/bash \
       base/bsdutils base/debianutils base/diff base/dpkg-ftp \
       base/dpkg-mountable base/dpkg-multicd base/dpkg base/e2fsprogs \
       base/fileutils base/findutils base/gnumach base/grep base/grub \
       base/gzip base/hostname base/hurd net/inetutils base/libc0.2 \
       base/libgdbmg1 base/libncurses4 base/libnet-perl \
       base/libreadlineg2 base/libstdc++2.9 base/libwrap0 \
       base/mawk base/ncurses-base base/ncurses-bin base/passwd \
       base/perl-5.005-base base/perl-base base/sed \
       base/shellutils base/slang1 base/syslogd base/tar base/tcpd \
       base/textutils interpreters/perl-5.005"
oplist="admin/locales text/less editors/ed libs/gconv-modules"
#oplist=""

# If you only want a minimal base system, leave out packages listed in
# ${oplist}.
#
# It is possible to work from a Debian mirror, use .../binary-hurd-i386/ as
# the repository directory.
#
# Then login as user ROOT, enter the directory ("cd path/to/repository")
# and run
#  ./cross-install /gnu
# where /gnu is the mount point of your hurd partition.


#
# CONFIGURATION
#
hostname="hurd"
dpkghurd="`pwd`/dpkg-hurd"
nativeinstall="`pwd`/native-install"
log="`pwd`/install.log"
download=""
dest=""
repository="`pwd`"

while [ "$#" -ne 0 ]
do
  case "$1" in
    "--hostname"|"--dpkghurd"|"--nativeinstall"|"--log"|"--download"|"--repository")
      if [ "$#" -lt 2 ]
      then
        echo "$1 needs an argument"
	exit 1
      fi
      case "$1" in
        "--hostname") hostname="$2";;
	"--dpkghurd") dpkghurd="$2";;
	"--nativeinstall") nativeinstall="$2";;
	"--log") log="$2";;
	"--download") download="$2";;
	"--repository") repository="$2";;
      esac
      shift 2
      ;;
   "--help" | "--hel" | "--hel" | "-h")
     echo "Usage: cross-install DEST-DIR [OPTION]..."
     echo "Cross-installation script for Debian GNU/Hurd"
     echo
     echo "   Options:"
     echo " --hostname      name      Set the hostname of the new system"
     echo " --dpkghurd      file      Give the filename of the dpkg-hurd script"
     echo " --nativeinstall file      Give the filename of the native-install script"
     echo " --log           file      Give the filename of the generated output log"
     echo " --download      server    Download missing files from the given Debian mirror"
     exit 0
     ;;
    -*)
     echo "Bad option: $1"
     exit 1
     ;;
    *)
     dest="$1"
     shift
     ;;
  esac
done

echo "Determining destination directory."
expr "${dest}" > /dev/null : / \
 && { echo "You are using an absolute path, fine." ; \
      dest="${dest}"; } \
 || { echo "You are using a relative path, prepending working directory." ; \
      dest="`pwd`/${dest}"; }

set -u -e

echo "Creating a Debian GNU/Hurd system in ${dest},"
echo "logging dpkg output in ${log}."
cat > ${log} < /dev/null

PS4='+$LINENO: '

err ()
{
    echo "$0: $1" 1>&2
    exit 1
}

#############################
# Comply to Hurd philosophy.
#############################

if [ ! -e ${dest}/usr ] ; then
	echo
	echo Setting up link from usr to root directory to comply with Hurd philosophy.
	rm -f ${dest}/usr
	ln -s . ${dest}/usr
fi

###########################
# Prepare dpkg's database.
###########################
# INFO: This is needed so dpkg-hurd does actually work.
echo
echo Preparing dpkg\'s database.

install -d -m 755 -o root -g root ${dest}/var/lib/dpkg/{info,updates}
touch ${dest}/var/lib/dpkg/{status,available}

##########################
# cross-install packages.
##########################
echo
echo "I will now install packages. If you have multiple versions of the"
echo "same package available, it may be that I don't recognize the latest."
echo "Please remove the offending old version in this case and start from"
echo -n "scratch."

if [ "x${download}" != x ] ; then
	echo "Missing packages will be downloaded from ${download}"
else
	echo
fi
echo
echo "Installing necessary packages, this may take some time."

cd ${dest}
for pname in ${plist}
do
	package=`ls -1 ${repository}/${pname}_*.deb 2> /dev/null | tail -n 1`
	matches=`ls -1 ${repository}/${pname}_*.deb 2> /dev/null | wc -l`

	if [ ${matches} = 0 ] ; then
		newpname=`basename ${pname}`
		package=`ls -1 ${repository}/${newpname}_*.deb 2> /dev/null | tail -n 1`
		matches=`ls -1 ${repository}/${newpname}_*.deb 2> /dev/null | wc -l`
	fi

	if [ ${matches} = 0 ] ; then
		if ! [ -z "$download" ]; then
			echo "- ${pname} not found, downloading from ${download}."
			mkdir -p ${repository}/partial
			wget --retr-symlinks -cqP ${repository}/partial ftp://${download}/debian/dists/unstable/main/binary-hurd-i386/${pname}_\*.deb
			mv ${repository}/partial/`basename ${pname}`_*.deb ${repository}/`dirname ${pname}`
			package=`ls -1 ${repository}/${pname}_*.deb 2> /dev/null | tail -n 1`
			matches=`ls -1 ${repository}/${pname}_*.deb 2> /dev/null | wc -l`
		fi
	fi

	pname=`basename $pname`

	if [ ${matches} = 0 ] ; then
		echo - ${pname} could not be found, but it is needed.
		exit 1
	else
		if [ ${matches} != 1 ] ; then
			echo "More than one version of package ${pname} available, choosing the alphabetically last."
		fi
		echo - ${package}
		${dpkghurd} --unpack ${package} --force-depends --force-overwrite >> ${log} 2>&1 || break
	fi
done
echo
echo "Installing optional packages, this may take some time."
for pname in ${oplist}
do
	package=`ls -1 ${repository}/${pname}_*.deb 2> /dev/null | tail -n 1`
	matches=`ls -1 ${repository}/${pname}_*.deb 2> /dev/null | wc -l`

	if [ ${matches} = 0 ] ; then
		newpname=`basename ${pname}`
		package=`ls -1 ${repository}/${newpname}_*.deb 2> /dev/null | tail -n 1`
		matches=`ls -1 ${repository}/${newpname}_*.deb 2> /dev/null | wc -l`
	fi

	if [ ${matches} = 0 ] ; then
		if ! [ -z "$download" ]; then
			echo "- ${pname} not found, downloading from ${download}."
			mkdir -p ${repository}/partial
			wget --retr-symlinks -cqP ${repository}/partial ftp://${download}/debian/dists/unstable/main/binary-hurd-i386/${pname}_\*.deb
			mv ${repository}/partial/`basename ${pname}`_*.deb ${repository}/`dirname ${pname}`
			package=`ls -1 ${repository}/${pname}_*.deb 2> /dev/null | tail -n 1`
			matches=`ls -1 ${repository}/${pname}_*.deb 2> /dev/null | wc -l`
		fi
	fi

	pname=`basename $pname`

	if [ ${matches} = 0 ] ; then
		echo "- ${pname} could not be found, let us hope it is not vital."
	else
		if [ ${matches} != 1 ] ; then
			echo "More than one version of package ${pname} available, choosing the alphabetically last."
		fi
		echo - ${package}
		${dpkghurd} --unpack ${package} --force-depends --force-overwrite >> ${log} 2>&1 || break
	fi
done

set +e
errors=`grep -v 'trying to overwrite\|but is unpacked but not configured\|Preparing to replace\|Unpacking\|pre-dependency problem\|Selecting previously deselected package\|pre-depends on\|overriding problem because --force enabled\|(Reading database ...\| package architecture (hurd-i386) does not match system\|is not installed.\|but has never been configured.\|dpkg-deb: building package' ${log}`
set -e

if [ ! "x${errors}" = x ] ; then
	echo
	echo "ERROR: dpkg did return unusual messages, please investigate:"
	echo
	grep -v '^rm: /tmp/.*: Device or resource busy$\|dpkg - warning, overriding problems\|trying to override\|Preparing to replace\|Unpacking\|pre-dependency problem\|Selecting previously deselected package\|pre-depends on\|overriding problem because --force enabled\|(Reading database ...\| package architecture (hurd-i386) does not match system\|is not installed.\|but has never been configured.\|dpkg-deb: building package' ${log}
	exit 1
fi

##############################
# Change /etc/motd
##############################
echo
echo "Writing /etc/motd."

cat > ${dest}/etc/motd << _NIL_
Debian GNU/Hurd

Copyright (C) 1993-1999 Software in the Public Interest,
                    the Free Software Foundation, and others

Most of the programs included with the Debian GNU/Hurd system are
freely redistributable; the exact distribution terms for each program
are described in the individual files in /usr/doc/*/copyright

Debian GNU/Hurd comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
_NIL_

##############################
# Prepare initial translator.
##############################
# FIX: Should be done in the Hurd preinst.
echo
echo "Setting up initial translator hook."

install -d -m 755 -o root -g root ${dest}/servers/socket
touch ${dest}/servers/exec

#####################################
# Make sure boot/servers.boot exists
#####################################
# Explanation: It is a conf file in some versions of Hurd.

echo
echo "Latest Hurd packages declare boot/servers.boot as a conffile, let me check."

if [ -e ${dest}/boot/servers.boot.dpkg-new ] ; then
	echo "Yes, found it. I will copy boot/servers.boot.dpkg-new to boot/servers.boot"
	cp ${dest}/boot/servers.boot.dpkg-new ${dest}/boot/servers.boot
else
	echo "Nope, not your version. Please make sure that you check boot/servers.boot after"
        echo "your next update of the hurd package, because your changes will be overriden."
fi

#####################################
# Make sure libexec/runsystem exists
#####################################
# Explanation: It is managed by update-alternatives.
#
if [ ! -e ${dest}/libexec/runsystem -a -e ${dest}/libexec/runsystem.gnu ] ; then
	echo "Copying libexec/runsystem, so the system can boot."
	cp ${dest}/libexec/runsystem.gnu ${dest}/libexec/runsystem
fi

############################
# Move perl in proper place
############################
# Explanation: Latest glibc package needs perl (and awk) to configure!

if [ ! -e ${dest}/usr/bin/perl ] ; then
	if [ -e ${dest}/usr/bin/perl.dist ] ; then
		echo
		echo "Moving perl into place."
		mv ${dest}/usr/bin/perl.dist ${dest}/usr/bin/perl
	else
		if [ -e ${dest}/usr/bin/perl-5.005.dist ] ; then
		echo
		echo "Found versioned perl."
		# We only copy it here so the postinst does the right thing.
		# A mv or ln won't work!
		cp ${dest}/usr/bin/perl-5.005.dist ${dest}/usr/bin/perl
		else
			echo
			echo "Warning, I could not find perl!"
		fi
	fi
fi

#############################
# Copy native install script
#############################
echo
echo "Copying the scripts native-install and dpkg-hurd."

cp ${nativeinstall} ${dest}
cp ${dpkghurd} ${dest}

#####################
# Fake libc6 package
#####################
# Is this really needed?
# Update: apr 99: Currently, yes. Too many packages require it.
# But we're coming close to a "libc6" free distribution.

if [ ! -e ${dest}/var/lib/dpkg/info/libc6.list ] ; then
	echo
	echo "Although we have libc0.2 packages, we need an entry for libc6 because"
	echo "of dpkg's dependency system."

cat >> ${dest}/var/lib/dpkg/status << '_NIL_'
Package: libc6
Status: install ok installed
Version: 2.0.110

_NIL_

	touch ${dest}/var/lib/dpkg/info/libc6.list
fi

########################################################
# make some essential directories for configure of dpkg
########################################################
# FIX: In sysvutils, together with split-init
if [ ! -e ${dest}/etc/rc0.d ] ; then
        echo
        echo "Making etc/rc?.d directories for dpkg."
        for nr in 0 1 2 3 4 5 6 S
        do
                install -d -m 755 -o root -g root ${dest}/etc/rc${nr}.d
        done
        install -d -m 755 -o root -g root ${dest}/etc/rc.boot
fi

##################
# Setup hostname.
##################
echo
echo "Hey, ${hostname} is really a nice hostname for your machine!"

echo ${hostname} > ${dest}/etc/hostname

###################
# Setup /etc/hosts
###################
echo
echo "Preparing /etc/hosts."

echo "127.0.0.1		localhost ${hostname}" > ${dest}/etc/hosts

##############
# Setup ttys.
##############

if [ ! -e ${dest}/etc/ttys -a ! -e ${dest}/etc/ttys.dpkg-new ] ; then
	echo
	echo Setting up the terminal. Activate it with \"export TERM=mach\" if
	echo booting single user mode.

	cat << '_NIL_' > ${dest}/etc/ttys
console "/libexec/getty 9600"           mach    on      secure trusted console
_NIL_

fi

##################
# Setup terminal. 
##################
# FIX: WILL BE IN NCURSES-BASE.
# #30109, #31375

if [ ! -e ${dest}/usr/share/terminfo/m ] ; then
	echo Installing terminfo directory.
	install -d -m 755 -o root -g root ${dest}/share/terminfo/m
fi

if [ ! -e ${dest}/usr/share/terminfo/m/mach ] ; then
	echo Installing terminfo entry for mach.
	cd ${dest}
uudecode << '_NIL_'
begin 666 usr/share/terminfo/m/mach
M&@$2``D``P"E`.D`;6%C:'Q-86-H($-O;G-O;&4```$````````!`%``"``9
M`/__```"`/____\$``<`"P#_____#P`@`"(`__\F`/____\H`/__+`#_____
M,`#_______\T`#D`________________/@!#`/_______T@`________30#_
M______________________]2`/__5@#_______]8`/__7`#__________V``
M9`!H`&P`<`!T`'@`?`"``(0`B`",`/__D`"4`)@`G`"@`/_______Z0`____
M____________________________________J`#_____JP"T`/____^]`,8`
MSP#__]@`_____________________________________^$`___________C
M`/__________________________________________________________
M___________________E``<`#0`;8P`;6TL`&UM*`!M;)6DE<#$E9#LE<#(E
M9$@`"@`;6T@`"``;6T,`&UM!`!M;30`;6S5M`!M;,6T`&ULW;0`;6S=M`!M;
M,&T`&ULP;0`;6TP`"``;6SD`&UM"`!M/4``;3UD`&T]1`!M/4@`;3U,`&T]4
M`!M/50`;3U8`&T]7`!M/6``;6T@`&UM``!M;1``;6T8`&UM5`!M;5@`;6T,`
M&UM!``T*`!M;)7`Q)61-`!M;)7`Q)61"`!M;)7`Q)61,`!M;)7`Q)61$`!M;
8)7`Q)61#`!M;)7`Q)61!``H`"0`;6UD`
`
end
_NIL_
fi
if [ ! -e ${dest}/usr/share/terminfo/m/mach-bold ] ; then
        echo Installing terminfo entry for mach-bold.
        cd ${dest}
uudecode << '_NIL_'
begin 666 usr/share/terminfo/m/mach-bold
M&@$V``D``P"E`.\`;6%C:"UB;VQD?$UA8V@@0V]N<V]L92!W:71H(&)O;&0@
M:6YS=&5A9"!O9B!U;F1E<FQI;F4```$````````!`%``"``9`/__```"`/__
M__\$``<`"P#_____#P`@`"(`__\F`/____\H`/__+`#_____,`#_______\T
M`#D`________________/@!#`$@`_____TT`________4@!7`/__________
M__________]<`/__8`#_______]B`/__9@#__________V@`;`!P`'0`>`!\
M`(``A`"(`(P`D`"4`/__F`":`)X`H@"F`/_______ZH`________________
M________________________K@#_____L0"Z`/_____#`,P`U0#__]X`____
M_________________________________^<`___________I`/__________
M____________________________________________________________
M_______K``<`#0`;8P`;6TL`&UM*`!M;)6DE<#$E9#LE<#(E9$@`"@`;6T@`
M"``;6T,`&UM!`!M;30`;6S5M`!M;,6T`&ULW;0`;6S=M`!M;,6T`&ULP;0`;
M6S!M`!M;,&T`&UM,``@`&ULY``H`&T]0`!M/60`;3U$`&T]2`!M/4P`;3U0`
M&T]5`!M/5@`;3U<`&T]8`!M;2``;6T``"``;6T8`&UM5`!M;5@`;6T,`&UM!
M``T*`!M;)7`Q)61-`!M;)7`Q)61"`!M;)7`Q)61,`!M;)7`Q)61$`!M;)7`Q
5)61#`!M;)7`Q)61!``H`"0`;6UD`
`
end
_NIL_
fi

echo
echo "Now boot the Hurd and run"
echo "./native-install"
echo
