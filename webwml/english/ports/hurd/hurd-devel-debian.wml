#use wml::debian::template title="Debian GNU/Hurd --- Development" NOHEADER="yes"
[ <a href="../">Ports</a> ]
[ <a href="index">Debian GNU/Hurd</a> ]
[ <a href="hurd-news">News</a> ]
[ <a href="hurd-install">Installation</a> ]
[ <a href="hurd-doc">Documentation</a> ]
[ <a href="hurd-devel">Development</a> ]
[ <a href="hurd-links">Links</a> ]
[ <a href="hurd-contact">Contact</a> ]<p>

<h1>
Debian GNU/Hurd</h1>
<h2>
Development of the Distribution</h2>
<h3>
Boot Disks</h3>
<p>
Currently, we are investigating the various ways to boot a minimal
Hurd system and how to create boot floppies. A preliminary boot disk
is available at <code><a
href="ftp://alpha.gnu.org/gnu/hurd/contrib/marcus/">ftp://alpha.gnu.org/gnu/hurd/contrib/marcus</a></code>
in the file <code>boot-YYYYMMDD</code>. This disk contains GNU Mach,
the <code>ext2fs</code> server, the linker <code>ld.so</code>, the
bootstrap program <code>serverboot</code> and a copy of GRUB. This
disk will boot and wait for a root disk, which is not yet
available.</p>

<h3>
Porting Debian Packages</h3>
<p>
If you want to help the Debian GNU/Hurd port, you should make yourself
familiar with the Debian packaging system. Once you have done this by
reading the available documentation and visiting the <a
href="../../devel/">Developer's Corner</a> you should know how to
extract Debian source packages and build a Debian package. Here is a
crash course for the very lazy people:</p>

<h3>
Obtaining Source and Building Packages</h3>
<p>
Extracting a Debian source package requires the file
<code>package_version.dsc</code> and the files listed in it. You build the
Debian build directory with the command <code>dpkg-source -x
package_version.dsc</code></p>
<p>
Building a package is done in the now existing Debian build directory
<code>package-version</code> with the command <code>dpkg -B -rsudo
"-mMyName <MyEmail>"</code>. Instead <code>-B</code> you can use
<code>-b</code> if you also want to build the architecture independent
parts of the package. You can use <code>-rfakeroot</code> instead
<code>-rsudo</code> if you use the fakeroot package.  You can do
without the <code>-r</code> if you build as user root. You can add
<code>-uc</code> to avoid signing the package with your pgp key.</p>

<h3>
Pick One</h3>
<p>
Which package needs to be worked on? Well, the best thing I can do for
now is tell you which package you should not work on.</p>

<h4>
Packages That Won't Be Ported</h4>
<p>
Some of these packages, or part of them, might be portable later, but
currently they are considered to be unportable at least.</p>
<p>
<ul>
<li>
<code>base/update</code>, because the Hurd does not need an update
daemon (the filesystems sync themselves). To change to sync interval,
you can use <code>fsysopts</code> to adjust the <code>--sync</code>
option. You can set different sync intervals for each file system!</p>
To do this manully, use the <a
href="hurd-doc-utils#syncfs"><code>syncfs</code> utility</a>.</li>
<li>
<code>base/makedev</code>, because the Hurd comes with its own version
of this script. The Debian source package only contains a Linux
specific version.</li>
<li>
<code>base/ld.so</code>, because the Hurd does use the linker that
ships with the GNU C library.</li>
<li>
<code>base/modconf</code> and <code>base/modutils</code>, because
modules are a concept specific to Linux.</li>
<li>
<code>base/netbase</code>, because the remaining stuff that is there
is highly specific to the Linux kernel. The Hurd uses
<code>inetutils</code> instead.</li>
<li>
<code>base/pcmcia-cs</code>, because the Hurd does not have any PCMCIA
support (and even if it had, this package is probably Linux specific).</li>
<li>
<code>base/procps</code>, because this code is specific to the Linux proc
filesystem.</li>
<li>
<code>base/ppp</code> and <code>base/pppconfig</code>, because the
Hurd does not have any PPP support (and even if it had, this package
is probably Linux specific).</li>
<li>
<code>base/setserial</code>, because it is specific to the Linux
kernel. However, with the port of Linux char drivers to GNU Mach, we
might be able to use it.</li></p>

<h4>
Packages Which Compile Cleanly Without Any Changes</h4>
<p>
<ul>Section
<li><code>admin</code>:
<code>anacron</code>,
<code>at</code>,
<code>base-config</code>,
<code>cruft</code>,
<code>logrotate</code>,
<code>mon</code>,
<code>pwgen</code>,
<code>sudo</code>.</li>

<li><code>base</code>:
<code>ae</code>,
<code>base-files</code>,
<code>base-passwd</code>,
<code>bash</code>,
<code>debianutils</code>,
<code>diff</code>,
<code>e2fsprogs</code>,
<code>elvis-tiny</code>,
<code>fileutils</code>,
<code>findutils</code>,
<code>glibc</code>,
<code>gnumach</code>,
<code>grep</code>,
<code>grub</code>,
<code>gzip</code>,
<code>hostname</code>,
<code>hurd</code>,
<code>libwrap0</code>,
<code>mawk</code>,
<code>ncurses</code>,
<code>sed</code>,
<code>shadow</code>,
<code>shellutils</code>,
<code>tar</code>,
<code>textutils</code>.</li>

<li><code>comm</code>:
<code>casio</code>,
<code>minicom</code>,
<code>uqwk</code>.</li>

<li><code>devel</code>:
<code>bison</code>,
<code>blas</code>,
<code>byacc</code>,
<code>cmix</code>,
<code>cook</code>,
<code>crashme</code>,
<code>cutils</code>,
<code>cvs</code>,
<code>cweb</code>,
<code>diffstat</code>,
<code>flex</code>,
<code>genparse</code>,
<code>gettext</code>,
<code>global</code>,
<code>hello</code>,
<code>hello-debhelper</code>,
<code>indent</code>,
<code>make</code>,
<code>mig</code>,
<code>nasm</code>,
<code>opt</code>,
<code>perl-byacc</code>,
<code>pointerize</code>,
<code>rcs</code>.</li>

<li><code>doc</code>:
<code>man-db</code>,
<code>man2html</code>,
<code>pinfo</code>,
<code>texinfo</code>.</li>

<li><code>editors</code>:
<code>ed</code>,
<code>jed</code>,
<code>joe</code> (but doesn't work quite right),
<code>le</code>,
<code>nvi</code>,
<code>vim</code>.</li>

<li><code>games</code>:
<code>games/an</code>,
<code>empire-leaf</code>,
<code>fortune-mod</code>,
<code>freesweep</code>,
<code>gnugo</code>,
<code>gnushogi</code>,
<code>typespeed</code>,
<code>xbat</code>,
<code>xfishtank</code>,
<code>xjewel</code>,
<code>xjokes</code>,
<code>xjump</code>,
<code>xkobo</code>,
<code>xmountains</code>,
<code>xoj</code>,
<code>xpat2</code>,
<code>xphoon</code>,
<code>xroach</code>,
<code>xzip</code>.</li>

<li><code>graphics</code>:
<code>ean13</code>,
<code>giftrans</code>,
<code>jpeginfo</code>,
<code>xaos</code>.</li>

<li><code>hamradio</code>:
<code>gc</code>.</li>

<li><code>interpreters</code>:
<code>gawk</code>,
<code>m4</code>,
<code>perl</code>,
<code>pforth</code>,
<code>python</code>.</li>

<li><code>libs</code>:
<code>aalib</code>,
<code>db</code>,
<code>dialog</code>,
<code>gdbm</code> (but see bug#54401),
<code>libaudiofile</code>,
<code>libglib</code>,
<code>libident</code>,
<code>libiodbc2</code>,
<code>libjpeg62</code>,
<code>libpng</code>,
<code>libxml</code>,
<code>pcre</code>,
<code>popt</code>,
<code>slang1</code>,
<code>svgalib-dummy</code>,
<code>tcl8.0</code>,
<code>tk8.0</code>,
<code>zlib</code>.</li>

<li><code>mail</code>:
<code>asmail</code>,
<code>exim</code>,
<code>fetchmail</code>,
<code>mailcheck</code>,
<code>mimedecode</code>,
<code>mpack</code>,
<code>mutt</code>,
<code>procmail</code>.</li>

<li><code>math</code>:
<code>aribas</code>,
<code>bc</code>,
<code>g2</code>,
<code>libplot-perl</code>,
<code>oleo</code>,
<code>plotutils</code>,
<code>sgb</code>,
<code>spline</code>,
<code>wzip</code>.</li>

<li><code>misc</code>:
<code>birthday</code>,
<code>dbview</code>,
<code>fastdnaml</code>,
<code>megahal</code>,
<code>nslint</code>,
<code>otp</code>.</li>

<li><code>net</code>:
<code>cftp</code>,
<code>hx</code>,
<code>inetutils</code>,
<code>ircii</code>,
<code>lftp</code> (but doesn't work quite right),
<code>lurkftp</code>,
<code>ncftp</code>,
<code>netcat</code> (reported by Andres),
<code>tcputils</code>,
<code>whois</code>.</li>

<li><code>otherosfs</code>:
<code>macutils</code>,
<code>mtools</code>.</li>

<li><code>shells</code>:
<code>flin</code>.</li>

<li><code>sound</code>:
<code>mp3info</code>,
<code>sox</code>.</li>

<li><code>tex</code>:
<code>dvidvi</code>,
<code>tetex-bin</code>,
<code>untex</code>.</li>

<li><code>text</code>:
<code>c2ps</code>,
<code>diction</code>,
<code>enscript</code>,
<code>figlet</code>,
<code>groff</code>,
<code>gs</code>,
<code>jade</code>,
<code>less</code>,
<code>most</code>,
<code>par</code>
<code>psutils</code>,
<code>ptx</code>,
<code>recode</code>,
<code>rxp</code>,
<code>sgml-tools</code>,
<code>since</code>,
<code>slice</code>,
<code>tcs</code>,
<code>word2x</code>.</li>

<li><code>utils</code>:
<code>ascii</code>,
<code>binstats</code>,
<code>buffer</code>,
<code>bzip2</code>,
<code>cpio</code>,
<code>cracklib</code>,
<code>file</code>,
<code>hex</code>,
<code>hextype</code>,
<code>iselect</code>,
<code>nwrite</code>,
<code>patch</code>,
<code>pgrep</code>,
<code>sharutils</code>,
<code>symlinks</code>.</li>

<li><code>web</code>:
<code>analog</code>,
<code>lynx</code>,
<code>mailto</code>,
<code>wget</code>.

<li><code>x11</code>:
<code>bclock</code>,
<code>unclutter</code>,
<code>xfishtank</code>,
<code>xpm4g</code>,
<code>xwit</code>.</li>
</ul>

<h4>
Packages Which Compile Cleanly With Only A Patch In The BTS</h4>
<p>
<ul>
<li>
<code>libs/libpaperg</code> see <a
href="http://bugs.debian.org/39036">Bug#39036</a>,</li>
<li>
<code>base/tcp-wrappers</code> see <a
href="http://bugs.debian.org/44408">Bug#44408</a>,</li>
<li>
<code>web/boa</code> see <a
href="http://bugs.debian.org/45508">Bug#45508</a>.</li>
<li>
<code>base/dpkg-mountable</code> see <a
href="http://bugs.debian.org/44381">Bug#44381</a>.</li>
<li>
<code>base/slang1</code> see <a
href="http://bugs.debian.org/48814">Bug#48814</a>.</li>
</ul></p>

<h4>
Packages for which a source NMU was necessary</h4>
<p>
Currently empty.</p>

<h4>
Packages which need some hacking</h4>
<p>
The following packages are known to require some hacking, but there are
already people caring about them. If you want to help out with a specific
package in this list, let us know, but most likely you want to pick other
packages beside these.</p>

<ul>
<li><b>Marcus Brinkmann</b>
<p>Some packages in section <code>base</code>,
<code>devel/egcs</code> (mostly resolved, but gcc 2.95 needs to be done from scratch),
<code>devel/gdb</code> (patch by Mark Kettenis),
<code>web/apache</code> (easy, see <a href="http://bugs.debian.org/38328">Bug#38328</a>
and implement use of <code>dpkg-architecture</code> in <code>debian/rules</code>),
<code>admin/apt</code> (<code>archtable</code> mess, some building issues),
<code>bind</code> (implement <code>dpkg-architecture</code> in <code>debian/rules</code>),
<code>devel/binutils</code> (<code>gprof</code> broken),
<code>bsdmainutils</code> and <code>bsdutils</code> (are obsoleted by
<code>util-linux</code> (Jeff Bailey is working on it)),
<code>admin/cron</code> (<code>MAXPATHLEN</code>, Robert Stepanek worked on it, but his patch needs a clean up),
<code>editors/emacs20</code> (<code>dpkg-architecture</code> support),
<code>gdbm</code>,
<code>libs/liblockfile</code> (harmful),
<code>mail/mailx</code> (<code>NOFILE</code>, <code>MAXPATHLEN</code>,
<code>MAXHOSTNAMLEN</code>, header files),

<code>tex/tetex</code> (includes ncurses man pages, klibtool issue).
</p>
<p>
As you can see, I am quite loaded. I wouldn't mind getting rid of one of
the above packages, at least for some of them (for example, if you want to
take a look at <code>mailx</code>, let me know).</p></li>
<li><b>Brent Fulgham</b>: <code>editors/vim</code>,
<code>interpreters/python</code>.</li>
<li><b>Kalle Olavi Niemitalo</b>: <code>libs/libpaperg</code>,
<code>graphics/netpbm</code>, <code>pointerize</code>,
<code>libtiff</code>, <code>libs/svgalib</code>?.</li>
</ul>

<p>If I forgot you or some information is not up to date, please
<a href="hurd-contact">let me know!</a>.</p>

<h3>
General Porting Issues</h3>
<p>
Here is a list of common incompatibilities you may encounter when compiling
insufficient portable software on the Hurd.</p>
<p>
<ul>
<li>
<code>Bad File Descriptor</code>
<p>
If you get <code>Bad File Descriptor</code> error when trying to read
from a file (or accessing it at all), check the <code>open()</code>
invocation. The second argument is the access method. If it is a hard
coded number instead of a symbol defined in the standard header files,
the code is screwed and should be fixed to either use
<code>O_RDONLY</code>, <code>O_WRONLY</code> or
<code>O_RDWR</code>. This bug was observed in the
<code>fortunes</code> and <code>mtools</code> packages for
example.</p></li>
<li>
<code>PATH_MAX</code>
<p>
Every unconditionalized use of <code>PATH_MAX</code> is a POSIX
incompatibility.  If there is no upper limit on the length of a path,
this symbol is not defined in any header file. Instead, you need to
either use a different implementation that does not rely on the length
of a string or use <code>sysconf()</code> to query the length at
runtime. If <code>sysconf()</code> returns <code>-1</code>, you have
to use <code>realloc()</code> to allocate the needed memory
dynamically.</p></li>
<li>
<code>MAXHOSTNAMELEN</code>
<p>
see <code>PATH_MAX</code></p></li>
<li>
<code>MAXPATHLEN</code>
<p>
see <code>PATH_MAX</code></p></li>
<li>
<code>NOFILE</code>
<p>
see <code>PATH_MAX></code></p></li>
<li>
Hurd specific <code>#define</code>
<p>
If you need to include specific code for the Hurd using
<code>#if...#endif</code>, then you can use the <code>__GNU__</code>
symbol to do so. But think (at least) thrice! before doing so. In
<em>most</em> situations, this is completely unnecessary and will
create more problems than it may solve. Better ask on the mailing list
how to do it right if you can't think of a better solution.</p></li>
<li>
<code>sys_errlist[]</code> vs. <code>strerror()</code>
<p>
If a program has only support for <code>sys_errlist[]</code> you will
have to do some work to make it compile on the Hurd, which has dropped
support for it and does only provide <code>strerror()</code>. Steinar
Hamre writes about <code>strerror():</p></li>
<blockquote>
<p>
<code>strerror()</code> should be used because:
<ul>
<li>
It is the modern, POSIX way.</li>
<li>
It is localized.</li>
<li>
It handles invalid signals/numbers out of range. (better errorhandling
and not a buffer-overflow-candidate/security risk)</li></ul></p>
<p>
<code>strerror()</code> should always be used if it is available.
Unfortunaly there are still some <em>old</em> non-POSIX systems that
do not have <code>strerror()</code>, only
<code>sys_errlist[]</code>.</p>
<p>
Today, only supporting <code>strerror()</code> is far better than only supporting
<code>sys_errlist[]</code>. The best (from a portability viewpoint), however is
supporting both. For <code>configure.in</code>, you will need:</p>
<p>
<code>AC_CHECK_FUNCS(strerror)</code></p>
<p>
To <code>config.h.in</code>, you need to add:</p>
<p>
<code>#undef HAVE_STRERROR</code></p>
<p>
Then something like:
<pre>
        #ifndef HAVE_STRERROR
        static char *
        private_strerror (errnum)
             int errnum;
        {
          extern char *sys_errlist[];
          extern int sys_nerr;

          if (errnum > 0 && errnum <= sys_nerr)
            return sys_errlist[errnum];
          return "Unknown system error";
        }
        #define strerror private_strerror
        #endif /* HAVE_STRERROR */
</pre></p>
<p>
You can for example look in the latest fileutils (the above is a
simplified version of what I found there.) Patches should of course be
sent to upstream maintainers, this is very useful even for systems
with a working <code>sys_errlist[]</code>.</p></blockquote></li>
<li>
Filenames ending in a slash `/'
<p>
Those are evil if they don't exist and you want to name a directory
this way. For example, <code>mkdir foobar/</code> will <em>not</em>
work under the Hurd. This is POSIX compatible. POSIX says that the
path of a directory may have slashes appended to it. But the directory
does not exist yet, so the path does not refer to a directory, and
hence trailing slashes are not guaranteed to work. Just drop the
slashes, and you're fine.</p></li></ul>

