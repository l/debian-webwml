#use wml::debian::cdimage title="Becoming a mirror for Debian CD images" BARETITLE=true
#use wml::debian::toc

<p>To become a Debian CD Image mirror site, you need a Linux or
Unix-like machine with a permanent, reliable connection to the
Internet. Debian CD mirrors hold <tt>.iso</tt> images for CDs and DVDs
of various sizes, files for <a
href="http://atterer.net/jigdo/">jigdo</a> (<tt>.jigdo</tt> and
<tt>.template</tt>), <a
href="http://bitconjurer.org/BitTorrent/">BitTorrent</a> files
(<tt>.torrent</tt>) and MD5 checksums of the images
(<tt>MD5SUMS*</tt>).</p>

<toc-display/>

<hr>
#______________________________________________________________________

<toc-add-entry name="master">Master site</toc-add-entry>

<p>There are two locations for mirroring, one for stable images and
one for beta/unstable/testing images. The URLs of the master site are
shown below - however, <strong>please</strong> consider mirroring from
another nearby mirror (mirror lists: <a
href="../http-ftp/">HTTP/FTP</a>, <a href="rsync-mirrors">rsync</a>)
if possible. Access to the master site may be restricted around
release time.</p>

<p>Also be aware that a <strong>huge</strong> amount of data is stored
in these directories - read the <a href="#exclude">section below</a>
for details on how to cut down the size by excluding certain
files.</p>

<ul>

  <li>Stable images (updated for each stable release):<br>

    <a href="http://cdimage.debian.org/debian-cd/"
    ><tt>http://cdimage.debian.org/debian-cd/</tt></a><br>

    <a href="ftp://cdimage.debian.org/debian-cd/"
    ><tt>ftp://cdimage.debian.org/debian-cd/</tt></a><br>

    <tt>rsync://cdimage.debian.org/debian-cd/</tt>

  </li>

  <li>Beta/unstable/testing images (most sections updated weekly):<br>

    <a href="http://cdimage.debian.org/pub/cdimage-testing/"
    ><tt>http://cdimage.debian.org/pub/cdimage-testing/</tt></a><br>

    <a href="ftp://cdimage.debian.org/pub/cdimage-testing/"
    ><tt>ftp://cdimage.debian.org/pub/cdimage-testing/</tt></a><br>

    <tt>rsync://cdimage.debian.org/cdimage-testing/</tt>

  </li>

</ul>
#______________________________________________________________________

<toc-add-entry name="httpftp">Mirroring using HTTP/FTP is
discouraged</toc-add-entry>

<p>You should not use FTP or HTTP to update your mirror. These
transfer methods have a high failure probability because of the
enormous size of the files.</p>

<p>Furthermore, HTTP and FTP do not include integrity checks of the
downloaded data, it is more likely that aborted downloads or data
corruption will go unnoticed.</p>
#______________________________________________________________________

<toc-add-entry name="rsync">Mirroring using rsync is
acceptable</toc-add-entry>

<p>The <a href="http://rsync.samba.org/"><kbd>rsync</kbd></a> program
is a good solution for mirroring. It is less efficient than the other,
Debian-specific mirroring solution below, but may be easier to set
up. Furthermore, it ensures that all files are transferred correctly
and that the metadata (e.g. timestamps) is kept in sync just like the
file data.</p>

<p>See the section <a href="#exclude">Excluding files from
mirroring</a> for examples of <kbd>--include</kbd> and
<kbd>--exclude</kbd> switches. The <a href="rsync-mirrors">list of
rsync mirrors</a> is available on a separate page.</p>

<p>Use at least the options <strong><kbd>--times --links --hard-links --partial
--block-size=8192</kbd></strong>. This will preserve modification time,
symlinks and hardlinks, and use a block size of 8192 bytes (most efficient
for CD images). When modification time and size are the same,
<kbd>rsync</kbd> will just leave the file alone, so <kbd>--times</kbd> is
really obligatory.</p>
#______________________________________________________________________

<toc-add-entry name="jigdolite">Mirroring using jigdo-lite is
discouraged</toc-add-entry>

<p>Recent versions of the <a
href="http://atterer.net/jigdo/"><kbd>jigdo-lite</kbd></a> program
support batch downloading of multiple images. However, we do not
recommend to use <kbd>jigdo-lite</kbd> to create Debian CD mirrors -
use <kbd>jigdo-mirror</kbd> instead.</p>
#______________________________________________________________________

<toc-add-entry name="jigdomirror">Mirroring using jigdo-mirror is
recommended</toc-add-entry>

<p>A lot of people maintain "regular" Debian mirrors (<kbd>debian/</kbd>),
or just have such a mirror nearby. This means that they already have the
.debs that are included in the CD images. The obvious question is -- why
can't we use those same files in the CD images?</p>

<p><kbd>jigdo-mirror</kbd> is a program that enables one to generate a
Debian CD images using the files from a "normal" mirror, plus a few extra
jigdo template files.</p>

<p>Note that <kbd>jigdo-mirror</kbd> is included in jigdo 0.6.8, but this
version isn't shipped with Debian 3.0 ("woody"). This just means you'll have
to get it separately, there is no actual problem with using the new version
on "woody".</p>

<p>First off, you need the jigdo template files. These can be acquired on
most official sites, but the two primary locations are:</p>

<ul compact>
  <li><kbd>rsync us.cdimage.debian.org::jigdo-area/</kbd> (USA mirror)
  <li><kbd>rsync non-us.cdimage.debian.org::debian-jigdo/</kbd> (European mirror)
</ul>

<p>Fetch the files from the
&lt;<var>version</var>&gt;/jigdo/&lt;<var>architecture</var>&gt;
subdirectory, for each architecture you wish to build images for.</p>

<p>Create <kbd>~/.jigdo-mirror</kbd> file to configure the program.
This is an example:</p>

<pre>
jigdoDir="/where/you/keep/mirrors/debian-cd/current/jigdo"
imageDir="/where/you/keep/mirrors/debian-cd/current/images"
tmpDir="/where/you/keep/mirrors/debian-cd/current/images"
debianMirror="file:/where/you/keep/mirrors/debian"
nonusMirror="file:/where/you/keep/mirrors/debian-non-US"
include='i386/|sparc/|powerpc/|source/'; exclude='-1\.'
</pre>

<p>The <i>include</i> and <i>exclude</i> variables contain the list of
architectures you wish to create images for (regular expressions,
rather). For more information, see the <kbd>jigdo-mirror</kbd> manual
page or the source itself (it's a shell script with a lot of comments).</p>

<p>After you've configured it, simply run <kbd>jigdo-mirror</kbd> and it
will do everything on its own. It will make a lot of output and probably
take a while, so we suggest that you make steps to handle that (run it in
screen, redirect the output into a file etc).</p>
#______________________________________________________________________

<toc-add-entry name="pushmirror">How to become a push
mirror</toc-add-entry>

<p>Whenever new images are available, the master site can send a
message to its mirrors and make them start updating immediately. This
way, the new data is "pushed" out rather than "pulled" by the mirrors
during their next daily update, which leads to faster propagation of
new image releases.</p>

<p>If you want your mirror to be part of this update system, have a
look at <a href="http://www.acc.umu.se/~maswan/debian-push/cdimage/"
>this page</a>.</p>
#______________________________________________________________________

<toc-add-entry name="exclude">Excluding files from
mirroring</toc-add-entry>

<p>To reduce the amount of storage required by your Debian CD mirror,
you can exclude certain files from being mirrored. The following
instructions include command line switches for <kbd>rsync</kbd>, but
might help you even if you use a different tool for mirroring. With
<kbd>rsync</kbd>, <kbd>--include</kbd> and <kbd>--exclude</kbd>
switches are considered in order of appearance, and the first switch
whose file pattern matches determines whether the file is excluded or
included.</p>

<ul>

  <li><strong>Exclude source code:</strong>
  <kbd>--exclude=source/</kbd><br>

  This will prevent images containing source code from being
  mirrored. Note that some people consider it inappropriate to offer
  binaries of GPL-licensed programs on a server without also offering
  the programs' source code <em>on the same server</em>.</li>

  <li><strong>Exclude full images:</strong>
  <kbd>--include='*businesscard*.iso' --include='*netinst*.iso'
  --exclude='*.iso'</kbd><br>

  Exclude all full CD/DVD image sets for all architectures,
  <em>but</em> mirror the business-card-sized and net-install
  <tt>.iso</tt> images. We recommend always to mirror these small
  images: Relative to their size, they are extremely useful!</li>

  <li><strong>Exclude full images for non-i386 architectures:</strong>
  <kbd>--include='*businesscard*.iso' --include='*netinst*.iso'
  --include='i386/**.iso' --exclude='*.iso'</kbd><br>

  As above, but <em>do</em> include all CD/DVD images for the i386
  architecture.</li>

  <li><strong>Exclude full images, except for i386 CDs 1 to
  3:</strong>
  <kbd>--include='*netinst*.iso' --include='i386/**-[1-3].iso'
  --exclude='*.iso'</kbd><br>

  The full set of i386 images may still take too much space for you if
  it includes DVD and dual-layer DVD images. This excludes all
  <tt>.iso</tt> images except for the net-install images and the first
  three i386 CDs.</li>

  <li><strong>Exclude all architectures except i386:</strong>
  <kbd>--exclude=alpha/ --exclude=arm/ --exclude=hppa/ --exclude=hurd/
  --exclude=ia64/ --exclude=m68k/ --exclude=mips/ --exclude=mipsel/
  --exclude=powerpc/ --exclude=s390/ --exclude=sh/
  --exclude=sparc/</kbd><br>

  Only include the full set of files for i386, do not include any
  <tt>.jigdo</tt>, <tt>.iso</tt> etc files whatsoever for the other
  architectures.</li>

</ul>
#______________________________________________________________________

<toc-add-entry name="names">Naming conventions for <tt>.iso</tt>
images</toc-add-entry>

<p>The diffent variants of <tt>.iso</tt> images are distinguishable by
their names, allowing you to restrict the types of images you
mirror:</p>

<ul>

  <li><strong><tt>*-businesscard.iso</tt></strong>: One image for each
  of the <a href="/ports/#released">supported architectures</a>,
  50&nbsp;MB</li>

  <li><strong><tt>*-netinst.iso</tt></strong>: One image for each
  architecture, 110&nbsp;MB</li>

  <li><strong><tt>*-dvd.iso</tt></strong> (single-layer DVDs):
  Multiple images for each architecture, each up to 4482&nbsp;MB
  large. The accumulated size for all images and architectures equals
  the <a href="/mirror/size">size of a full Debian mirror</a>
  (100&nbsp;GB as of this writing).</li>

  <li><strong><tt>*-dldvd.iso</tt></strong> (dual-layer DVDs): As
  above, except that individual images are up to 8106&nbsp;MB
  large.</li>

  <li><strong><tt>*.iso</tt></strong>: All remaining <tt>.iso</tt>
  files which do not match one of the above patterns are CD
  images. There are multiple images for each architecture, each up to
  650&nbsp;MB large, totalling again the size of a full Debian
  mirror.</li>

</ul>
#______________________________________________________________________

<toc-add-entry name="register">Registering the mirror</toc-add-entry>

<p>To make your CD image mirror useful to a wider audience,
you can register it in our mirror list such as
<a href="../http-ftp/">this one</a> or <a href="rsync-mirrors">this one</a>.
However, since full images are large files, this might cause you
many gigabytes of network traffic per day.</p>

<p>You can register your mirror either by filling out
<a href="$(HOME)/mirror/submit">the mirror submission form</a>
(note that the CDImage-* fields are the important ones), or by
sending an e-mail to
<a href="&#109;&#97;&#105;&#108;&#116;&#111;&#58;debian-cd&#64;lists.debian.org">\
debian-cd&#64;lists.debian.org</a>.</p>

<p>We appreciate all new CD image mirrors. Thanks in advance!</p>
