#use wml::debian::cdimage title="Downloading Debian CD images with jigdo" BARETITLE=true
#use wml::debian::toc
#use wml::debian::installer
#include "$(ENGLISHDIR)/releases/info"

<p>Jigsaw Download, or short <a href="http://atterer.net/jigdo/">jigdo</a>,
is intended to be the main way of distributing Debian CD images in the
future. Currently, the system works, but is not yet very comfortable to use
because the download manager application is not finished.</p>

<toc-display/>

<hr>

<toc-add-entry name="why">Why jigdo is better than a direct download</toc-add-entry>

<p>Because it
is faster! For various reasons, there are far fewer mirrors for CD images
than there are for the "normal" Debian archive. Consequently, if you
download from a CD image mirror, that mirror will not only be further away
from you, it will also be overloaded, especially just after a release.</p>

<p>Furthermore, some types of images are not available as full
<tt>.iso</tt> downloads because there is not enough space on our
servers to host them.</p>

<p>Of course, a "normal" Debian mirror does not carry any CD images, so how
can jigdo download them there? jigdo achieves this by downloading
individually all the files that are on the CD. In the next step, all these
files are assembled in one big file which
is an exact copy of the CD image. However, all this happens
behind the scenes - all that <em>you</em> need to do is tell the download
tool the location of a "<tt>.jigdo</tt>" file to process.</p>

<p>More information is available from the
<a href="http://atterer.net/jigdo/">jigdo homepage</a>. 
Volunteers willing to help with jigdo development are always welcome!</p>

<toc-add-entry name="how">How to download an image with jigdo</toc-add-entry>

<ul>

  <li>Download a package containing <tt>jigdo-lite</tt>, which is
  available for GNU/Linux, Windows and Solaris from the
  <a href="http://atterer.net/jigdo/">jigdo homepage</a>. For FreeBSD,
  install from /usr/ports/ftp/jigdo or grab the package with <tt>pkg_add
  -r jigdo</tt>.
  </li>

  <li>Run the <tt>jigdo-lite</tt> script. It will ask for the URL
  of a "<tt>.jigdo</tt>" file to process. (You can also supply
  that URL on the command line if you like.)</li>

  <li>From one of the locations listed <a href="#which">below</a>, pick the
  "<tt>.jigdo</tt>" files you want to download, and enter their URLs
  at the <tt>jigdo-lite</tt> prompt. Each "<tt>.jigdo</tt>" file
  corresponds to one "<tt>.iso</tt>" CD/DVD image.</li>

  <li>If you are a first-time user, just press Return at the "Files to
  scan" prompt.</li>

  <li>At the prompt "Debian mirror", enter
  <kbd>http://ftp.<strong><var>XY</var></strong>.debian.org/debian/</kbd>, where
  <strong><var>XY</var></strong> is the two-letter code for your country
  (for example, <tt>us</tt>, <tt>de</tt>, <tt>uk</tt>. See the current
  list of <a href="$(HOME)/mirror/list">available
  ftp.<var>XY</var>.debian.org locations</a>.)

<if-stable-release release="woody">
  <li>At the prompt "Debian non-US mirror" (if it is shown at all), enter
  <kbd>http://ftp.<strong><var>XX</var></strong>.debian.org/debian-non-US/</kbd>,
  again substituting the right code for <strong><var>XX</var></strong>.
</if-stable-release>

  <li>Follow the instructions printed by the script. If all goes well, the
  script finishes by calculating a checksum of the generated image and
  telling you that the checksum matches that of the original image.</li>

</ul>

<p>For a detailed, step-by-step description of this process, have a
look at the <a href="http://www.tldp.org/HOWTO/Debian-Jigdo/">Debian jigdo
mini-HOWTO</a>. The HOWTO also explains jigdo's advanced features,
such as upgrading an older version of a CD image to the current
version (by downloading only what has changed, not the entire new
image).</p>

<p>Once you have downloaded the images and written them to CD, be sure
to have a look at the <a
href="$(HOME)/releases/stable/installmanual">detailed information
about the installation process</a>.</p>

<toc-add-entry name="which">Official images</toc-add-entry>

<ul>

  <li>Official jigdo files for the "stable" release on CD:<br>
  <images-list url="http://cdimage.debian.org/debian-cd/current/@ARCH@/jigdo-cd/" />
  </li>

  <li>Official jigdo files for the "stable" release on DVD:<br>
  <images-list url="http://cdimage.debian.org/debian-cd/current/@ARCH@/jigdo-dvd/" />
  </li>  

</ul>

<ul>
  <li>Jigdo files for the unofficial <a href="$(HOME)/ports/amd64/">AMD64</a>
  stable release:
  [<a href="http://cdimage.debian.org/cdimage/unofficial/sarge-amd64/jigdo-cd/">CD</a>]
  [<a href="http://cdimage.debian.org/cdimage/unofficial/sarge-amd64/jigdo-dvd/">DVD</a>]
  </li>
</ul>

<ul>
  <li>Official jigdo files for the
  <a href="http://cdimage.debian.org/cdimage/weekly-builds/">"testing"
  distribution</a> on CD and DVD
  (<em>all architectures, regenerated weekly</em>)
  </li>
</ul>

<toc-add-entry name="unofficial">Unofficial images</toc-add-entry>

<p>These images are not built and offered by Debian, but by <a
href="http://www.fsn.hu/">fsn://HU</a>:</p>

<ul>

  <li>fsn://HU jigdo files for the <a
  href="ftp://ftp.fsn.hu/pub/CDROM-Images/debian-unofficial/etch/jigdo/">\
  "testing" distribution</a> on CD (<em>amd64 and i386, regenerated
  weekly</em>), <a
  href="ftp://ftp.fsn.hu/pub/CDROM-Images/debian-unofficial/MIRRORS">\
  mirrors</a></li>

  <li>fsn://HU jigdo files for the <a
  href="ftp://ftp.fsn.hu/pub/CDROM-Images/debian-unofficial/etch-dvd/jigdo/">\
  "testing" distribution</a> on DVD (<em>amd64 and i386, regenerated
  weekly</em>), <a
  href="ftp://ftp.fsn.hu/pub/CDROM-Images/debian-unofficial/MIRRORS">\
  mirrors</a></li>

  <li>fsn://HU jigdo files for the <a
  href="ftp://ftp.fsn.hu/pub/CDROM-Images/debian-unofficial/sid/jigdo/">\
  "unstable" distribution</a> on CD (<em>amd64 and i386, regenerated
  weekly</em>), <a
  href="ftp://ftp.fsn.hu/pub/CDROM-Images/debian-unofficial/MIRRORS">\
  mirrors</a></li>

  <li>fsn://HU jigdo files for the <a
  href="ftp://ftp.fsn.hu/pub/CDROM-Images/debian-unofficial/sid-dvd/jigdo/">\
  "unstable" distribution</a> on DVD (<em>amd64 and i386, regenerated
  weekly</em>), <a
  href="ftp://ftp.fsn.hu/pub/CDROM-Images/debian-unofficial/MIRRORS">\
  mirrors</a></li>

</ul>

<hr />

<toc-add-entry name="search">Search Contents of <tt>.jigdo</tt>
Files</toc-add-entry>

<p><strong>Which CD/DVD image contains a certain file?</strong> Below,
you can search the lists of files inside <tt>.jigdo</tt> files. You
can enter several words, each word must match a substring of the
filename. Add e.g. "_i386" to restrict the results to a certain
architecture. Add "_all" to see packages which are identical for all
architectures.</p>

<form method="get" action="http://atterer.net/jigdo/jigdo-search.php"><p>
<input type="text" name="q" size="20" value="">
# Translators: "Search" is translatable
<input type="submit" value="Search"></p></form>

<p><strong>What files are contained in a certain image?</strong> If
you need a list of <em>all</em> files that a certain Debian CD/DVD
contains, just find the image's <tt>.jigdo</tt> file on this list,
then click on "list contents" after the respective URL: <a
href="http://atterer.net/jigdo/jigdo-search.php?list">List of Debian
<tt>.jigdo</tt> files</a></p>

<hr>

<toc-add-entry name="faq">Frequently Asked/Answered Questions</toc-add-entry>

<p><strong>How do I make jigdo use my proxy?</strong></p>

<p>Load the file <tt>~/.jigdo-lite</tt> (or
<tt>jigdo-lite-settings.txt</tt> for the Windows version) into a text
editor and find the line that starts with "wgetOpts". The following
switches can be added to the line:</p>

<p><tt>-e ftp_proxy=http://<i>LOCAL-PROXY</i>:<i>PORT</i>/</tt>
<br><tt>-e http_proxy=http://<i>LOCAL-PROXY</i>:<i>PORT</i>/</tt>
<br><tt>--proxy-user=<i>USER</i></tt>
<br><tt>--proxy-passwd=<i>PASSWORD</i></tt></p>

<p>Of course, substitute the correct values for your proxy server. The
last two options are only necessary if your proxy uses password
authentication. The switches need to be added to the end of the
wgetOpts line <em>before</em> the final <tt>'</tt> character. All
options must be on one line.</p>

<p>Alternatively, under Linux you can also set up the
<tt>ftp_proxy</tt> and <tt>http_proxy</tt> environment variables, for
example in the file <tt>/etc/environment</tt> or
<tt>~/.bashrc</tt>.</p>

<p><strong>Aargh! The script fails with an error - have I downloaded all
those MBs in vain?!</strong></p>

<p>Of course this Should Not Happen(tm), but for various reasons you
may end up in a state where a large "<tt>.iso.tmp</tt>" file has
already been generated and <tt>jigdo-lite</tt> appears to have
problems, telling you repeatedly to try restarting the download. There
are several possible things to try in this case:</p>

<ul>

  <li>Simply restart the download by pressing Return. Maybe some of
  the files could not be downloaded because of timeouts or other
  transient errors - another attempt will be made to download any
  missing files.</li>

  <li>Try a different mirror. Some Debian mirrors are slightly out of
  sync - maybe a different mirror still holds files that were deleted
  from the one you specified, or it has already been updated with
  files that are not yet present on your mirror.</li>

  <li>Retrieve the missing parts of the image using <tt><a
  href="http://rsync.samba.org/">rsync</a></tt>. First, you need to
  find out the correct rsync URL of the image you are downloading:
  Choose a server that offers rsync access to the <a
  href="../mirroring/rsync-mirrors">stable</a> or <a
  href="../http-ftp/#testing">testing</a> images, then determine the
  correct path and filename. Directory listings can be obtained with
  commands like
  <tt>rsync&nbsp;rsync://cdimage.debian.org/debian-cd/</tt>

  <br>Next, remove the "<tt>.tmp</tt>" extension from
  <tt>jigdo-lite</tt>'s temporary file by renaming it, and pass both
  the remote URL and the local filename to rsync:
  <tt>rsync&nbsp;rsync://server.org/path/binary-i386-1.iso
  binary-i386-1.iso</tt>

  <br>You may want to use rsync's <tt>--verbose</tt> and
  <tt>--progress</tt> switches to get status messages, and
  <tt>--block-size=8192</tt> to increase its speed.</li>

  <li>If all else fails, your downloaded data is still not lost: Under
  Linux, you can loop-mount the <tt>.tmp</tt> file to access the
  packages that were already downloaded, and reuse them for generating
  an image from a newer jigdo file (such as the latest weekly testing
  snapshot if your failed download was also a testing snapshot). To do
  this, first issue the following commands as root in the directory
  with the broken download: <tt>mkdir&nbsp;mnt;
  mount&nbsp;-t&nbsp;iso9660&nbsp;-o&nbsp;loop&nbsp;*.tmp&nbsp;mnt</tt>. 
  Next, start a new download in a different directory, and enter the
  path of the <tt>mnt</tt> directory at the "Files to scan"
  prompt.</li>

</ul>
