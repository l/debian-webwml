#use wml::debian::template title="Note for Application Managers"

<H2>Note for Application Managers</H2>

<UL>
  <LI><A HREF="./nm-amhowto">"Mini-HOWTO for Debian New Maintainer Application Managers"</A></LI>
  <LI><A HREF="#identification">Identification Check</A></LI>
  <LI><A HREF="#skills">Skills and Tasks</A></LI>
  <LI><A HREF="#finalreport">Final report from an Application Manager to the NM-Committee</A></LI>
  <LI><A HREF="#onhold">How to place an applicant on hold</A></LI>
  <LI><A HREF="#gpgversion">GnuPG version dependency</A></LI>
</UL>

<H2><A NAME="identification">Identification Check</A></H2>

<P>If the applicant supplies a public key which has been signed by 
   a current <A HREF="./newmaint#Member">member</A> of Debian,
   then the identification process is complete.  Only if the key is
   not signed by any current Debian member, the additional photo-ID
   of the applicant will be required.
   Please refer the <A HREF="./nm-step2">Identification</A> page in the 
   checklist.
</P>

<P>There is a compatibility problem in GnuPG. Please refer
<A HREF="#gpgversion">GnuPG version compatibilities</A>.</P>

<P>If your applicant needs the old one for verification purposes, 
he/she can send it with the new key.</P>
<P>
Similarly, if applicant has only PGP key which is signed by current 
Debian member, he/she can use it for verification.
</P>

<P>
Additional verification options can be exercised if there is some doubt
about any particular information or the person who provided it.
In the US there are web sites that can do "reverse lookup" of a phone number 
and give you the subscriber, and the address. 
Using these services to cross check the validity of the information provided
by the applicant, can turn up inconsistencies, but the existence of these
inconsistencies does not automatically reject the applicant. Some degree of
negotiation room should be applied to these situations.
</P>

<P>
For instance, if the reverse lookup search turns up another name than
the applicant, you can ask the applicant who's phone number he has given you.
He may say: "It's my room mate's phone/It's my Dad's phone/It's the dorm phone"
which then gives you another point of contact. If you can verify
the information provided by the applicant, the the required contact point
is obtained.
</P>

<P>
As a last resort, when the applicant only misses one point, and it is 
from lack of knowledge, rather than a rejection of the identity,
(i.e. the contact person says they don't think they know this person)
we can use the applicant's ISP to help resolve the issue.
In most cases the applicant will have to give the ISP permission
to release address and phone information. 
Then simply contact the ISP and ask for verification of this info.
</P>

<H2><A NAME="skills">Skills and Tasks</A></H2>

If an applicant is joining Debian <I>as a packager</I>, he must have a
package ready to adopt, package whatever.  It doesn't have to be ready to
upload the instant he becomes a maintainer, but he must at least be working
on a specific package.  The DAM won't accept applicants who are going to
maybe package something at some unspecified date in the future.

<H2><A NAME="finalreport">Final report from an Application Manager to the NM-Committee:</A></H2>

<P>
There are two steps involved in the AM's final report on an applicant.
</P>
<P>
<OL>
  <LI>An e-mail to
      <A HREF="./newmaint#Committee">the NM-Committee</A> explaining how the steps
      in the check list have been satisfied. </LI>
  <LI>The same report sent to 
      <A HREF="./newmaint#FrontDesk">the Front Desk &lt;new-maintainer@debian.org&gt;</A>
      and 
      <A HREF="./newmaint#DAMan">the DA Manager &lt;da-manager@debian.org&gt;</A>
      with the addition of 
      <UL>
	 <LI>The applicants GPG public key <A HREF="#keynote">[1]</A>
              (RSA/IDEA key created by PGP is not accepted now) for 
              incorporation into the Debian keyring
	   <UL>
             <LI>If the GPG key above is not signed by any current Debian member,
                 but the applicant have the signed PGP key, then that PGP public
                 key can be used for Identification</LI>
             <LI>If the applicant has no key signed by any current Debian member,
                 then some Photo-ID of applicants which is digitized and signed
                  by the applicant can be used for Identification</LI>
           </UL>
         </LI>
         <LI>Logs of the discussions with the applicant to satisfy steps 2-4 in
             <A HREF="./nm-checklist">the checklist</A>.</LI>
	 <LI>The request from the applicant for their account name on Debian
             (used as &lt;account&gt;@debian.org) <A HREF="#account">[2]</A></LI>
	 <LI>The request from the applicant for the email address which will
	     be used to forward the emails at &lt;account&gt;@debian.org.</LI>
      </UL>
      <P><A NAME="keynote">[1] Applicants may NOT (repeat: NOT) have a sign only key.</A>
         You can check for this by looking at their key with
         <Q>
          "gpg --list-key &lt;applicant's name or key ID&gt;".
         </Q>
         If you see only a "&lt;number&gt;D/" (usually 1024) and
         no "&lt;number&gt;E/keyID", "&lt;number&gt;e/keyID", nor
         "&lt;number&gt;g/keyID", then it's a sign only DSA key.
         In this case, you AM do have to ask your applicant to generate 
         a proper key.  This is essential to be registered.</P>

      <P><A NAME="account">[2]</A> Account names must be &gt;= 2 characters, 
         3 is better.</P>

  </LI>
</OL>

</P>

<P>
This completes the AM's responsibilities in the application process. 
<A HREF="./newmaint#DAMan">The DA Manager</A>
must now decide whether the application is successfully completed.
</P>

<H2><A NAME="onhold">How to place an applicant on hold</A></H2>

<P>background:
Currently the only reasonable way to put the application "on hold" is 
to reject it with comments. When the applicant is more prepared to work 
on his application he need only send a request to his last AM.
</P>
<P>Note: 
all AM rejections are procedural. At any time that the applicant
feels they can better satisfy the requirements of the application, 
they are free to re-apply, and try again.
</P>

<P>
 <DL>
  <DT>First, when should an application be placed on hold by an AM?</DT>
   <DD>
     <UL>
       <LI>Whenever a checklist item is not satisfied.</LI>
       <LI>Whenever too much time has passed without activities from the applicant.</LI>
     </UL>
   </DD>
  <DT>Second, how does an AM do this?</DT>
   <DD>
     <UL>
       <LI>First leave the "AM Confirms Assignment" field set to "yes",
           do not change this field to "no" or you indicate another AM 
           needs to be assigned to this applicant, which is not the case.</LI>
       <LI>Next set the "AM approves" field to "no", and give details 
           for the rejection in the "Application Manager Comments" field.</LI>
     </UL>
   </DD>
 </DL>
</P>

<P>
All AMs: 
Feel free to place on hold any applicant that is not ready, willing, and 
able to aggressively pursue their application, as well as those who don't 
have the skills or intentions required by the checklist.
</P>

<H2><A NAME="gpgversion">Version compatibility problem in GnuPG with ElGamal keys handling</A></H2>
<P>&lt;Here is a note from our DAM about GnuPG incompatibility problem.&gt;
<BLOCKQUOTE>
<PRE>

Unfortunately due to a bug in GnuPG with ElGamal key handling there
is now a nasty compatability problem.

The confusing version is: ElG keys created using GnuPG &lt;= 1.0.1 may
erroneously generate BAD signatures, if checked with GnuPG &gt;= 1.0.2.
And vice versa, ElG keys created using GnuPG &gt;= 1.0.2 may erroneously
generate BAD signatures if check with GnuPG &lt;= 1.0.1.

The non-confusing version: all AMs should upgrade to GnuPG 1.0.2 (it's
in woody but it doesn't have any nasty dependencies and is perfectly
safe to install onto a potato system); if you have problems verifying
signatures from an applicant, try adding "--emulate-md-encode-bug" to
the command line.  If this fixes it, your applicant has a buggy ElG
key.  Get him to install GnuPG 1.0.2 and generate another one.  (If he
needs the old one for verification purposes, simply include both of
them in the report to da-manager@)
</PRE>

<PRE>

&gt; So if you want to stay on potato, do not install the deb.
&gt; Get the source and compile on your potato system!!

FWIW:

 (o) When I wrote the original mail 1.0.2 _was_ installable on potato.

 (o) 1.0.4 will be released in the next couple of days and will be
     going into 2.2r1 (and so will obviously be compiled with
     potato's libc etc.).
</PRE>
</BLOCKQUOTE>
</P>

<HR>
<A HREF="./nm-checklist">Back to "CHECKLIST"</A>
<A HREF="./nm-step5">Back to "Step 5"</A>



