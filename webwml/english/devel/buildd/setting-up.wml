#use wml::debian::template title="Setting up a buildd" BARETITLE="true"

<p>Here you will find a cheat sheet to setup a buildd for Debian. This
document was written by Andreas Barth while setting up buildds for experimental 
and backports.org so it might not be fully consistent to the Debian
setup used by the developer machines setup as autobuilders.

<P>For buildd you can either use the buildd located at db.debian.org
or extract it from 
<A href="http://m68k.debian.org/buildd/getting.html">wanna-build</A> sources. 
If you want to use the db.debian.org version 
add <tt>deb http://db.debian.org debian-admin/</tt> to sources.list and 
install buildd.</p>

<p>You need to create the following directories (under <tt>/org/buildd/</tt>):</p>
<pre>
install -d build mqueue -o buildd -g buildd
install -d chroots -m 755
install -d logs stats -o buildd -g buildd
install -d secret -o buildd -g adm -m 2770
install -d /var/debbuild/srcdep-lock -o buildd
install -d /var/lib/sbuild/srcdep-lock -o buildd
install -d chroots/sid/var/debbuild/srcdep-lock -o buildd
install -d chroots/sid/build/buildd -m 777
install -d chroots/woody-backports/var/debbuild/srcdep-lock -o buildd
install -d chroots/woody-backports/build/buildd -m 777
install -d bin -o buildd -g adm -m 775
cp /etc/passwd chroots/sid/etc/
cp /etc/passwd chroots/woody-backports/etc/
ln -s source-dependencies-unstable /etc/source-dependencies-sid-nonfree
sudo ln -s source-dependencies-stable /etc/source-dependencies-woody-backports.org
</pre>

<p>And then the chroots:</p>
<pre>
sudo debootstrap-farm --variant=buildd sid chroots/sid ftp://linux.mathematik.tu-darmstadt.de/debian
sudo ln -s /org/buildd/chroots/sid/ build/chroot-unstable
</pre>

<p>And then upgrade and install packages needed</p>
<pre>
sudo chroot chroots/sid apt-get update
sudo chroot chroots/sid apt-get install fakeroot build-essential sudo debfoster
sudo chroot chroots/sid debfoster
</pre>

<p>also for woody-backports:</p>
<pre>
sudo debootstrap-farm --variant=buildd woody chroots/woody-backports ftp://linux.mathematik.tu-darmstadt.de/debian
sudo ln -s /org/buildd/chroots/woody-backports/ build/chroot-woody-backports.org
</pre>
<p>Let's edit
<tt>chroots/woody-backports/etc/apt/sources.list</tt></p>
<pre>
deb ftp://linux.mathematik.tu-darmstadt.de/debian woody main non-free contrib
deb-src ftp://linux.mathematik.tu-darmstadt.de/debian woody main non-free contrib
deb-src ftp://linux.mathematik.tu-darmstadt.de/pub/linux/distributions/debian-backports/debian woody all
</pre>
<p>And let's upgrade and install things</p>
<pre>
sudo chroot chroots/woody-backports apt-get update
sudo chroot chroots/woody-backports apt-get install fakeroot build-essential sudo debfoster
sudo chroot chroots/woody-backports debfoster
</pre>

<p>Ok, let's create the .sbuildrc</p>
<pre>
# Mail address where logs are sent to (mandatory, no default!)
$mailto = 'wherever you want';

# Maintainer name to use in .changes files (mandatory, no default!)
$maintainer_name='what should be in changes';

#$fakeroot='/usr/bin/sudo';
$fakeroot='/usr/bin/fakeroot';

%dist_order = ( 'oldstable-security' => 0, stable => 1, 'stable-security' => 1, testing => 2, 'testing-security' => 2, unstable => 3, 'woody-backports.org' => 5, 'sarge-backports.org' => 6, experimental => 7 );
</pre>

<p>Don't forget to add the buildd user to the sudo configuration file so that
it can run tools without restriction.</p>


<p>Ok, let's test it now: Go to ~buildd/build, and let's build a package:</p>
<pre>
sbuild -d unstable -v netpbm-nonfree_2:9.20-2
sbuild -d woody-backports.org -v arj_3.10.19-1.backports.org.1
</pre>

<p>Let's add <tt>|/usr/bin/buildd-mail-wrapper</tt> to ~buildd/.forward, so that we can answer buildds mails.</p>

<p>You have also to tweak ~buildd/buildd.conf - but sorry, no cheat for that, as this depends on your wanna-build.</p>

<p>You can read more information about the buildd states
<a href="wanna-build-states">here</A> for details.
You should answer the mails of the buildd either with the signed changes file, 
or with "give-back", "retry", "dep-wait", or "failed", or "dep-wait 
&lt;dependencies&gt;" or "failed\n&lt;why it failed&gt;".</p>

<p>You can use the following tasks as cronjobs</p>
<pre>
@reboot        touch ~buildd/NO-DAEMON-PLEASE
17 * * * * /usr/bin/buildd-watcher
47 * * * * /usr/bin/buildd-uploader
</pre>

