#use wml::debian::template title="How to work on the Debian web pages" BARETITLE=true

<h2>General information</h2>

<h3>Resource requirements</h3>

<p>If you want to work on our web site, please be prepared to store at least
60 MB of data on your disk. This reflects the current size of the source
archive. If you (accidentally) rebuild all of the pages, you will need at
least twice as much space. If you make a partial checkout, you'll need much
less space, e.g. 18 MB for english/.

<h3>Partial checkouts</h3>

<p>Lots of people won't have the whole <code>webwml</code> CVS tree checked
out, which sometimes leads to missing files and broken builds, in case a
crucial new file is added and one doesn't do a full <kbd>cvs update</kbd> in
the directory. Remember to verify that you have all the required files (like
.wmlrc files) before complaining to us.

<h3>"Can I modify this page?"</h3>

<p>That depends. If you see a small mistake, like a typo, just fix it.

<p>If you notice that some bit of information is missing, feel free to fix
it, too.

<p>If you feel that something is awful and needs to be rewritten, bring it
up on debian-www so it can be discussed. We'll probably agree with you.

<p>If you notice there's a problem in a template (i.e. a file in
webwml/english/template/debian directory), please think about the change
before comitting it, because changes to templates often cause large portions
of the site to get rebuilt.

<H3>When adding new directories, also add the Makefile!</H3>

<P>Some care should be taken when adding a new directory to CVS. If the
current directory is listed in ../Makefile then you <b>must</b> create a
Makefile in it &mdash; otherwise <tt>make</tt> will give an error message.

<h3>"This link doesn't look right. Should I change it?"</h3>

<p>Because of the way the web servers are set up (using
<a href="content_negotiation">content negotiation</a>),
you should not have to change any of the internal links.
In fact we suggest you don't. Write to debian-www
if you feel a link is incorrect before changing it.

<h3>Fixing links</h3>

<p>If you notice a link to an external web site results in a redirection
(301, 302, a &lt;meta&gt; redirect, or a page saying "This page has moved.")
please tell debian-www about it.

<p>If you find a broken link (404, 403, or a page that's not what the link
says it is), please fix it and tell debian-www about it so translators are
aware. Even better, fix the link in all the other translations, and update
translation-check headers if possible. :-)

<h3>Look for READMEs</h3>

<p>Some of the directories contain a README to help you understand
how that directory is organized. These should provide any special
information needed when working in that area.

<h3>"What are these lines beginning with `#'?"</h3>

<p>In wml, a line beginning with a `#' is a comment. These are
preferred to normal HTML comments as they don't show up on the
final page.

<h3>"What are these foo.def and foo.data files?"</h3>

<p>To make it easier to keep the translations up to date, we separate the
generic parts (data) from the textual parts (text) of some pages. The
translators only need to copy and translate the textual parts of those, the
generic parts will be added automatically.

<p>Slices in the data files are not updated very frequently and when these
things happen, a note is usually sent to debian-www.

<p>An example may help in understanding this. It takes three files to
generate the page of vendor listings in <code>distrib/vendors</code>:
<p><dl compact>
  <dt><code>vendors.wml</code>:
      <dd>The text at the top of the vendors page is in this file.
      A translated copy of this should be placed in each language directory.
  <dt><code>vendors.CD.def</code>:
      <dd>This contains all the pieces of text which are needed for each
      vendor entry. Translations should be added directly to the original,
      which is in english/distrib/vendors.CD.def.
  <dt><code>vendors.CD</code>:
      <dd>This file contains the actual vendor entries which are independent
      on the language, so a translator doesn't need to touch this file.
</dl>

<p>New vendors are added by one of the webmasters modifying vendors.CD.
The next time the web pages are updated, all the translations will
automatically be rebuilt. (An updated translation for free! :-)

<h2>Adding New Pages</h2>

<p>Adding new pages to Debian is quite easy. All the work of getting the
header and footer right are done using WML. All you need to do is to include
a line such as the following at the top of the new file:

<pre><protect>
#use wml::debian::template title="TITLE OF PAGE" 
</protect></pre>

<p>followed by the body. All pages should use the
<code>wml::debian::template</code> template file unless they are using
a special one created just for that section, e.g. the News or security items.

<p>The templates we have allow you to define certain variables which will
affect the pages created. This should avoid having to create different
templates for every situation and allow improvements to be easier to
implement. The variables currently available and their purpose are:
<dl>
<dt>BARETITLE="true"
	<dd>Removes the "Debian GNU/Linux --" part that is usually prepended
	to all the &lt;title&gt; tags.
<dt>NOHEADER="true"
	<dd>Removes the initial header from the page. A custom header
	can, of course, be included in the body.
<dt>NOMIRRORS="true"
	<dd>Removes the mirror dropdown list from the page. It is generally
	not recommended to be used, except for a handful of pages.
<dt>NOHOMELINK="true"
	<dd>Removes the link back to the main Debian page, which is normally
	added to the bottom of the page.
<dt>NOLANGUAGES="true"
	<dd>Removes the links to versions in other languages, which are
	normally added to the bottom of the page.
<dt>GEN_TIME="true"
	<dd>Sets the date on the resulting files to the timestamp of the
	generated files, instead of the timestamp of the source file.
<dt>NOCOPYRIGHT="true"
	<dd>Removes the copyright notice at the bottom of the page.
</dl>

<p>Note that you can use any string as the value of these variables,
"true", "yes", "foo", it doesn't matter.

<p>An example of the use of this is in the ports pages which have
their own headers. <code>ports/arm/index.wml</code> uses:

<pre><protect>
#use wml::debian::template title="ARM Port" NOHEADER="yes"
</protect></pre>

<p>If you want to do something that can't be done using the existing
templates, first consider extending one of them. If it isn't
possible to extend one in a backward compatible way, try to make
the new template a superset of an existing one so the pages can
be converted to it at the next major upgrade (hopefully never more
than every 6 months).

<p>If you are creating a page that is generated by a script or has
little prose, consider using the slices filter within wml to ease
the task of keeping translations up to date. A good example of this
is in <kbd>distrib/vendors.wml</kbd>. New vendors can be added to this page
and the addition will be generated in every language automatically.
<kbd>vendors.wml</kbd> includes <kbd>vendors.CD</kbd> which contains the actual
list of vendors. This file in turn includes <kbd>distrib/vendors.CD.def</kbd>
which contains the definition of all the phrases in <kbd>vendors.CD</kbd>.

<p>Translators simply need to add translations wherever there is a slice,
e.g.
<pre><protect>
	[EN:Country:]
	[ES:Pa-is:]
	[DE:Land:]
</protect></pre>

<h2>Adding a new directory</h2>

<p>Note: do <strong>not</strong> create a directory with the name
<code>install</code>. This confuses make and the pages in that directory
will not be updated automatically.

<p>Below is an annotated example of adding a new directory to the web site.
<pre>
   mkdir foo
   cvs add foo
   cd foo
   cp ../intro/Makefile .
   cvs add Makefile
</pre>

<p>Edit the Makefile in the parent directory and add the directory you just
created to the <code>SUBS</code> variable. This will add the directory to
the build for when make is run.

<p>Finally, commit all the changes just made to the repository with
<pre>
  cvs commit Makefile foo
</pre>
