#use wml::debian::template title="GTK Front End Debian Installer"
#use wml::debian::recent_list

<h1>Status page for the gtk-frontend of debian-installer</h1>

<h3>News</h3>
<b>19.06.2003</b>: A new update, for a long time. Unfortunatly not
much has happened in the past two months. At least all udebs have been
uploaded and seem to work. Thanks to all involved maintainers. Vikram
Singh has written a <a
href="http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/partitioner/partition.png">
graphical partitioning tool</a> which might be useful, if we find a
way to integrate such widgets into the cdebconf design.<p>
<b>28.03.2003</b>: New version of libgtk-directfb. Does not conflict with libgtk anymore,
so it should be ready and needs testing. A first build of cdebconf and the gtk-frontend
succeeded.<p>
<b>25.03.2003</b>: Much work has been done on the frontend itself. It is now able to
display an arbitary number of questions at once, has backup support and can display
progress-bars. 
<a href="http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/screenshots/">Find screenshots here</a>.<p>
<b>17.03.2003</b>: The pthread issue was solved by a new version of libc, which now
contains the library.<p>
<b>12.03.2003</b>: Added a working version of gtk+-directfb, it is based on the work
of Alastair McKinstry. Also added a new version of libdirectfb. It incorporates some
ideas of Thomas Viehmann and includes a patch that fixes a segfault when when libdirectfb
is called by the gtk-frontend. Comments appreciated.<p>
<b>11.03.2003</b>: We are making progress: The first 
<a href="http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/screenshots/gtk-frontend.old.png">
screenshot</a><p>
<b>07.03.2003</b>: New version of libfontconfig udebbed. Sent a patch to bts.<p>
<b>07.03.2003</b>: Small changes to libdirectfb. Maintainer has been provided with
a patch.<p>
<b>07.03.2003</b>: Akira Tagoh has uploaded atk, glib and pango. Freetype has been
uploaded as well.<p>
<b>06.03.2003</b>: Changed rules for udeb-dev packages: Libraries should be installed
into /usr/lib/udeblib instead of a subdir dependant on the library name.<p>
<b>05.03.2003</b>: Made udebs for libexpat and libfontconfig.<p>
<b>04.03.2003</b>: Pango now uses libfontconfig for the freetype backend.
So we have to package this as well, and since it uses libexpat, we have another
candidate... Searching for volunteers.<p>
<b>04.03.2003</b> Added the section about space constraints.<p>
<b>04.03.2003</b>: Updated the zlib and the libpng udebs, patches have been
committed to bts.<p>
<b>03.03.2003</b>: Added a pointer to Akiras pango udebs.<p>
<b>03.03.2003</b>: Updated the recommendations for library udeb packaging,
find it on the bottom of this page. It has been sent to debian-boot for
reviewing, any comments are greatly appreciated.<p>
<b>03.03.2003</b>: Filed a bug against libc-udeb (#183155), that pthreads
is needed. The glib maintainers were not too happy, we should investigate, if thread
support is really necessary.<p>
<b>02.03.2003</b>: Started on documentation, of what is important when
packaging library udebs. I will post it to debian-boot soon, please review.<p>

<h3>Overview</h3> The debian installer currently gets rewritten with
the aim of being modular and more flexible than the current
boot-floppies system. For general issues check out the <a
href="http://people.debian.org/~pere/debian-installer/">Debian
installer homepage</a>.  This page is dedicated to a gtk-frontend of
the new installer. If you want to get involved, this is a good place
to start. Be sure to read the documentation from the debian-installer
cvs.<p> If you have anything to add or want to suggest corrections,
mail me: <a
href="mailto:sebastian.ley@mmweg.rwth-aachen.de">sebastian.ley@mmweg.rwth-aachen.de</a>.

<h3>What needs to be done</h3>
<ul>
  <li> A frontend for cdebconf, written to use gtk. Michael Cardenas
  started on this, it is available in the debian-installer cvs.
  <li> Installer modules (udebs), that provide a gtk library working
  directly on the framebuffer as well as the libraries gtk depends
  on. See the status of the individual packages below.
  <li> The installer kernel must provide framebuffer support.
  <li> A concept for the integration of the gtk-frontend must be made
  up, see below.
  <li> Detailed instructions of how to actually test the gtk-frontend
  <li> Find a way to integrate more specialized widgets into the
  current desgin.
  <li> Anything else?
</ul>

<h3>How to get involved</h3> 
If you want to help out with the gtk-frontend be sure to read the
documentation found in the installer cvs. Take a look at the udebs
listed below and examine them. Most of them are not fulfilling the
specifications, locate errors and make up patches. Packaging libraries
into udebs involves some complications. Find some hints at the end of
the document. If you find errors in it please send me a
message. Discussion takes place on the debian-boot mailinglist.

<h3>Size matters</h3>
There is no way all the files needed for the graphical installer will 
fit onto a 1,44 MB disk. Neither will it fit onto a 2,88 MB disk,
which is the upper limit for the ElTorito standard when booting from 
CDs.<p>
As a consequence the udebs have to be loaded onto a ramdisk from the
network or a CD repositiory. A ramdisk is limited in size naturally and
it would be great, if the graphical installer worked even with a small ramdisk.
So a top priority is to keep things small. Throw out unneeded stuff, eliminate
unnecessary dependencies where possible.

<h3>Status for udebs</h3>
The status coloring has the following meaning:
<ul>
<li><b>red:</b> This package needs until it will work for the debian installer or work at all
<li><b>yellow:</b> This package should be ready. It needs testing and uploading.
<li><b>green:</b> This package is tested and works as expected. Perhaps they need minor cosmetic changes, but functionality is given.
</ul>

<table border="1">

<tr><th>Package</th><th>Preliminary package</th><th>Who works on
it?</th><th>Uploaded?</th><th>Todo, Comments</th></tr>

<tr bgcolor="ffff99">
<td>gtk+-directfb</td>
<td>http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/udebs</td>
<td><a href="mailto:mbc@debian.org">Michael Cardenas</a>,<br><a
href="mailto:sebastian.ley@mmweg.rwth-aachen.de">Sebastian Ley</a></td>
<td>yes</td>
<td>udeb should be ready, needs testing</td>
</tr>

<tr bgcolor="ffff99">
<td>libdirectfb</td>
<td>http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/udebs</td>
<td><a href="mailto:sebastian.ley@mmweg.rwth-aachen.de">Sebastian
Ley</a></td>
<td>yes</td>
<td>udeb should be ready, needs testing</td>
</tr>

<tr bgcolor="ffff99">
<td>libpango</td>
<td>n/a</td>
<td><a href="mailto:tagoh@debian.org">Akira Tagoh</a></td>
<td>yes</td>
<td>udeb should be ready, needs testing</td>
</tr>

<tr bgcolor="ffff99">
<td>glib</td>
<td>n/a</td>
<td><a href="mailto:tagoh@debian.org">Akira Tagoh</a></td>
<td>yes</td>
<td>should be ready, needs testing</td>
</tr>

<tr bgcolor="ffff99">
<td>libatk</td>
<td>n/a</td>
<td><a href="mailto:tagoh@debian.org">Akira Tagoh</a></td>
<td>yes</td>
<td>should be ready needs testing</td>
</tr>

<tr bgcolor="ffff99">
<td>zlib</td>
<td>n/a</td>
<td>n/a</a></td>
<td>yes</td>
<td>udeb should be ready, needs testing</td>
</tr>

<tr bgcolor="ffff99">
<td>libpng</td>
<td>http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/udebs</td>
<td><a href="mailto:sebastian.ley@mmweg.rwth-aachen.de">Sebastian
Ley</a></td>
<td>yes</td>
<td>udeb should be ready, needs testing</td>
</tr>

<tr bgcolor="ffff99">
<td>libc</td>
<td>n/a</td>
<td>n/a</td>
<td>yes</td>
<td>udeb should be ready, needs testing</td>
</tr>

<tr bgcolor="ffff99">
<td>libfreetype</td>
<td>n/a</td>
<td>n/a</a></td>
<td>yes</td>
<td>udeb should be ready, needs testing</td></tr>

<tr bgcolor="ffff99">
<td>ttf-freefont</td>
<td>n/a</td>
<td>n/a</td>
<td>yes</td>
<td>Needs to be smaller. Some fonts must be dropped.</td></tr>

<tr bgcolor="ffff99">
<td>libfontconfig</td>
<td>http://www.mmweg.rwth-aachen.de/~sebastian.ley/d-i/udebs</td>
<td><a href="mailto:sebastian.ley@mmweg.rwth-aachen.de">Sebastian
Ley</a></td>
<td>yes</td>
<td>udeb should be ready, needs testing</td>
</tr>

<tr bgcolor="ffff99">
<td>libexpat</td>
<td>n/a</td>
<td>n/a</a></td>
<td>yes</td>
<td>udeb should be ready, needs testing</td></tr>

</table>

<h3>Integration of the gtk-frontend</h3>
Since all the libraries needed by the gtk frontend will never
fit onto a disk, we need a solution of how the frontend will be
used. By now there are two approaches:
<ul>
<li>For a CD install detect the cdrom without user intervention, set
up anna and make it pull in the needed libraries automatically. Then
switch to the gtk-frontend.
<li>Start the installation with a text or slang (or whatever)
frontend, and let the user configure the installation medium. After
that provide him with an option to change to the gtk-frontend.
</ul>
These are just ideas, no work has been done on it yet.

<h3>Packaging libraries into udebs</h3>
<i>This is just a proposal based on my experiences. Please direct any
comments to me or discuss it on debian-boot.</i>
<p>
First of all, be sure to read the general instructions of how to
create udebs, found in the installer cvs. The following issues are
specifically for libraries:
<p>
When packaging library modules some extra care must be taken. This
document provides some basic info on this matter.
<p>
Before reading this, it is good to read all other documentation of the
installer project. The <a href="http://www.netfort.gr.jp/~dancer/column/libpkg-guide/libpkg-guide.html">
library packaging guide</a> from Junichi Uekawa
provides general library packaging practics. It is good to have it
read as well.

<h4>Naming</h4>

Library modules should be named like their deb counterparts, with the
string "-udeb" added after it. For example libc6 will have a
libc6-udeb counterpart and libglib2.0-0 becomes libglib2.0-0-udeb. It
is important to include the soname number in the module name, because
an ABI change of the library will break all modules that depend on
that library and breaks net installs until the dependant modules are
rebuild.

<h4>Dependancies</h4>

The normal way for a debian package to find out its dependancies is
the shlibs system. Each library installed provides a shlibs file that
states the package which provides this library. This does not work to
figure out the dependancies for installer modules, since the shlibs
files will point to the deb packages providing the library in
question, not the installer module providing it.
<p>
To be able to use dh_shlibdeps anyway each library module should add a
"Provides:" line, providing the name of the corresponding deb package
of the library. I.e. libc6-udeb should provide libc6.

<h4>Content</h4>

The module must contain the library itself of course and a symlink
which is named like the SONAME of the library pointing to the
library. The development link as well as libtools .la files are not
needed. If a library comes with modules or data (stored in /usr/share)
it is a good idea to examine, if all of it is necessary and if not, if
it can be removed somehow.

<h4>Changing compile options</h4>

Sometimes it can be necessary to change the compile options for the
module library and so break binary compatibility. Not all changes in
the compile options cause an ABI change, using different -O flags for
example is harmless.
<p>
A change of the ABI was necessary for libdirectfb for instance,
because the library of the deb package was compiled with SDL and X
support which would have bloated the installer unnecessarily.
<p>
When binary compatibility breaks the soname of the library must be
changed to reflect this situation. As a recommendation the string
"udeb" should be inserted into the soname. Changing the soname can be
easy, if the library is built by libtool and uses autoconf. Refer to
the <a href="http://www.gnu.org/software/libtool/manual.html">libtool manual</a>
 and the <a href=" http://www.gnu.org/manual/autoconf-2.57/autoconf.html">autoconf manual</a>.
<p>
It is not enough to just package the new library into an installer
module. If another module contains programs that link with this
library, this library must be present on the build system.
<p>
Since modules should not be installed on normal systems there is need
for a deb package providing this library as well as the necessary
devekopment link. The package should be named libfoo-udeb-dev and
declare a dependancy on libfoo-dev. The only files libfoo-udeb-dev
should provide is the ABI-changed library and the necessary
symlinks. Since the development link is identically to the development
link in libfoo-dev, the library and the links should be installed into
the directory /usr/lib/udeblib.

<p>
If now a program for the installer should link with the ABI-changed
library, the linker must be provided with the "-L/usr/lib/udeblib"
option, to tell him, where to search for the development link for
libfoo first. This procedure should be documented in the README.Debian
file for libfoo-udeb-dev.
<p>
To get everything handled correctly by the shlibs system some minor
tweaking has to be done. To get correct dependancies for installer
modules depending on libfoo-udeb, provide the libfoo-udeb-dev package
with a shlibs file that points to the libfoo-udeb package. For
libdirectfb-udeb-dev the shlibs file contains:
<p align="center">
        libdirectfb-0.9-udeb 16 libdirectfb-0.9-16-udeb
<p>
There is only one problem lasting. If there is an installer module
libbar-udeb depending on libfoo-udeb, that itself also has a
libbar-udeb-dev because of binary incompatibilities, libbar-udeb-dev
will be dependant on libfoo-udeb, which is a installer module and must
not be installed on the build system. To tackle this problem each
udeb-dev should provide the corresponding udeb package,
i.e. libdirectfb-udeb-dev should have a
<p align="center">
               Provides: libdirectfb-0.9-16-udeb
<p>
line.
</p>
