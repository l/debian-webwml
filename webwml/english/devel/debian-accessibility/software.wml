#use wml::debian::template title="Debian-Accessibility - Software"
{#style#:<link rel="stylesheet" href="style.css" type="text/css" />:#style#}

<define-tag a11y-pkg endtag=required>
<preserve name tag url/>
<set-var %attributes>
<h3><if "<get-var url>"
        <a href="<get-var url>" name="<get-var tag>"><get-var name></a>
      <a name="<get-var tag>"><get-var name></a>></h3>
  %body
<restore name tag url/>
</define-tag>

<h2><a id="speech-synthesis" name="speech-synthesis">Speech Synthesis and related APIs</a></h2>
<a11y-pkg name="EFlite" tag=eflite url="http://eflite.sourceforge.net/">
<p>
  A speech server for <a href="#emacspeak">Emacspeak</a> and
  <a href="#yasr">yasr</a> (or other screen readers) that allows them to
  interface with <a href="#flite">Festival Lite</a>, a free text-to-speech
  engine developed at the CMU Speech Center as an off-shoot of
  <a href="#festival">Festival</a>.
</p>
<p>
  Due to limitations inherited from its backend, EFlite does only provide
  support for the English language at the moment.
</p>
</a11y-pkg>
<a11y-pkg name="Festival Lite" tag=flite>
<p>
  A small fast run-time speech synthesis engine.  It is the latest
  addition to the suite of free software synthesis tools including
  University of Edinburgh's Festival Speech Synthesis System and
  Carnegie Mellon University's FestVox project, tools, scripts and 
  documentation for building synthetic voices.  However, flite itself
  does not require either of these systems to run.
</p>
<p>
  It currently only supports the English language.
</p>
</a11y-pkg>
<a11y-pkg name="Festival" tag="festival"
          url="http://www.cstr.ed.ac.uk/projects/festival/">
<p>
  A general multi-lingual speech synthesis system developed
  at the <a href="http://www.cstr.ed.ac.uk/">CSTR</a> [<i>C</i>entre for
  <i>S</i>peech <i>T</i>echnology <i>R</i>esearch] of
  <a href="http://www.ed.ac.uk/text.html">University of Edinburgh</a>.
</p>
<p>
  Festival offers a full text to speech system with various APIs, as well an
  environment for development and research of speech synthesis techniques.
  It is written in C++ with a Scheme-based command interpreter for general
  control.
</p>
<p>
  Besides research into speech synthesis, festival is useful as a stand-alone
  speech synthesis program. It is capable of producing clearly understandable
  speech from text.
</p>
</a11y-pkg>
<a11y-pkg name="recite" tag="recite">
<p>
  Recite is a program to do speech synthesis.  The quality of sound produced
  is not terribly good, but it should be adequate for reporting the occasional
  error message verbally.
</p>
<p>
  Given some English text, recite will convert it to a series of phonemes,
  then convert the phonemes to a sequence of vocal tract parameters, and
  then synthesis the sound a vocal tract would make to say the sentence.
  Recite can perform a subset of these operations, so it can be used to
  convert text into phonemes, or to produce an utterance based on vocal
  tract parameters computed by another program.
</p>
</a11y-pkg>
<a11y-pkg name="Speech Dispatcher" tag="speech-dispatcher"
          url="http://www.freebsoft.org/speechd">
<p>
  Provides a device independent layer for speech synthesis.
  It supports various software and hardware speech synthesizers as
  backends and provides a generic layer for synthesizing speech and
  playing back PCM data via those different backends to applications.
</p>
<p>
  Various high level concepts like enqueueing vs. interrupting speech
  and application specific user configurations are implemented in a device
  independent way, therefore freeing the application programmer from having
  to yet again reinvent the wheel.
</p>
</a11y-pkg>

<h2><a name="i18nspeech">Internationalised Speech Synthesis</a></h2>
<p>
All the currently available free solutions for software based speech
synthesis seem to share one common deficiency: They are mostly limited to
English, providing only very marginal support for other languages, or in
most cases none at all.
Among all the free software speech synthesizers for Linux, only CMU
Festival supports more than one natural language. CMU Festival can
synthesize English, Spanish and Welsh. German is not
supported. French is not supported. Russian is not supported. When
internationalization and localization are the trends in software and
web services, is it reasonable to require blind people interested in
Linux to learn English just to understand their computer's output and to
conduct all their correspondence in a foreign tongue?
</p>
<p>
Unfortunately, speech synthesis is not really Jane Hacker's favourite
homebrew project.  Creating an intelligible software speech
synthesizer involves time-consuming tasks.
Concatenative speech synthesis requires the careful creation of a
phoneme database containing all the possible combinations of sounds
for the target language.
Rules that determine the transformation of the text representation
into individual phonemes also need to be developed and fine-tuned,
usually requiring the division of the stream of characters into
logical groups such as sentences, phrases and words. Such lexical
analysis requires a language-specific lexicon seldom released under a
free license.
</p>
<p>
One of the most promising speech synthesis systems is Mbrola, with
phoneme databases for over ten different languages. Unfortunately, the license
chosen by the project is very restrictive. Mbrola can only be distributed as
a pre-built binary. In addition, the phoneme databases are for
non-military and non-commercial use only. We contacted the project
developers, but they were unable to change the licensing of their
work due to the limitations set by various contributors.  Unfortunately,
given the restrictive licensing model of Mbrola, it cannot be used
as a basis for further work in this direction, at least not in the context
of the Debian Operating System.
</p>
<p>
Without a broadly multi-lingual software speech synthesizer, Linux
cannot be accepted by assistive technology providers and people with
visual disabilities. What can we do to improve this?
</p>
<p>
There are basically two approaches possible:
</p>
<ol>
<li>Organize a group of people willing to help in this regard, and
try to actively improve the situation.  This might get a bit complicated,
since a lot of specific knowledge about speech synthesis will be required,
which isn't that easy if done via an autodidactic approach.  However, this
should not discourage you.  If you think you can motivate a group of
people large enough to achieve some improvements, it would be worthwhile
to do.</li>
<li>Obtain funding and hire some institute which already has the
know how to create the necessary phoneme databases, lexica and transformation
rules.  This approach has the advantage that it has a better probability
of generating quality results, and it should also achieve some improvements
much earlier than the first approach.  Of course, the license under which all
resulting work would be released should be agreed on in advance, and it should
pass the DFSG requirements. The ideal solution would of course
be to convince some university to undergo such a project on their own
dime, and contribute the results to the Free Software community.</li>
</ol>

<h2><a id="emacs" name="emacs">Screen review extensions for Emacs</a></h2>
<a11y-pkg name="Emacspeak" tag="emacspeak"
          url="http://emacspeak.sourceforge.net/">
<p>
  A speech output system that will allow someone who cannot see
  to work directly on a UNIX system.  Once you start Emacs with
  Emacspeak loaded, you get spoken feedback for everything you do.  Your
  mileage will vary depending on how well you can use Emacs.  There is nothing
  that you cannot do inside Emacs :-).  This package includes speech servers
  written in tcl to support the DECtalk Express and DECtalk MultiVoice
  speech synthesizers.  For other synthesizers, look for separate
  speech server packages such as Emacspeak-ss or <a href="#eflite">eflite</a>.
</p>
</a11y-pkg>
<a11y-pkg name="speechd-el" tag="speechd-el"
          url="http://www.freebsoft.org/speechd-el">
<p>
  An Emacs client and an Elisp library to
  <a href="#speech-dispatcher">Speech Dispatcher</a>.  It provides a complex
  speech interface to Emacs, focused especially on (but not limited to) the
  blind and visually impaired users.  It allows the user to work with Emacs
  without looking on the screen, using the speech output produced by the
  synthesizers supported in Speech Dispatcher.
</p>
</a11y-pkg>
<h2><a id="console" name="console">Console (text-mode) screen readers</a></h2>
<a11y-pkg name="BRLTTY" tag="brltty" url="http://mielke.cc/brltty/">
<p>
  A daemon which provides access to the Linux console for a blind
  person using a soft braille display.
  It drives the braille terminal and provides complete screen review
  functionality.
</p>
<p>
  The following display models are currently (as of version 3.4.1-2) supported:
  <ul>
    <li><a href="http://www.alva-bv.nl/">Alva B.V.</a>:
      <cite>ABT (3nn)</cite>,
      <cite>Delphi (4nn)</cite>,
      <cite>Satellite (5nn)</cite>
    </li>
    <li><a href="http://www.baum.de/index-e.php">Baum</A>:
      <cite>Vario/RBT 40/80</cite> (emulation 1/2)
    </li>
    <li><a href="http://www.blazie.com/">Blazie Engineering</a>:
      <cite>BrailleLite 18/40/M20/M40</cite>
    </li>
    <li><a href="http://www.eurobraille.fr/">EuroBraille</a>:
      <cite>AzerBraille</cite>,
      <cite>Clio</cite>,
      <cite>Iris</cite>,
      <cite>NoteBraille</cite>,
      <cite>Scriba</cite>
    </li>
    <li><a href="http://www.freedomscientific.com">Freedom Scientific</a>:
      <cite><a href="http://www.freedomscientific.com/fs_products/displays_focus40-80.asp">Focus 44/70/84</a></cite>,
      <cite>PAC Mate <a href="http://www.freedomscientific.com/fs_products/PACmate_20.asp">20</a>/<a href="http://www.freedomscientific.com/fs_products/PACmate_40.asp">40</a></cite>
    </li>
    <li><a href="http://www.handialog.com/indexuk.htm">Handialog</A>:
      <cite>VisioBraille 2040</cite>
    </li>
    <li><a href="http://www.handytech.de/">Handy Tech Elektronik GmbH</A>:
      <cite><a href="http://www.handytech.de/en/normal/products/for-blind/bookworm/index.html">Bookworm</a></cite>,
      <cite>Braille Star <a href="http://www.handytech.de/en/normal/products/for-blind/braille-star-40/index.html">40</a>/<a href="http://www.handytech.de/en/normal/products/for-blind/braille-star-80/index.html">80</a></cite>,
      <cite><a href="http://www.handytech.de/en/normal/products/for-blind/braille-wave/index.html">Braille Wave 40</a></cite>,
      <cite><a href="http://www.handytech.de/en/normal/products/for-blind/braillino/index.html">Braillino 20</a></cite>,
      <cite>Modular 20/40/80</cite>,
      <cite><a href="http://www.handytech.de/en/normal/products/for-blind/modular-evo/index.html">Modular Evolution 64/88</a></cite>
    </li>
    <li><a href="http://cidat.once.es/">La O.N.C.E.</a>:
      <cite>EcoBraille 20/40/80</cite>
    </li>
    <li><a href="http://www.cavazza.it/cnt/schede/scheda-mb408l-eng.html">MDV</a>:
      <cite>MB208/MB408L/MB408S</cite> (protocol 5)
    </li>
    <li><a href="http://www.papenmeier.de/">Papenmeier</a>:
      <cite>Tiny</cite>,
      <cite>Compact</cite>,
      <cite>2D Lite</cite>,
      <cite>2D Screen Soft</cite>,
      <cite>EL 2D-40/66/80</cite>,
      <cite>EL 80</cite>,
      <cite>EL 40 P</cite>,
      <cite>Elba 20/32</cite>,
      <cite>IB 80 CR Soft</cite>
      <cite>II EL 40/66/80 S</cite>
    </li>
    <li><a href="http://www.pulsedata.co.nz/">Pulse Data International</a>:
      <cite>BrailleNote 18/32</cite>
    </li>
    <li><a href="http://www.telesensory.com/">Telesensory Systems Inc.</a>:
      <cite>Navigator 20/40/80</CITE> (latest firmware version only),
      <cite>PowerBraille 40/65/80</cite>
    </li>
    <li><a href="mailto:tactilog@post7.tele.dk">Tactilog</a>:
      <cite>LogText</cite>
    </li>
    <li><a href="http://www.braillevoyager.nl/">Tieman B.V.</a>:
      <cite>CombiBraille 25/45/85</cite>,
      <cite>MiniBraille 20</cite>,
      <cite>MultiBraille MB125CR/MB145CR/MB185CR</cite>,
      <cite>Voyager 44/70 (USB)</cite>
    </li>
    <li><a href="http://www.tiflosoft.it/">Tiflosoft</a>:
      <cite>VideoBraille 40</cite>
    </li>
    <li><a href="http://www.tivomatic.fi/">Tivomatic</a>:
      <cite>Albatross 46/80</cite>
    </li>
  </ul>
</p>
<p>
  BRLTTY also provides a client/server based infrastructure for applications
  wishing to utilize a Braille display.  The daemon process listens for
  incoming TCP/IP connections on a certain port.  A shared object library
  for clients is provided in the package
  <a href="http://packages.debian.org/libbrlapi">libbrlapi</a>.  A static
  library, header files and documentation is provided in package
  <a href="http://packages.debian.org/libbrlapi-dev">libbrlapi-dev</a>.  This
  functionality is for instance used by <a href="#gnopernicus">Gnopernicus</a>
  to provide support for display types which are not yet support by Gnopernicus
  directly.
</p>
</a11y-pkg>
<a11y-pkg name="Screader" tag="screader"
          url="http://www.euronet.nl/~acj/eng-screader.html">
<p>
  The background program screader reads the screen and puts the information
  through to a software Text-To-Speech package (Like
  `<a href="#festival">festival</a>') or a hardware speech synthesizer.
</p>
</a11y-pkg>
<a11y-pkg name="Yasr" tag="yasr" url="http://yasr.sourceforge.net/">
<p>
  A general-purpose console screen reader for GNU/Linux and
  other UNIX-like operating systems.  The name "yasr" is an acronym that
  can stand for either "Yet Another Screen Reader" or "Your All-purpose
  Screen Reader".
</p>
<p>
  Currently, yasr attempts to support the Speak-out, DEC-talk, BNS, Apollo,
  and DoubleTalk hardware synthesizers.  It is also able to communicate with
  Emacspeak speech servers and can thus be used with synthesizers not directly
  supported, such as <a href="#flite">Festival Lite</a> (via
  <a href="#eflite">eflite</a>) or FreeTTS.
</p>
<p>
  Yasr works by opening a pseudo-terminal and running a shell, intercepting
  all input and output.  It looks at the escape sequences being sent and
  maintains a virtual "window" containing what it believes to be on the
  screen.  It thus does not use any features specific to Linux and can be
  ported to other UNIX-like operating systems without too much trouble.
</p>
</a11y-pkg>
<h2><a id="gui" name="gui">Graphical User Interfaces</a></h2>
<p>
Accessibility of graphical user interfaces on UNIX platforms has only recently
received a significant upswing with the various development efforts around the
<a href="http://www.gnome.org/">GNOME Desktop</a>, especially the
<a href="http://developer.gnome.org/projects/gap/">GNOME Accessibility Project</a>.
</p>
<h2><a id="gnome" name="gnome">GNOME Accessibility Software</a></h2>
<a11y-pkg name="Assistive Technology Service Provider Interface" tag="at-spi">
<p>
  This package contains the core components of GNOME Accessibility.
  It allows Assistive technology providers like screen readers to
  query all applications running on the desktop for accessibility
  related information as well as provides bridging mechanisms to support
  other toolkits than GTK.
</p>
<p>
  Bindings to the Python language are provided in package
  <a href="http://packages.debian.org/python-at-spi">python-at-spi</a>.
</p>
</a11y-pkg>
<a11y-pkg name="The ATK accessibility toolkit" tag="atk">
<p>
  ATK is a toolkit providing accessibility interfaces for applications or
  other toolkits. By implementing these interfaces, those other toolkits or
  applications can be used with tools such as screen readers, magnifiers, and
  other alternative input devices.
</p>
<p>
  The runtime part of ATK, needed to run applications built with it is available
  in package <a href="http://packages.debian.org/libatk1.0-0">libatk1.0-0</a>.
  Development files for ATK, needed for compilation of programs or toolkits
  which use it are provided by package <a href="http://packages.debian.org/libatk1.0-dev">libatk1.0-dev</a>.
  Ruby language bindings are provided by package
  <a href="http://packages.debian.org/libatk1-ruby">libatk1-ruby</a>.
</p>
</a11y-pkg>
<a11y-pkg name="gnome-accessibility-themes" tag="gnome-accessibility-themes">
<p>
  The gnome-accessibility-themes package contains some high accessibility themes
  for the GNOME desktop environment, designed for the visually impaired.
</p>
<p>
  A total of 7 themes are provided, providing combinations of high, low
  or inversed contrast, as well as enlarged text and icons.
</p>
</a11y-pkg>
<a11y-pkg name="gnome-speech" tag="gnome-speech">
<p>
  The GNOME Speech library gives a simple yet general API for programs
  to convert text into speech, as well as speech input.
</p>
<p>
  Multiple backends are supported, but currently only the
  <a href="#festival">Festival</a> backend is enabled in this package; the
  other backends require either Java or proprietary software.
</p>
</a11y-pkg>
<a11y-pkg name="Gnopernicus" tag="gnopernicus"
          url="http://www.baum.ro/gnopernicus.html">
<p>
  Gnopernicus is designed to allow users with limited or no vision to
  access GNOME applications.  It provides a number of features, including
  magnification, focus tracking, braille output, and more.
</p>
</a11y-pkg>
<h2><a id="kde" name="kde">KDE Accessibility Software</a></h2>
<a11y-pkg name="kmag" tag0"kmag">
<p>
  Magnify a part of the screen just as you would use a lens to magnify a
  newspaper fine-print or a photograph.  This application is useful for
  a variety of people: from researchers to artists to web-designers
  to people with low vision.
</p>
</a11y-pkg>
<h2><a id="input" name="input">Non-standard input methods</a></h2>
<a11y-pkg name="Dasher" tag="dasher" url="http://www.inference.phy.cam.ac.uk/dasher/">
<p>
  Dasher is an information-efficient text-entry interface, driven by natural
  continuous pointing gestures. Dasher is a competitive text-entry system
  wherever a full-size keyboard cannot be used - for example,
</p>
  <ul>
   <li>on a palmtop computer</li>
   <li>on a wearable computer</li>
   <li>when operating a computer one-handed, by joystick, touchscreen,
       trackball, or mouse</li>
   <li>when operating a computer with zero hands (i.e., by head-mouse or by
       eyetracker).</li>
  </ul>
<p>
  The eyetracking version of Dasher allows an experienced user to write text
  as fast as normal handwriting - 25 words per minute; using a mouse,
  experienced users can write at 39 words per minute.
</p>
<p>
  Dasher uses a more advanced prediction algorithm than the T9(tm) system
  often used in mobile phones, making it sensitive to surrounding context.
</p>
</a11y-pkg>
<a11y-pkg name="GOK" tag="gok" url="http://www.gok.ca/">
<p>
  GOK [<i>G</i>NOME <i>O</i>nscreen <i>K</i>eyboard] is a dynamic onscreen
  keyboard for UNIX and UNIX-like operating systems.  It features Direct
  Selection, Dwell Selection, Automatic Scanning and Inverse Scanning access
  methods and includes word completion.
</p>
<p>
  GOK includes an alphanumeric keyboard and a keyboard for launching
  applications.  Keyboards are specified in XML enabling existing
  keyboards to be modified and new keyboards to be created.  The access
  methods are also specified in XML providing the ability to modify existing
  access methods and create new ones.
</p>
</a11y-pkg>
