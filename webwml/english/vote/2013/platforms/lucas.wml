#use wml::debian::template title="Platform for Lucas Nussbaum" BARETITLE="true" NOHEADER="true"
#include "$(ENGLISHDIR)/vote/style.inc"

  <table class="title">
    <tr>
      <td>
        <h1 class="titlemain">DPL Platform</h1>

        <h3 class="titlerest">Lucas Nussbaum</h3>
      </td>
    </tr>
  </table>

  <h2 class="section">Who I am / past Debian contributions</h2>

<p>
French, 31 years old, Free Software user since 1997, <a
href="http://en.wikipedia.org/wiki/Academic_rank_in_France">Assistant professor
(<i>Maître de conférences</i>)</a> of Computer Science at <a
href="http://www.univ-lorraine.fr/">Université de Lorraine</a> where I have the
chance to teach Free Software and Debian in the context of a system
administration curriculum.
</p>

<p>
I started contributing to Debian in 2005. My main contributions are:
</p>

  <dl class="description">
    <dt class="dt-description"><b>Ruby.</b></dt>

<dd class="dd-description">
I got involved in Debian by maintaining Ruby packages in the <a
href="http://wiki.debian.org/Teams/Ruby">pkg-ruby-extras</a> team. I
co-maintain the interpreter packages, and initiated the work on our new
packaging helper, gem2deb (= dh-make-ruby + dh_ruby), that makes it much easier
to package Ruby software and significantly improved our relations with the
upstream community.
</dd>

    <dt class="dt-description"><b>Collaboration with Ubuntu.</b></dt>

<dd class="dd-description">
I worked on improving ways to manage divergence between Debian and Ubuntu, and
to get Ubuntu improvements back into Debian. I contributed to a lot of
softening in Debian/Ubuntu relations in the early years, to <a
href="https://lists.ubuntu.com/archives/ubuntu-devel-announce/2006-August/000182.html">policies
such as the listing of the Ubuntu changes in Ubuntu changelog entries</a>, and
added ways to get information about packages in Ubuntu with the <i>Ubuntu
box</i> on the <a href="http://packages.qa.debian.org/d/dpkg.html">Packages
Tracking System</a>, and the Ubuntu column in <a
href="http://qa.debian.org/developer.php?login=lucas%40debian.org&amp;comaint=yes">DDPO</a>.
(read more: <a
href="http://www.loria.fr/~lnussbau/files/fosdem2010-debian-ubuntu.pdf">slides
from a FOSDEM 2010 talk</a>)
</dd>

    <dt class="dt-description"><b>Archive rebuilds.</b></dt>

<dd class="dd-description">
I have been rebuilding all packages in Debian on a regular basis since 2006. As
a result, I filed over 7000 <q>FTBFS</q> release-critical bugs. Yes, I do feel
bad about it, but I try to think of it as detecting problems early, not only as
delaying releases ;). The same infrastructure is also used to test major
migrations or toolchain changes involving gcc, <a
href="http://clang.debian.net/">Clang</a>, and Python. (more info: <a
href="http://www.loria.fr/~lnussbau/files/fosdem07-auttest.pdf">slides from
FOSDEM 2007 talk</a>, <a href="http://www.lucas-nussbaum.net/blog/?p=718">blog
post about the recent move to AWS</a>)
</dd>

    <dt class="dt-description"><b>Ultimate Debian Database.</b></dt>

<dd class="dd-description">
Debian services (dak, wanna-build, BTS, DEHS, popcon, lintian, etc.) are very
much heterogeneous in terms of technologies and interfaces. The positive impact
is that it is very easy for anyone to develop another service and get it
integrated into our existing infrastructure. The negative impact is that it is
very hard to combine data. <a href="http://udd.debian.org/">Ultimate Debian
Database</a> solves that by importing all relevant data about Debian (and
derivative distributions) into a single SQL database. Several services have
been developed on top of UDD (including <a
href="http://udd.debian.org/bugs.cgi">bugs.cgi</a> and <a
href="http://udd.debian.org/dmd.cgi">Debian Maintainer Dashboard</a>) and many
others rely on UDD as a data source. (more info: <a
href="http://www.loria.fr/~lnussbau/files/msr2010-udd.pdf">paper</a> + <a
href="http://www.loria.fr/~lnussbau/files/msr2010-udd-slides.pdf">slides</a> at
MSR'2010; <a
href="http://www.loria.fr/~lnussbau/files/debconf9-ultimate-debian-database.pdf">Debconf'09
talk</a>)</dd>

    <dt class="dt-description"><b>Debian packaging tutorial.</b></dt>

<dd class="dd-description">
I wrote a <a href="$(HOME)/doc/devel-manuals#packaging-tutorial">packaging
tutorial</a> (<a
href="http://packages.debian.org/sid/packaging-tutorial"><tt>packaging-tutorial</tt>
package</a>) to provide a more accessible documentation for prospective
maintainers. I used it to teach Debian packaging on a few occasions, and it has
been translated into French, German and Spanish. It is also a nice way to
advocate good practices, such as packaging with <i>dh</i> (slide 26), or first
steps to get involved in Debian (get involved in teams / adopt existing
packages, but not package more useless software when better alternatives
already exist in Debian; slide 42).
</dd>

    <dt class="dt-description"><b>Misc.</b></dt>

<dd class="dd-description">
I am marginally active in the Debian Science team. I have been application
manager in the NM process. On a few occasions, I also summarized huge threads
on debian-devel@ (e.g. on <a
href="https://lists.debian.org/debian-devel/2011/05/msg00111.html">rolling</a>,
and on <a
href="https://lists.debian.org/debian-devel/2012/10/msg00469.html">forced
orphaning of packages</a>).
</dd>
  </dl>

<p>
Overall, most of my Debian contributions aim at addressing problems at the
distribution scale (QA, data-mining), and at enhancing collaboration and
communication (with new contributors, with derivative distributions).
</p>

  <h2 class="section">State of Debian; vision and goals</h2>

  <h3 class="subsection">State of the project</h3>

<p>
The Debian project is internally in a very good shape. Of course, some
improvements are always possible, and there are some grey spots, but all our
core teams are reasonably functional, we have good internal and external
communication, our infrastructure is generally in a good state, there is no
foreseeable big Debian crisis. Stefano Zacchiroli played a huge role in
achieving that state, and we should all be very thankful for that.
</p>

<p>
However, I often have the impression that the project is losing momentum,
positive energy, and slowing down. It feels like we are living on the benefits
of the past. A lot of very cool things happen in the Debian ecosystem, but very
often outside the Debian project. It is good to be a solid basis for many
innovative derivative distributions, but should we content ourselves with the
<a href="http://joeyh.name/blog/entry/the_supermarket_thing/">package
supermarket</a> role?</p>

  <h3 class="subsection">What should Debian be in 5 years?</h3>

<p>
Debian should aim at <b>reinforcing its position in the center of the Free
Software ecosystem</b>. It should be the <b>main active intermediary between
upstream projects and final users</b>. Of course, providing a good basis for
derivatives is important, because derivatives users are Debian users, even if
some of them do not acknowledge that. But we should also aim at <b>reinforcing
the visibility and the impact of Debian itself, because the extremely important
values we fight for as a project are often neglected by our derivatives.</b>
</p>

<p>
Yes, that means working on getting some of the cool stuff done by derivatives
back in Debian, and creating more Debian <i>products</i>. For example, we have
been providing a fairly good rolling release for <a
href="https://lists.debian.org/debian-devel/2000/08/msg00906.html">almost 13
years</a> with <i>testing</i>, but we totally fail at advertising it as
something supported and usable by end users. And now that Ubuntu is considering
<a href="https://lists.ubuntu.com/archives/ubuntu-devel/2013-February/036537.html">switching
to a 2-year cycle + rolling release</a>, they might get all the good press
instead of us. Couldn't we work towards addressing different needs and use
cases with different <i>products</i> (rolling release, maybe live images),
without compromising the quality of our stable releases? I even think that
getting more users of <i>testing</i> would increase the quality of our stable
releases by having more eyes to find bugs (reminder: <a
href="http://www.donarmstrong.com/posts/bug_reporting_rate/">the bug reporting
rate has been decreasing</a>).
</p>

  <h3 class="subsection">How do we get there?</h3>

  <dl class="description">
    <dt class="dt-description"><b>Foster innovation inside Debian.</b></dt>

    <dd class="dd-description">
We should be more welcoming towards innovation and experiments inside the
project. Often, we merely tolerate them, and bureaucracy makes them hard and
slow to conduct.

<p>
While it's not a DPL's role to decide of the project's directions, if elected,
I will encourage (discussion of) innovative ideas, investigate how the
project's resources can be used to support them, and advertise experiments. Of
course, such experiments need to include success metrics, and the necessary
warnings (no long term guarantee that the experiment will continue, no security
support, etc.)
</p>
    </dd>

    <dt class="dt-description"><b>Improving Debian accessibility and reduce the barrier to contribution.</b></dt>

    <dd class="dd-description">
While there are more and more Free Software users (and potential contributors),
we compete with more and more projects to attract contributors. Many efforts
have already been made in that area, but there is still a lot of room for
improvement:

      <ul class="itemize">
<li class="li-itemize">
We should <b>improve our developer documentation</b> (I contributed to that
area myself by writing a <a
href="$(HOME)/doc/devel-manuals#packaging-tutorial">packaging tutorial</a>;
I've also been a developers-reference editor). Some teams still lack proper
documentation about their work-flows and tools on the <a
href="http://wiki.debian.org/Teams">wiki.d.o/Teams</a> sub-pages. How can we
expect prospective contributors to stay around if the documentation is not up
to par? There is also space for consolidation here: for example, we do not
really have a single documentation about Git-based packaging work-flows, so
each team tends to design its own, slightly different workflow (I started an <a
href="http://wiki.debian.org/GitPackagingWorkflow">initiative about that during
Debconf'11</a>, though it has been mostly idle since then). This is very bad:
from a contributor's perspective, it makes each Debian team look like a
separate project.
</li>

<li class="li-itemize">
We should <b>simplify our development practices</b> by (1) being better at
advertising the recommended practices; (2) being faster at implementing them in
most packages (it often <a
href="http://www.lucas-nussbaum.net/blog/?p=751">takes years for a good new
practice to reach a majority market share</a>). For example, we should
advertise that, unless you know what you are doing (yes, there are good reasons
to do things differently): you should use <tt>dh</tt>; you should maintain your
package inside a team, or, if there's no suitable team, use a Git repository in
the <tt>collab-maint</tt> project (and consider looking for co-maintainers).
And we should also work on switching existing packages to this model. And
document that process properly, but I'm repeating myself.
</li>

<li class="li-itemize">We should <b>improve our sponsorship infrastructure</b>
(reminder: <a href="http://www.lucas-nussbaum.net/blog/?p=746">half of our
package maintainers are neither DDs nor DMs</a>): <a
href="http://mentors.debian.net/">debexpo / mentors.d.n</a> is great, but could
gain more features, such as more automated QA tests (builds, piuparts). Also, I
see two ways to work against the shortage of reviewing manpower: (1) finally
create personal packages archives, so that waiting for reviews becomes slightly
less painful; (2) ask non-DD to review packages in a social website manner
(that's also a very nice way to learn).
</li>

<li class="li-itemize">
We should continue to push for <b>collaborative and team maintenance</b>. We
should also consider <b>reducing package ownership</b>. While having
maintainers that feel very responsible about packages (and are often real
experts of those packages) is an important strength of Debian, maintainers
should think in terms of <q>packages I currently take care of inside Debian</q>
rather than <q>packages I own inside Debian</q>. The <a
href="http://dep.debian.net/deps/dep1.html">current NMU policy</a> (a change I
drove back in 2008) is a good basis, but we could use a small cultural shift to
be more welcoming to contributions from other contributors. For example, we
could generalize the collab-maint security model (= <q>every DD can commit</q>)
to more packages repositories.

<p>
However, team maintenance sometimes hide cases where there are no longer any
active maintainer in a team. We should also get better at identifying those
cases, and adapt our infrastructure and procedures accordingly.
</p>
</li>
      </ul>
    </dd>

    <dt class="dt-description"><b>Improve communication with upstream projects.</b></dt>

<dd class="dd-description">
It is not unusual that maintainers have no contact at all with upstream
developers. We should work on creating a working relationship with upstream
projects, involving them in the package maintenance when they are willing to,
and exporting information about bugs affecting Debian, or patches in the Debian
package (improving <a
href="http://patch-tracker.debian.org/">http://patch-tracker.d.o/</a>).
</dd>
  </dl>

  <p><br /></p>

<p>
The above should give you an idea of where I stand. Of course, I'm unlikely to
have time to work on much of the above myself (and becoming DPL probably would
make it even less likely). But at least you know what I consider the most
important, and where I would push.
</p>

  <h2 class="section">Role of the DPL and governance model</h2>

  <h3 class="subsection">On governance</h3>

<p>
I plan to continue the <i>DPL helpers</i> initiative. There are many DDs
(including former DPLs!) with great ideas for the project, but many of them can
not dedicate a large-enough amount of time to be the DPL. I would like to build
a framework allowing them to share the DPL workload and to move forward with
their ideas.
</p>

<p>
The general direction I would like to aim for here is an open team of DDs
driving the project, led by the DPL. In the longer term, this could allow to
decrease the specific load on the DPL, which would turn into a simple chair for
this group. Of course, this must not turn into a cabal, and must not affect
Debian's consensus-based decision making processes. Also, to be clear, I do not
plan to go in the direction of an institutionalized DPL team during my term: I
believe that we need more time to understand how a <i>DPL team</i>,
institutionalized or not, can benefit the project, and to evaluate the
downsides of an institutionalized DPL team.
</p>

  <h3 class="subsection">On mediation</h3>

<p>
An important part of the DPL's role is to be a mediator, and to contribute to
solving the complex issues that necessarily arise from time to time in any
volunteer-based project.
</p>

<p>
One thing I would like to work on in that context is a <i>project
observatory</i>: gather a set of metrics about the project in order to detect
problems proactively, and approach people before the problem degenerates into a
big crisis. Of course, not everything can be detect using such metrics, and I
also plan to use <i>DPL helpers</i> meetings as a way to build a wider view of
the project and its growing issues.
</p>

<p>
I've sometimes had the impression in the past that the DPL was not necessarily
the best person to conduct a mediation (because he did not have a (good)
personal relationship with the involved DDs, or because he had a good such
relationship with only one side). <i>DPL helpers</i> meetings will be great
opportunities to find more suited mediators when necessary.
</p>

  <h3 class="subsection">On organization</h3>

<p>
The organization built by Stefano Zacchiroli over his three terms has proven to
work very well. If elected, I will use the same organization, including monthly
mails to d-d-a and a private day-to-day log. <i>DPL helpers</i> meetings will
be organized on a regular basis (at least every two weeks).
</p>

  <h2 class="section">Rebuttals</h2>

<p>
So, we got three candidates (which I find a bit disappointing -- I enjoyed past 
campaigns when we had lots of candidates since it results in 
<a href="http://www.lucas-nussbaum.net/blog/?p=763">more ideas</a> for the
project). And three quite different platforms.
</p>

<h3>Moray Allan</h3>

<p>
Moray's platform provides a great detailed description of how he would behave
as a DPL -- or even of how a DPL should behave. I agree with most of it, and
will inspire from those guidelines if I am elected.
</p>

<p>
What I miss the most in Moray's platform is a vision for the project, and his project-wide <i>goals</i>. He 
provides some historical perspective and his view on the current status, but 
where would he like the project to go during his term?
That is a symptom of our deeper disagreement on the roles
of the DPL. Moray's platform and answers on debian-vote@ give the impression 
that he sees the DPL as a
<i><a href="https://lists.debian.org/debian-vote/2013/03/msg00028.html">chair</a></i>
role, as an <i>administrator</i>. 
However, I think that the project now expects the DPL to do more in terms of coordination, of
<i>driving</i> the project and of management of its agenda, as Stefano Zacchiroli has 
been very active and successful in those areas. On that, Moray writes <q><i>I see DPL 
coordination in a routine matter as itself a sign of a wider problem 
that should be addressed.</i></q>.
</p>

<p>
If elected, I will consider that it is among DPL roles to ensure that project 
coordination happens. I will leverage the DPL 
helpers initiative (which I 
<a href="https://lists.debian.org/debian-vote/2013/03/msg00072.html">suggested
renaming to Debian Driving Force</a>) to create an open 
group of people interested in pushing the project forward. Of course, this is 
about opening discussions, proposing new ideas, summarizing the discussions
to ensure wide awareness and participation, 
but not about changing the way the project takes decisions.
</p>

<h3>Gergely Nagy (algernon)</h3>

<p>
Only candidate with a nickname, which unfortunately says something about the lack of 
inspiration of the two other candidates. :)
</p>

<p>
I agree with most of what Gergely wrote in his platform, e.g. on on the state 
of the project, on the value of direct communication and local events, and on the 
need to recruit new contributors.
</p>

<p>
Something I would have liked to see more in his platform is examples of past 
achievements in Debian that show where he usually stands, as well as his 
ability to drive projects. Gergely really has many ideas and willingness to 
push them forward, but he does not seem to have much experience pushing previous 
ideas: most of the examples he gives in his platform actually happened outside Debian.
It's true that it's hard to acquire such experience in Debian. If elected, I 
will make sure that the <i>DPL helpers</i> initiative contributes to solving that, 
by providing an environment where it is easy to receive feedback and advice on 
pushing ideas forward, and I hope to work together with Gergely
in that context.
</p>

