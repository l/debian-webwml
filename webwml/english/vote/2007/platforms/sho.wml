#use wml::debian::template title="Platform for Sam Hocevar" BARETITLE="true" NOHEADER="true"
#include "$(ENGLISHDIR)/vote/style.inc"

<h1> About me </h1>

<p> Hi! I&#8217;m Sam, and I&#8217;m <a
href="http://sam2007.zoy.org/fanart/serioussam.jpeg">serious</a>. </p>

<h2> Why I am running </h2>

<p> I have been a Debian developer since the year 2000. Prior to that, I was a
happy user since around 1996. Having 150 highly qualified developers working
together on the biggest Linux distribution out there sure was impressive,
and I have always admired both the project for its noble goals and the
distribution for its technical excellence. It was an honour and a challenge
to become part of that project and it helped me become better at programming,
communicating, working in teams and even speaking English. </p>

<p> At about the same time, in 1998, I started helping on a small project
called <a href="http://www.videolan.org">VideoLAN</a>. Within that project
I quickly evolved from the shy but enthusiast newcomer to the talented
contributor. As I gathered knowledge about the codebase and respect from other
developers, I became omnipresent and started controlling what others were
doing, by mentoring them or by making enlightened project-wide decisions.
I was naturally overwhelmed with work and had to manage my priorities,
dismissing less urgent stuff and locking tasks because I did not trust others
to complete them in the perfect way I expected. Several contributors left in
frustration and today I believe that despite VideoLAN&#8217;s quality and
popularity it would be even greater today had I not prevented developers from
working freely. </p>

<p> This is a personal story but certainly not an isolated one. History
of other projects must not be ignored: egcs (though we now call it
gcc) overtook the FSF control freaks&#8217; suffocating gcc, X.org
quickly replaced XFree86 after everyone got fed up with the core
team&#8217;s control freaks. And I foresee the same fate for the glibc if
<a href="http://sourceware.org/bugzilla/show_bug.cgi?id=3992">Ulrich</a> <a
href="http://sourceware.org/bugzilla/show_bug.cgi?id=4028">Drepper</a> remains
in charge of everything. </p>

<p> I believe a similar thing is happening to Debian. I see the enthusiasm
and I see the conservatism and I see the overwhelmed control freaks and I
see the frustration. I understand both points of view but I also think the
confrontation is hurting the project badly. And I am running for DPL mostly
because I love Debian and I want to change it before it&#8217;s too late and
something else rises from Debian&#8217;s ashes (and some people say it has
already happened). </p>

<h2> My vision for Debian </h2>

<p> Debian is afraid to change too fast. We have a history of being good,
innovative and popular, but it&#8217;s a good idea to scratch our itches from
time to time. We are not alone and just saying &#8220;Debian will always be
the best&#8221; does not make it true. </p>

<h3> Large, dynamic, good: pick only two? </h3>

<p> I don&#8217;t think so. I believe we can have the three of them, both
in terms of people and of products. The one we&#8217;re currently slowly
dropping is dynamism, and I want to bring that back without impacting on the
other factors. It is challenging, it is hardly a one-man task, and it would
be dishonest to pledge that others will do what I suggest. But even if I
can&#8217;t make you do it, I sure hope I can make you want to do it. </p>

<!-- this is a separator -->

<h1> My goals </h1>

<!-- this is a separator -->

<h2> Make Debian fun again </h2>

<p> Admit it, we have become a bunch of old farts who have a lot less
fun than before. I find it hard to have as much fun working on Debian
when there is so much frustration. </p>

<p> There are many ways to reduce the frustration: </p>

<ul>
  <li> get things done </li>
  <li> get things done faster </li>
  <li> give information about things that are done </li>
  <li> give information about things that aren&#8217;t done </li>
</ul>

<h3> More teams </h3>

<p> Team work is good. It makes you communicate. The &#8220;Uploaders:&#8221;
field is one of the best things that happened to Debian&#8217;s organisation.
It is truly fucking brilliant. Of course it allows several people to work
on the same package, but it also helps reduce the notion that packages are
&#8220;owned&#8221; and it <i>makes</i> us create teams. </p>

<p> I want to encourage co-maintenance by making it the norm, not the
exception, by having NM candidates join an existing team instead of adding
new packages to the archive, by trying to have at least one backup uploader
for each &#8220;Priority: standard&#8221; package, by having a policy of
light highjacking (forced co-maintenance) of neglected (<i>eg.</i> unanswered
old bugs, unapplied patches) packages, including for NM candidates. No more
&#8220;<i>I&#8217;ve been busy with real life for the last six months but
don&#8217;t you dare touch my package, I promise I will take care of its bugs
within the next month</i>&#8221;. </p>

<h3> Bigger teams </h3>

<p> I believe having bigger teams is amongst the solutions to the high latency
problem some of our core teams have. I want to be able to appoint additional,
voluntary assistants to those of our core teams (DSA, FTP-master, buildd
admins, DAM) that appear to need it. I know some of them already have, but for
so long a time that you may wonder why they are still assistants. </p>

<p> After a reasonable period (say, 3 months) I want these assistants to
be either approved by the team as full members or rejected with proper
justification (<i>eg.</i> inactivity, incompetence, important human
relationship issues). </p>

<p> Ideally, these assistants should be co-opted. There is however, for
historical reasons, an important concentration of powers amongst a very small
number of individuals. I have every reason to believe that it makes some of
the work more efficient, but it also has drawbacks: </p>

<ul>
  <li> it is a cabal </li>
  <li> it does not encourage public communication </li>
</ul>

<p> All this adds to the frustration. I would like, in the long term, these
teams to have as few common members as possible, with inactive members
(<i>eg.</i> buildd admins that do not run a build daemon) being demoted to
assistants. </p>

<p> I know it is hard to handle newcomers. They need training and help, and
all the training and help is time and energy that could have been used doing
real work instead. But many people can learn by just watching, and since some
current members of the teams appear to be effectively just watching, there
should be no problem adding volunteers to the team. </p>

<h3> Small projects </h3>

<p> I like small projects. Small projects are fun. Small projects take less
time, and by the time we finish a big 6-month project we can run a dozen
2-week projects, and if someone gets bored by a small project, they can just
start another one and not waste 6 months of work. </p>

<h3> Real project management </h3>

<p> We have trouble managing big projects. We struggle to release because
releasing is a huge project and we don&#8217;t know how to manage a huge
project (or just don&#8217;t apply what we know). We eventually succeed, but
I would not exactly call what we do &#8220;project management&#8221;. Being
volunteers, not all rules of project management apply, but it would be foolish
to ignore all of them. </p>

<p> Proper reporting is part of these rules. It not only helps the current
project by making communication better, but it also helps future projects
learn from our schedule, missed deadlines and the reasons for them. Sadly, I
don&#8217;t know how to get proper reporting without making it a mandatory
condition for staying at the appointed position. I have seen many people
playing dead then suddenly reacting to public blame. But I&#8217;m willing to
consider more constructive alternatives. </p>

<p> Reporting is not mere annoying process nitpicking, it&#8217;s also
fulfilling and useful. Other projects such as OpenSolaris have <a
href="http://www.opensolaris.org/jive/message.jspa?messageID=24416">seen
a need</a> for it and are <a
href="http://www.opensolaris.org/jive/message.jspa?messageID=25200">already
doing it</a>. </p>

<h3> &#8220;We won&#8217;t hide problems&#8221;: it&#8217;s not just for the
BTS </h3>

<p> We currently have issues that we do not talk about publicly. We announce
new developers, yet we don&#8217;t announce people who leave or take long
breaks, even when they are key people. I do not think there is a valid reason
for that as long as we do not disclose their reasons. </p>

<p> We are also afraid of saying we are late on schedule or missing manpower.
I&#8217;d prefer we admit &#8220;at the current rate, we&#8217;re going to
miss the deadline by 2 months&#8221; 4 months before the deadline so as to
kick our asses into working more or reconsider priorities, rather than just
say &#8220;nothing too dramatic&#8221; and watch the deadline pass. </p>

<h3> New people </h3>

<p> An ill-effect of our high quality requirements for new maintainers is
that we end up with people who are highly skilled in package maintenance,
whose energy would thus be wasted not actually working on packages, while
there is equally important work to be done. I want translators, documentation
writers, graphists etc. to be Debian developers, too. We want excellence, but
our recruiting process is only about package maintenance excellence and Debian
is not only about that. </p>

<p> To achieve this I want to lower the threshold for becoming a Debian
developer, while not giving immediate upload rights and keeping the
present requirements for obtaining them. The FTP-masters have recently <a
href="http://lists.debian.org/debian-devel/2007/01/msg00760.html">proved
it</a> to be trivial to add per-developer upload restrictions to dak, so this
should be really easy to implement. </p>

<p> I would also like the mentorees&#8217; work to be more visible to our
users and I am open to ideas on how to achieve that. For instance, just
like we have an experimental section for experimental software, we might
have a &#8220;mentors&#8221; or &#8220;untrusted&#8221; section to which NM
applicants would get upload rights after a while and some trust requirements
(such as a minimal number of advocates). This section would not be autobuilt
or signed, and packages would transition to unstable once a sponsor has
approved and signed them. </p>

<h3> New toys </h3>

<p> Debian has money. Last time someone wanted to use that money for
something, we disagreed, and he found money somewhere else. So we
still have that money, and I would like to use it at least to fix our
broken hardware. I cannot believe this is in a DPL platform, but <a
href="http://escher.debian.org/">escher</a> has been down for ages, developers
do not have access to an alpha machine, and we have not even tried to fix that
problem with money. </p>

<h3> New parties </h3>

<p> Speaking of money, one thing that requires lots of it is meetings. IRC
meetings are not enough for some tasks, and isolating people in a remote place
to work together on nothing else than their Debian project has proven to work
very well. Though I am getting scared by the escalating luxury of the DebConf
accomodations, I believe we can and should afford even more meetings to take
place. There are local structures in many countries (Extremadura in Spain,
Cetril in France) that can take care of the logistics. <p>

<p> There was a <a href="http://lists.debian.org/debian-devel-announce/2007/02/msg00005.html">recent
announce</a> that I find quite perfect. Should the decision to carry on with
this initiative after a few months be mine, I&#8217;d gladly agree to it. I
would prefer a full report rather than a &#8220;brief summary of what went
on&#8221;, but maybe that&#8217;s what&#8217;s already expected and the
wording is just inaccurate. </p>

<!-- this is a separator -->

<h2> Make Debian sexy again </h2>

<p> Admit it, Debian could be sexier. Currently, Debian rhymes with epicurean,
octogenarian and caveman. Even the <a href="http://www.freebsd.org/">FreeBSD
website</a> is sexier than <a href="http://www.debian.org/">ours</a>, how can
we expect to attract users? Have you seen how the website renders on Internet
Explorer? </p>

<p> We lost countless users to Ubuntu. Admittedly, Ubuntu drew a lot of its
users from other distributions and even from Windows. But there is no reason
for Debian to be simply &#8220;the distribution upon which Debian-based
distributions are based&#8221;, we can also get new users by being more
appealing. </p>

<h3> A sexier website, a sexier BTS </h3>

<p> There are plenty of talented web designers out there who definitely
would want to help design a website that looks like it was updated at least
once in the 21st century. At least a few of them consider fame a sufficient
reward, hence the only thing to do is to say we&#8217;re interested in a new
design. We also need a more dynamic website, that does not for instance have
a pathetically short list of 10 &#8220;news&#8221; items a year. There are
other newsworthy things to tell our users on the front page, we just need web
maintainers to add them. With my plan of having more developers who do not
focus on packaging, we will have more than enough people to do the work. </p>

<p> Our bug tracking system is ugly and hardly usable. If
you don&#8217;t think so, you probably have never been to the <a
href="http://bugs.debian.org/cgi-bin/pkgreport.cgi?pkg=wnpp;dist=unstable">WNPP
pseudo package</a>. I am sick of hearing that our BTS is better than
Bugzilla <i>because</i> Bugzilla does not have an e-mail interface as an
excuse to hide the fact that our BTS is uglier than Bugzilla and does not let
you perform simple tasks using the web interface. </p>

<p> Though I&#8217;d really like a web interface to our BTS,
very minor additions can be done very rapidly, for instance
by having artists work on meaningful icons for bug tags (<a
href="http://sam2007.zoy.org/bts-icons-test.html">mockup here</a>). </p>

<p> There are very useful services around, such as <a
href="http://www.buildd.net/">http://www.buildd.net/</a>, <a
href="http://bts.turmzimmer.net/">http://bts.turmzimmer.net/</a> or <a
href="http://bjorn.haxx.se/debian/">http://bjorn.haxx.se/debian/</a>. I
cannot understand why they are not Debian services. One may see them as
simple external services, I call them NMUs on our infrastructure that
should be acknowledged and merged back. And if we lack the computing
power, I have explained that we have money to fix this. There is also <a
href="http://www.backports.org/">http://www.backports.org/</a> that is
an impressive service but that would be tricky to integrate into Debian,
especially because of security updates, but we can at least try to make
transitions from it to testing and unstable smoother. </p>

<h3> A sexier distribution </h3>

<p> The distribution has become better and better in terms of user seduction.
Having artists work on icons for our packages would improve that even more, as
would translators working on <tt>.desktop</tt> files. </p>

<p> Package descriptions are what the user sees before even installing the
software. Translating them (by distributing <tt>Packages-xx.gz</tt> files)
would also benefit to our users. </p>

<h3> Release Etch <i>and</i> Lenny! </h3>

<p> The size of our distribution is both a pride and a curse. Etch is about to
be released and we managed to reduce the time between releases with a stricter
process, but we&#8217;re still not performing very well. As free software gets
more users, more developers and more funding, projects are released more often
and instead of following the trend we&#8217;re releasing less often. </p>

<p> It is high time we implemented one of the more aggressive <a
href="http://wiki.debian.org/ReleaseProposals">strategies being discussed</a>
to get more releases with more up-to-date software, starting with Lenny. I
have my personal favourites, but I do not think it is up to the DPL to decide
which way to go. I will just make sure the people who want to make it possible
get the tools and the power to do it. </p>

<!-- this is a separator -->

<h2> Make Debian the best again </h2>

<p> Debian is great, and there is nothing like Debian. But we&#8217;re often
too proud to admit we can do better or that others are doing better than us.
</p>

<h3> Take back from other distributions </h3>

<p> There is information that can be automatically fetched from other
distributions, even from non-Linux ones such as the BSD projects. Of course
the dedicated Debian maintainer is well aware of it, and already communicates
with upstream and maintainers from other distributions, but a way to monitor
which patches are applied upstream and which patches are shared across
distributions would be nice. Upstream and other distributions could benefit
from a tool that monitors: </p>

<ul>
  <li> patches, obviously </li>
  <li> translations </li>
  <li> <tt>.desktop</tt> files </li>
  <li> manual pages </li>
  <li> icons </li>
</ul>

<p> Ubuntu is &#8220;<a
href="http://lists.opensuse.org/opensuse/2006-11/msg03788.html">not
evil</a>&#8221; only in a Google kind of way, we won&#8217;t get patches from
them out of pure philanthropy. But we can learn from their processes as much
as we can from their patches, so let&#8217;s just get them. Another excellent
distribution we should keep a close eye on is Gentoo. Despite all the
criticism that can be done, there is also much to learn. They have been faster
than us at adding new architectures and kernels to their core infrastructure,
for instance. </p>

<h3> Remain the universal operating system </h3>

<p> I would love to see alternate kernel projects benefit from the rest of
our infrastructure (especially buildd.d.o) far sooner in the porting process.
We&#8217;re right in having requirements for these new architectures to be
included, but ignored portability bugs are common, as are regressions, in
which case the maintainer is not necessarily to blame if build logs are not
available. The inclusion of amd64 suffered from pathetic delays that I do not
want to happen again. </p>

<p> Another great addition to the distribution would be multiarch support. It
is underway, and if everyone works together we can have it in Lenny. </p>

<p> I am also interested in pushing the dpkg-cross approach in order
to cross-build the distribution for targets that cannot run a build
infrastructure (such as very specific CPUs on embedded platforms). </p>

<p> As far as organisation is concerned, I think at least one porter per
architecture should have access to wanna-build. </p>

<h3> Make dak help us, too </h3>

<p> We could use some improvements to the archive management software. For
instance, avoid unnecessary NEW waits (such as simple soname bumps) by
allowing new binary packages for a source package that was already in the
archive. NEW processing latency should not affect the everyday maintainer, and
multiple-binary abuse can be dealt with with the BTS. </p>

<p> Lintian could also be integrated with dak to automatically reject uploads
with serious errors (<tt>binary-in-etc</tt>, <tt>missing-copyright</tt>,
<tt>shared-lib-without-dependency-information</tt>...). </p>

<h3> Debugging Debian </h3>

<p> A debugging infrastructure is nothing new, many developers have <a
href="http://debconf6.debconf.org/comas/general/proposals/64">talked about
it</a> and worked on it. There is still much work to do and I would like to
make it a priority: transparently generate <tt>.ddeb</tt> debug packages (for
instance during the <tt>dh_strip</tt> or equivalent step), integrate them with
dak, integrate them with apt, integrate them with higher level infrastructures
such as the GNOME and KDE <tt>SIGSEGV</tt> handlers. </p>

<p> I would also like to make build logs mandatory. There is currently no
way to know how exactly the packages we upload were built, and we could
easily hook to dpkg-buildpackage to log the build and attach that log to the
<tt>.changes</tt>, then later make that mandatory. <tt>dh_buildinfo</tt> is
another underexploited initiative. </p>

<h3> Empower transverse teams </h3>

<p> Our transverse teams (especially the translators) are already NMUing
packages during release periods. Let&#8217;s allow them to do this
constantly, with reasonable rules. Under these rules I&#8217;d like <a
href="http://wiki.debian.org/LowThresholdNmu">LowThresholdNmu</a> to
eventually become opt-out rather than opt-in (currently around 150 people
subscribed, who probably are amongst the most active maintainers). </p>

<p> The QA team looks like they&#8217;re the garbagemen of the archive, doing
QA uploads of orphaned packages. I want it to become completely natural to
see QA uploads by anyone for any packages that have unaddressed old bugs
with patches, for instance. To avoid abuse, one could make the DELAYED queue
mandatory for QA NMUs. </p>

<p> Ubuntu manages transitions far better than us because no one owns
packages. By having some sort of <i>transition strike teams</i>, or more
generic squads blessed by the release managers, I think we can achieve the
same result. These teams (ideally all maintainers, of course, with anti-abuse
protection) would also have restricted wanna-build access for fast requeueing.
</p>

<!-- this is a separator -->

<h2> The End </h2>

<p> That was it. Thank you for reading. </p>

<h1> Rbuttals</h1>

<h2> Wouter Verhelst (yoe) </h2>

<p> Wouter's platform is a platform of submission and indecision. It is
hard to comment on what he will do since he does not know yet and does
not believe the DPL has the power to do much anyway, and even his few
examples of things he will not do don't say much (no radical changes,
but no complete standstill?). </p>

<p> I'd have loved some substance to comment on. Currently all I can say is
that other candidates, including me, propose concrete things that Wouter may
or may not attempt to do as well, but so far I see neither the acknowledgement
of many problems we have nor a real desire to change things. </p>

<h2> Aigars Mahinovs (aigarius) </h2>

<p> Aigars mostly suggests technical decisions that have nothing to do with
the position of DPL. Some of these suggestions are radical changes to our
way of working (the "permanent trunk") which I fear will mean a total loss
of identity, will cause users to drop Debian and developers to go away. The
suggestion to drop our trademarks is consistent with this loss of identity.
</p>

<p> The old maintainer process seems worthy of consideration but I believe
developers unable to keep up with the policy or the overall required technical
skills will either leave by themselves or be removed by the MIA process
anyway. </p>

<h2> Gustavo Franco (stratus) </h2>

<p> There is some lack of clarity and rationale here and there (what is the
CTTE renewal good for, who is going to implement all the technical stuff) and
a clearly overestimated workforce. Lots of "I will" everywhere, which I do not
find realistic for a DPL position. </p>

<p> However Gustavo sees the same problems as I do, and the overlap between
my platform and his is amazing. I'd happily work with him if given the
opportunity. <i>Boa sorte!</i> </p>

<h2> Sven Luther (luther) </h2>

<p> Given that he has not answered the questions on -vote, I do not think Sven
plans to carry on with the DPL election. </p>

<h2> Sam Hocevar (sho) </h2>

<p> This guy rocks. My vote goes to him. </p>

<h2> Steve McIntyre (93sam) </h2>

<p> Having been the DPL's shadow, Steve deserves a share of the criticism
addressed to Anthony, but his platform is clearly focused on the future rather
than the past. </p>

<p> Like me, he addresses our problem of communication by suggesting
reporting, but he does not explain how one can ensure that the reports will be
done. Like me, he promotes welcoming newcomers into teams, but he does so only
from an NM/packaging team point of view and does not mention our core teams.
</p>

<p> Steve's platform points at many real problems that we have and that I
agree with. In fact I agree with most of what is stated. There are however not
many suggestions on how to solve them. </p>

<h2> Rapha&euml;l Hertzog (hertzog) </h2>

<p> I am not fond of Rapha&euml;l's board idea. It is of course better to
have more people to do the work, but I fear that decision making may suffer
from the additional procedure, especially in terms of delay. </p>

<p> Rapha&euml;l explains how DSA never approved nor blocked his working on
Alioth. I am a bit wary that his idea of empowering people to do stuff might
mean encouraging them to do it alone or working around other teams, instead of
cooperating. </p>

<p> Of course the eventual "platform" will be the board's. While there is no
one in the board that I wouldn't enjoy to work with, I would probably feel
uneasy having to discuss new ideas instead of being in the more reassuring
position of having been elected with a platform that had concrete proposals.
</p>

<h2> Anthony Towns (ajt) </h2>

<p> Judging from his platform, Anthony seems to be seeking re-election
based on his 2006-2007 term. All about the past, not much about the
future. The one remarkable thing in his review is his involvement with
SPI (as much as if I were elected and looking for an SPI representative
I'd know whom to propose). </p>

<p> Also, looking for the word "communication" in his platform does not make
it look like he acknowledges or plans to address the communication problems
that have been raised throughout his term. While he admits "recruiting" did
not go as well as planned, he makes no plans of making that better, especially
on the core teams side (despite pledging last year to encourage assistant
roles). All in all, I do not believe Anthony has made Debian a much better
place for developers. </p>

<h2> Simon Richter (sjr) </h2>

<p> Simon focuses on the reasons for our trouble to release and the
Dunc-Tank controversy, yet does not make suggestions on how to alleviate
them. Actually I have no idea of what he will do if elected. </p>

