<define-tag pagetitle>General Resolution: Handling source-less firmware in the Linux kernel</define-tag>
<define-tag status>P</define-tag>
#use wml::debian::template title="<pagetitle>" BARETITLE="true" NOHEADER="true"
#use wml::debian::toc
#use wml::debian::votebar

    <h1><pagetitle></h1>
    <toc-display/>
    <vtimeline />
    <table class="vote">
      <tr>
        <th>Proposal and amendment</th>
        <td>Tuesday,  22<sup>nd</sup> August, 2006</td>
        <td>Thursday, 31<sup>st</sup> August  2006</td>
      </tr>
      <tr>
        <th>Discussion Period:</th>
        <td>Friday,  1<sup>st</sup> September  2006</td>
        <td>&nbsp;</td>
      </tr>
      <tr>
        <th>Voting Period</th>
        <td>&nbsp;</td>
        <td>&nbsp;</td>
      </tr>
    </table
>
    <vproposer />
    <p> Don Armstrong
      [<a href="mailto:don@debian.org">don@debian.org</a>]
    </p>
    <vseconds />
    <ol>
      <li> René van Bevern
        [<a href="mailto:rvb@debian.org">rvb@debian.org</a>]
      </li>
      <li> Frank Küster
        [<a href="mailto:frank@debian.org">frank@debian.org</a>]
      </li>
      <li> Pierre Habouzit
        [<a href="mailto:madcoder@debian.org">madcoder@debian.org</a>]
      </li>
      <li> Alexander Wirt
        [<a href="mailto:formorer@debian.org">formorer@debian.org</a>]
      </li>
      <li> Kari Pahula
        [<a href="mailto:kaol@debian.org">kaol@debian.org</a>]
      </li>
      <li> Anibal Monsalve Salazar
        [<a href="mailto:anibal@debian.org">anibal@debian.org</a>]
      </li>
    </ol>

    <vtext />
    <p> Choice 1.
      The actual text of the resolution is as follows:
    </p>
    <h2>DFSG #2 applies to all programmatic works</h2>
    <pre> 
I'd like to propose the following option to the current GR process.

As I will (starting late sunday PDT) be away for a week and a few days
at Burning Man,[i] I will be unable to appropriately respond to
corrections and suggested amendments during that time. However, I will
do so immediately at my return.

======================================================================

The Free Software movement is about enabling users to modify the works
that they use on their computer; about giving users the same
information that copyright holders and upstream developers have. As
such, a critical part of the Free Software movement is the
availability of source (that is, the form of the work that a copyright
holder or developer would use to actually modify the work) to users.
This makes sure that users are not held hostage by the whims (or lack
of interest or financial incentive) of upstreams and copyright
holders.

Different types of works have different forms of source. For some
works, the preferred form for modification may not actually be
digitally transferable.[1] For others, the form that originally was
preferred may have been destroyed at some point in time, and is no
longer available to anyone. However, to the greatest extent
possible,[2] the availability of source code to users is a critical
aspect of having the freedom to modify the software that is running
upon ones computer.

Recognizing this, the Debian Project:

  A. Reaffirms that programmatic works distributed in the Debian
     system (IE, in main) must be 100% Free Software, regardless of
     whether the work is designed to run on the CPU, a subsidiary
     processing unit, or by some other form of execution. That is,
     works must include the form that the copyright holder or upstream
     developer would actually use for modification.

  B. Strongly recommends that all non-programmatic works distribute
     the form that the copyright holder or upstream developer would
     actually use for modification. Such forms need not be distributed
     in the orig.tar.gz (unless required by license) but should be
     made available on upstream websites and/or using Debian project
     resources.

  C. Reaffirms its continued support of users whose hardware (or
     software) requires works which are not freely licensed or whose
     source is not available by making such works available in
     non-free and providing project resources to the extent that
     Debian is capable of doing so.

  D. Requests that vendors of hardware, even those whose firmware is
     not loaded by the operating system, provide the prefered form for
     modification so that purchasers of their hardware are can
     exercise their freedom to modify the functioning of their
     hardware.

1: Consider film negatives, or magnetic tape in the case of audio
   recordings.

2: Here it must be emphasized that we refer to "technically possible"
   or "possible for some party" as opposed to "legally possible for
   Debian". We also assume digital distribution, and do not attempt to
   require the distribution of physical objects.

=======================================================================

Obvious points for discussion:

1. I would really like to be able to commit to some form of
   installation support for users who need to be able to use non-free
   firmware to install their system; some more work is needed in d-i
   land, though to make sure that this is separated out and that it's
   trivial to have a Free system, and know that what you're
   installing/using/distributing is Free Software.

2. Distributing the huge source forms for non-programmatic works is
   going to be a problem. I don't think they're needed in the
   orig.tar.gz, because that would needlessly bloat the archive, and
   it's probably not required unless the works are copylefted.
   However, we should make an effort to encourage upstreams to make
   them available and likewise make them available to our users. [Even
   if it's just in people.debian.org/~you/ or similar and mentioned in
   the copyright file, it'd be a good step.]

3. If there is substantial objection to D, I will probably remove it;
   however firmware, whether we happen to distribute it or not, is a
   hazard to user's freedom to modify the functioning of their
   computers.

4. Finally, if in the context of the release of etch, we need to
   compromise our ideals and accept programmatic works without source,
   we should do so by specifically exempting them from DFSG 2 for the
   purpose of releasing etch by a GR which needs to meet the 3:1
   requirement instead of attempting to define ourselves into such a
   position, especially when source code is clearly a desirable thing
   to have from our users and our perspective.

Don Armstrong
    </pre>
    <vamendmentproposera />
    <p> Frederik Schueler
      [<a href="mailto:fs@debian.org">fs@debian.org</a>]
    </p>

    <vamendmentsecondsa />
    <ol>
      <li> Daniel Ruoso
        [<a href="mailto:ruoso@debian.org">ruoso@debian.org</a>]
      </li>
      <li> Sven Luther
        [<a href="mailto:luther@debian.org">luther@debian.org</a>]
      </li>
      <li> martin f krafft
        [<a href="mailto:madduck@debian.org">madduck@debian.org</a>]
      </li>
      <li> Enrico Zini
        [<a href="mailto:enrico@debian.org">enrico@debian.org</a>]
      </li>
      <li> Bas Zoetekouw
        [<a href="mailto:bas@debian.org">bas@debian.org</a>]
      </li>
      <li> Bastian Blank
        [<a href="mailto:waldi@debian.org">waldi@debian.org</a>]
      </li>
      <li> Sylvain Le Gall
        [<a href="mailto:gildor@debian.org">gildor@debian.org</a>]
      </li>
      <li> Guilherme de S. Pastore
        [<a href="mailto:gpastore@debian.org">gpastore@debian.org</a>]
      </li>
    </ol>

    <vamendmenttexta />
    <p> Choice 2.
      The actual text of the resolution is as follows.
    </p>
    <h2>Release Etch even with kernel freeware issues</h2>
    <pre>
Overview:

The Linux kernel source contains device drivers that ship with firmware
files provided by the hardware manufacturer. They are uploaded during 
the driver initialization to the corresponding hardware device.

Some of these binary image files are provided as a hexdump of register 
bank settings, others consist in fact of compiled binary code which is 
executed on the hardware device. 

Any device driver in the Linux kernel is freely available in source 
format and licensed under the GPL2. For many device drivers with
attached firmware, the firmware image is freely distributable along
with the corresponding driver. The most common source format for
firmwares is the hexdump char array. It is almost impossible to 
distinguish between register dumps and binary code without asking the 
device manufacturer who provided the firmware.

Removing every firmware which is distributed as hexdump only will
cripple the kernel to an extent where it becomes unusable for most of 
our users, because popular network and scsi devices are among the 
drivers in question. Without these drivers, the user's system might not
be installable at all.

The current situation:

We achieved a lot of progress compared with the situation in 2.6.8 (the
kernel that shipped with sarge). We were able to convince upstream that 
a firmware loader is a good thing, and that firmware and kernel code 
should be separated. This firmware loader was added in 2.6.13, and 
meanwhile, more than 40 drivers have been converted to the new 
infrastructure. However, this is not yet finished, and some important 
drivers still use the old method. There will be a day where we can drop
the remaining legacy, but we are not there yet.

Also, though the firmware loader allows us to put the firmware where it
belongs to (main or non-free, depending on the case), the installer can
as of now only take udebs from main. Fixing this is not too hard, but 
it is doubtful whether we can fix this in time for etch, and we do not 
want to depend on that (and even then, we still would have non-free 
firmware, see above). But since there is lots of hardware which needs 
firmware for correct operation, the installer would not work for 
mainstream hardware otherwise.

There are two ways how to deal with it:
1. Accept these issues as transitional issues for now; or
2. Delay etch for some serious time.

In our social contract, we promised that the users and the free software
community are our priorities. We firmly believe that our users profit
very much from releasing etch in time, and that this is important enough
that we can accept the transitional status with having a few firmware
images left in main that should belong somewhere else.  Of course,
everyone who wants to make the number of such firmware images as small
as possible is welcome to help converting old firmware loaders to the
new standard, and working on the Debian installer. We are happy if this
issues become smaller or even vanishes, but we do not want this to be a 
release blocker.

So, we propose this GR:

1. We affirm that our Priorities are our users and the free software
community (Social Contract #4);
2. We acknowledge that there is a lot of progress in the kernel firmware
issue; however, it is not yet finally sorted out;
3. We give priority to the timely release of Etch over sorting every bit
out; for this reason, we will deliver firmware in udebs as long as it is
necessary for installation (like all udebs), and firmware included in
the kernel itself as part of Debian Etch, without further conditions.

We want to emphasize that the success of this GR is considered as
necessary by the kernel and release team for successfully delivering etch 
in time (and to allow us a successful planning of that).

on behalf of the kernel- and release team
Frederik Schueler

    </pre>

    <vamendmentproposerb />
    <p> Josselin Mouette
      [<a href="mailto:joss@debian.org">joss@debian.org</a>]
    </p>

    <vamendmentsecondsb />
    <ol>
      <li> Pierre Habouzit
        [<a href="mailto:madcoder@debian.org">madcoder@debian.org</a>]
      </li>
      <li> Julien BLACHE
        [<a href="mailto:jblache@debian.org">jblache@debian.org</a>]
      </li>
      <li> Aurelien Jarno
        [<a href="mailto:aurel32@debian.org">aurel32@debian.org</a>]
      </li>
      <li> Julien Danjou
        [<a href="mailto:acid@debian.org">acid@debian.org</a>]
      </li>
      <li> Clément Stenac
        [<a href="mailto:zorglub@debian.org">zorglub@debian.org</a>]
      </li>
    </ol>

    <vamendmenttextb />
    <p> Choice 3.
      The actual text of the resolution is as follows.
    </p>
    <h2>Special exception to DFSG #2 for firmware</h2>
    <h3>THE DEBIAN PROJECT</h3>
    <pre>
I propose the following amendment to Steve's proposal.

&gt; THE DEBIAN PROJECT therefore,
&gt; 
&gt;         1. reaffirms its dedication to providing a 100% free system to our
&gt; users according to our Social Contract and the DFSG; and
&gt; 
&gt;         2. encourages authors of all works to make those works available not
&gt; only under licenses that permit modification, but also in forms that make
&gt; such modifications practical; and
&gt; 
&gt;         3. supports the decision of the Release Team to require works such as
&gt; images, video, and fonts to be licensed in compliance with the DFSG without
&gt; requiring source code for these works under DFSG #2; and

	4. determines that as a special exception to DFSG #2, the source code
for device firmwares contained in the kernel packages will not be
required as long as there are no other technical means to install and
run the Debian system on these devices.

Rationale: most of us want to release etch ASAP, and most of us want to
remove the firmwares from the kernel ASAP. This is a way that shouldn't
stop the ongoing work on both of these issues. The wording makes it
clear that as soon as the kernel and d-i are able to use split out
firmwares, the migration will have to be done. This way we won't
discourage the work from Nathanael Nerode and other people who worked
hard so far to remove the non-free blobs, and we won't hold etch
development because of that issue.
    </pre>

    <vquorum />
     <p>
        With <a href="vote_004.quorum.log">1000 developers</a>,
        we have:
     </p>
    <pre>
 Current Developer Count = 1000
 Q ( sqrt(#devel) / 2 ) = 15.8113883008419
 K min(5, Q )           = 5
 Quorum  (3 x Q )       = 47.4341649025257
    </pre>


    <vstatistics />
    <p>
      For this GR, as always 
      <a id="suppl_004_stats">statistics</a>
      shall be gathered about ballots received and acknowledgements
      sent periodically during the voting period.  Additionally, the
      list of
      <a id="vote_004_voters.txt">voters</a>
      would be made publicly available. Also, the
      <a id="vote_004_tally.txt">tally sheet</a>
      may also be viewed after to voting is done (Note that
      while the vote is in progress it is a dummy tally sheet).
    </p>

    <vmajorityreq />
    <p>
      All the amendments need simple majority
    </p>

    <voutcome />
    <h3>The outcome</h3>
    <p>To Be determined</p>


    <p>
      Debian uses the Condorcet method for votes. 
      Simplistically, plain Condorcets method
      can be stated like so : <br />
      <q>Consider all possible two-way races between candidates.
        The Condorcet winner, if there is one, is the one
        candidate who can beat each other candidate in a two-way
        race with that candidate.</q>
      The problem is that in complex elections, there may well be a
      circular relations ship in which A beats B, B beats C, and C
      beats A. Most of the variations on Condorcet use various means
      of resolving the tie. See <a
      href="http://en.wikipedia.org/wiki/Cloneproof_Schwartz_Sequential_Dropping">Cloneproof
      Schwartz Sequential Dropping</a> for details. Debian's variation
      is spelled out in the <a href="$(HOME)/devel/constitution">the
      constitution</a>, specifically, A.6.
    </p>
    <hrline>
      <address>
        <a href="mailto:srivasta@debian.org">Manoj Srivastava</a>
      </address>
