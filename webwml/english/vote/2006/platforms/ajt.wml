#use wml::debian::template title="Platform for Anthony Towns" BARETITLE="true" NOHEADER="true"
#include "$(ENGLISHDIR)/vote/style.inc"

<h2>Platform for Anthony Towns</h2>

<h3>If at first you don't succeed</h3>

<p>Last year when I ran for DPL, my reasoning was that a number of the things
I wanted to work on either required or would be much easier to do with
some sort of leadership cap. That's changed somewhat for two reasons:
first, I've had time to think of how I can do a number of those things
without needing the DPL beret, and also because I've since gained a
leadership hat in the form of a position on the technical committee.

<p>As a consequence, while I am running again, I'm doing so as much for
the opportunity to raise some ideas on what Debian should do over the
next year for debate, than to necessarily get the authority to work on
their implementation as DPL -- though of course, I'd be entirely happy
if that happened too :)

<p>For biographical detail, you might like to look at my <a
href="http://www.debian.org/vote/2005/platforms/ajt">platform
from last year</a>, or read through <a
href="http://azure.humbug.org.au/~aj/blog/">my blog</a>.

<h3>Vitality</h3>

<p>The most important thing that I think would benefit Debian is
increasing its tempo. We've been slow in a lot of things, from releasing,
to getting updates in, to processing applications from prospective
developers, to fixing bugs, to making decisons on policy questions, and
all sorts of other things. Even the DPL election process takes longer
to go from start to whoa than the last Australian Federal Election,
and this year we'll have two state elections run and complete entirely
within the election period.

<p>There are often good reaons for this, generally of the form "it's
more important to get it right than to do it fast", but that objection is
often used even when there's no actual contradiction between those goals.
And sometimes doing it fast *helps* you to do it right, by letting you
try out solutions and act on the feedback -- that is, the "release early,
release often" philosophy.

<p>I've been trying to help build this momentum by trying to help the
release team get an effective policy out of the Vancouver meeting;
by proposing a GR to get a decision on what we want to do about the
GFDL issue, which we've avoided making a decision about for years now;
and by trying to setup some policies so that there's regular activity by
the technical committee. It's not something anyone can do alone, though,
but I think developing an effective focus on getting to a good result
quickly will be a big help for the project.

<p>Some of the goals I hope to work towards in the coming year include
getting updates accepted into the archive more frequently than once a day,
having frequent beta releases of etch/testing that we can legitimately
call a release (benefiting from the ongoing work of the installer and
testing-security teams), and having reliably quick resolution of RC bugs
in unstable. None of those require, or even necessarily benefit from
magical DPL powers; but I think the project will benefit if whoever is
elected DPL takes that idea on board, and sets a good example at making
frequent and improvements to Debian.

<h3>Recruiting</h3>

<p>An important aspect of vitality is having new blood in the system
-- whether to allow old ideas to be reconsidered by fresh eyes, or
simply to provide more shoulders to bear increasing burdens. We've been
doing better at this, with resources such as alioth to help teams work
together, and more maintainers with experience working in teams whether
due to collaborating on sponsored uploads, on team maintained packages,
or getting together at conferences such as debconf to work on problems.

<p>I think there are a couple of questions we should be asking of
ourselves: if other members of Debian have to step aside, are there areas
I could step up to? And if I had to reduce my involvement in some area
of Debian, is there someone who could step up to take over that work?

<p>In many cases the answer to the second will limit the first -- many of
us are already spending a lot of our free time on Debian, so the only way
we could do more is by dropping something we already do, and if there's
no one who'll take over that work, we might not be able to do that.

<p>But on the positive side of the scale, this also means that by helping
fellow developers out in one area, you can free them up to spend more time
helping in another area where you might not have been able to contibute
directly. In economics, this is known as the principle of comparative
advantage: even by doing stuff that someone else is better at, you can
still create an overall win if that frees them to do things you could
never have done in the first place.

<p>Another interesting option is the idea of compulsory turnover --
that is that when you take on a role, you know you're going to hand it
over to someone else fairly soon. We're instituting that for the role of
technical committee chair, and the role of DPL is similarly constrained
thanks to the annual elections. Extending that principle more broadly
in order to encourage and endorse new ideas and distributed authority
is probably one we could look into, though it does have its own drawbacks.

<p>I think having the DPL and others actively and visibly recruit people on
an ongoing basis would be useful for the project, both as a demonstration
that this is a good thing to do, and as an example of how to do it
successfully.

<h3>Direction</h3>

<p>I tend to think it's a little silly that we only really deliberate
on these topics around DPL elections. I think it would be a good idea
to decouple that more so that we can think about these things when they
come up, and more importantly so people who don't want to be DPL can
propose good ideas too.

<p>Some of the ways this could be improved include having the DPL
raise topics for discussion, and help guide them through to conclusion,
or having the DPL invite other people to raise topics they think are
important to have discussed, or having the technical committee or
maintainers of key infrastructure or packages do the same thing.

<h3>Last Year's Goals</h3>

<p>I think it's probably worthwhile doing a quick review of my goals
from last year, and how they've gone.

<p>First, there was the issue of being courteous to each other on mailing
lists and elsewhere. There's been a few outcomes on that topic -- notably
the creation of a procedure for expelling developers, the banning of a
developer from posting to -devel-announce, and, closer to home for me,
the creation of the moderated channel #debian-tech, by Steve Langasek and
myself, and a cast of half a dozen or so. What I think that adds up to is
that as it turns out, we are able to set expectations about how we'll act
towards each other, and I'm hopeful that that means we'll start working
out what, exactly, those expectations are in various areas, and that as a
result we can be upfront about those expectations, and not leave ourselves
finding out about the boundaries only after they've been crossed.

<p>Another issue was that of "supporting delegates". As it turns out,
that's perhaps an overly limited description, since a number of roles,
including the security team and ftpmaster, might be better thought of
as "infrastructure maintainers" instead, which implies a different
relationship to the DPL. In any event, I've been trying to help with
that anyway, by being involved in the release team's work on setting
criteria for release architectures, in supporting the testing security
teams attempts to integrate with the rest of the project, in trying
to assist with communication for the arm porting machine, and in other
areas to a moderate degree of success.

<p>A related issue I raised, was trying to make our activities more
public. As well as trying to blog more actively on stuff as I'm doing it,
I've also tried to make a point of making logs available for discussions
in #debian-tech, and put a limit on how private our discussions are by
way of the declassification vote. I'm reasonably happy with how that's
gone so far, but I still think it'ss important, and that we can do a
lot more along these lines.

<p>I'm very pleased to have recently had the opportunity to join the
technical committee, and start trying some of the changes I'd thought
about there; obviously those are only just beginning, so we'll have to
see how they turn out.

<p>On the downside, I haven't done as much as I would have liked to in
the areas of letting users get more involved, or improving the global
quality of the distribution. The usertags and usercategories for the
bug tracking system are a vague gesture in the area, and the addition
of debtags to the Packages file might count for something, but there's a
lot more that can be done here.  Fortunately some of it is already being
taken up by others anyway, such as the automated testing efforts by Lars
Wirzenius (piuparts) and Ian Jackson (autodebtest, paid for by Canonical).

<h3>Gratuitous Song Parody</h3>

<p>To the tune of <cite>Can't By Me Love</cite> by The Beatles...

<pre>
    I'll give you an X with bling my friend, if it makes you feel alright.
    I'll promise anything my friend, if it makes you feel alright.
    'Cause I don't care too much for money, money can't buy me votes!

    I'll give you all I got to give if you say you'll vote for me.
    I may not have a lot to give, but what I got I'll give to thee.
    I don't care too much for money, money can't buy me votes!

    Can't buy me votes, everybody tells me so!
    Can't buy me votes, no no no, no!

    Say you don't need no compiz bling, and I'll be satisfied.
    Tell me that you'll give me the kind of thing, that money just can't buy.
    I don't care too much for money, money can't buy me votes!
</pre>

<p><b>Note:</b>

<p> compiz is a compositing manager for X that I'm led to believe should
    be available when Xorg 7.0 enters Debian; it lets you do cool stuff
    like MacOS X's Expose feature. Features like this are known in the
    Xorg technical community as "bling".

<p><b>Disclaimer:</b>

<p> You may be able to buy votes with money, and the author disclaims
    any responsibility for any opportunities lost by any candidate or
    advocate who bases any statemnet or action on any assertion above.
    Any opinions expressed in the above are undertaken under poetic
    license, and may or may not reflect the views of anyone living,
    dead or involved in free software. Poetic licenses may not comply
    with the DFSG.

<p> No animals were harmed in the making of this parody.

