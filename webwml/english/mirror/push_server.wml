#use wml::debian::template title="Setting up a push server"

<p>Setting up a push server consists of two basic tasks: setting up rsync
access (for normal, "pull" mirroring) and setting up ssh trigger mechanism
(for "pushing" the pull mirroring).

<p><small>(For more information on what a push server is, please read
<a href="push_mirroring">the explanation of push mirroring</a>.)</small>

<h2>Setting up rsync</h2>

<p>Install <code>rsync</code> 2.1.1 or greater. If your site is running
Debian, just install the latest
<a href="http://packages.debian.org/stable/net/rsync.html">rsync</a> package.

<p>Create <code>rsyncd.conf</code> file and put something similar to this
in it:

<pre>
uid = nobody
gid = nogroup
max connections = 25
syslog facility = daemon
socket options = SO_KEEPALIVE

[ftp]
  path = /org/ftp.debian.org/ftp
  comment = Debian FTP Archive (~20 GB)
  auth users = authorized_account1,authorized_account2,authorized_accountN
  read only = true
  secrets file = /etc/rsyncd/debian.secrets
[web.debian.org]
  path = /org/www.debian.org/debian.org
  comment = Debian Web Site (~400 MB)
  auth users = authorized_account1,authorized_account2,authorized_accountN
  read only = true
  secrets file = /etc/rsyncd/debian.secrets
</pre>

<p>Add an entry for each site you are pushing to in the
<code>/etc/rsyncd/debian.secrets</code> file:

<pre>
authorized_account1:a_password
authorized_account2:another_password
authorized_accountN:password
</pre>

<p>You have now given the downstream mirrors access to the archive on your
machine.

<p>You will probably want to start the rsync daemon from inetd. To do this,
you have to add rsync service in <code>/etc/services</code> file (if it
isn't already there), like this:

<pre>
rsync           873/tcp
</pre>

To enable the daemon from inetd, add the following to your
<code>/etc/inetd.conf</code> file:

<pre>
rsync      stream      tcp         nowait      root /usr/bin/rsync rsyncd --daemon
</pre>

(Remember to send inetd a HUP signal to tell it to reread its config file
after modifying the file.)

<h2>Setting up ssh trigger mechanism</h2>

<p>Create a new ssh key for the account that you use to mirror Debian. Make
sure you don't overwrite your original ssh key by using the -f option, for
example:

<pre>
ssh-keygen -f ~/.ssh/identity.pub.mysite
</pre>

<p>Make sure that this new key contains this at the beginning:

<pre>
no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty,command="~/websync &"
</pre>

<p>(replace "websync" with "ftpsync", or "ftpsync-non-US", or whatever's
the command to start the mirroring called)

<p>You need to set up a script that will contact the downstream mirrors.
Create a file called <code>signal</code>, containing this:

<protect>
<pre>
#!/bin/sh

# This script is called to signal the remote host that it is time to
# mirror the archive.

echo Signalling $1
ssh -o"BatchMode yes" -o"user $2" "$1" -i $HOME/.ssh/identity.pub.mysite sleep 1
</pre>
</protect>

<p>This script will login to a remote host using the special ssh key you
created above. The script itself will not do anything useful remotely, the
~/websync (or ~/ftpsync, or ~/ftpsync-non-US) command will be run from the
key.

<p>To actually signal the mirrors, you need to add <code>./signal
&lt;site&gt; &lt;username&gt;</code> lines at the end of either the
<code>websync</code> script, or if it's more convenient for you, in a new
script, and then run that script from <code>websync</code>.

<p>This new script, <code>runmirrors</code>, would contain something like
this:

<protect>
<pre>
#!/bin/sh

# This script is called by websync to signal the downstream mirrors.

./signal some.other.site archvsync
./signal and.another.site othersiteaccount
</pre>
</protect>

<p>Thus, as soon as your site is finished mirroring from the upstream site,
you will start pushing to those downstream from you.

<p>If you have any trouble with this, <a href="mailto:mirrors@debian.org">
contact us</a>.
