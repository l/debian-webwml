Hello, welcome to the intl/l10n part of the Debian web pages.
Its purpose is to make beautiful stats about the localization of Debian
packages.

===================
= Commented ls -R =
===================

data/ 
 data/synonyms
   There are a lot of typos in the 'section' fields of packages. This is a
    list of synonyms to fix most of them.
 data/(stable|freeze|testing|unstable)
   These are the plain text databases (stanza files) of the state of
     translations in each version of Debian.
   They are generated/modified by scripts/transmonitor-check, and used by
     all the other scripts.
   FIXME: for now, only unstable exists.
 data/langs
   Autogenerated file containing the list of all languages present in DB 
     (to avoid to parse the DB each time we need this list)

scripts/
 scripts/transmonitor-check 
   The (big) script to maintain the DBs in 'data/', that is, to check the
     current state of l10n in Debian
 scripts/utils.pl
   Some subs to read and write the DB file (used in all scripts, including
     transmonitor-check)
 scripts/Country.pm
 scripts/Language.pm
   Part of the liblocale-codes-perl package. It was easier to include these
     files here to get someone install this package on the right machine.

 scripts/i18n.pl :        \ 
 scripts/l10n-errors.pl :  \
 scripts/l10n-packages.pl : \
 scripts/l10n.pl :           > included by the corresponding .wml to generate
 scripts/l10n-lang.pl       /   the tables on each page
 scripts/l10n-rank.pl      /
 scripts/team-po.pl        |
 scripts/team-templates.pl |

 scripts/init.pl
   Included by all .pl which generate a page. Its purpose is to read the DBs.

 scripts/ranking.pl 
   Defines some subs which are used to rank the languages.

 scripts/l10nheader.wml
   Wannabe navbar. For now, pretty incomplete.

Makefile
   It's not an easy cut/paste from the standard one, and can be seen as freaky
dtc.def 
   All of the slices used by these pages

i18n.wml           \
l10n-lang.wml       \ 
l10n-rank.wml        \
l10n-packages.wml     > The "wanna be" pages :)
l10n-errors.wml      / 
index.wml           /
l10n.wml           /
team-po.wml       |
team-templates.wml|

=============
= Data flow = (How does it works ?)
============= 

* How is the DB refreshed?

First, I (Martin Quinson) have a crontab on my machine to refresh the DB.
It automatically runs the following script each night.

>>>>>>>>>>>>>>>>>> BEGINNING OF SCRIPT
#! /bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
L10N_HOME=/home/mquinson/src/DEBIAN/webwml/english/international/l10n
if [ ! -x $L10N_HOME/scripts/transmonitor-check ] ; then
  echo "Script does not exist";
  exit 1;
fi
cd $L10N_HOME/scripts || exit 1
for d in unstable ; do #stable testing unstable ; do
  ./transmonitor-check \
      ftp:/ftp.fr.debian.org/debian/dists/$d/main/source\
      ftp:/ftp.fr.debian.org/debian/dists/$d/contrib/source\
      ftp:/ftp.fr.debian.org/debian/dists/$d/non-free/source\
      \
      ftp:/ftp.fr.debian.org/debian-non-US/dists/$d/non-US/main/source\
      ftp:/ftp.fr.debian.org/debian-non-US/dists/$d/non-US/contrib/source\
      ftp:/ftp.fr.debian.org/debian-non-US/dists/$d/non-US/non-free/source\
      \
      \
      --careful --db=../data/$d \
      --po=../material/po/$d --templates=../material/templates/$d --menu=../material/menu\
      $@ \
      \
      || exit 1; 
done;
cd ../data || exit 1;
echo "COMMIT ! Cross the fingers !";
#cvs commit -m "New DB (automatic commit)" unstable;
cd ..
for mat in po templates ; do
  echo "Syncronise $mat";
  rsync -R -r --stats --delete -e ssh material/$mat/unstable/ info:/home/mquinson/public_html/debian/;
done;
<<<<<<<<<<<<<<<< END OF SCRIPT

As you can see, this script runs the transmonitor-check script with
appropriate options, commits the new DB into CVS, and rsyncs the material
(po, templates and menu) to the machine on which I have a ~/public_html.


* How are the pages rebuilt ?

I changed the makefile in the CVS so that all pages depend on the DB. So,
when I commit a new version, the pages are rebuilt at the next automatic
build.


=================================
= How to translate these pages? =
=================================

1. Add the slices for your language to the file dtc.def in the English
   directory.
2. Copy and translate all the .wml files.
3. Add the language translations in your language to countries_perl.wml
   in the template directory (webwml/english/template/debian).
4. Add the language translations in your language to language_names.wml
   in the template directory (webwml/english/template/debian).
   Use the German translation as an example.

That's all, folks!  You don't need to change any of the scripts.
