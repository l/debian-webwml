#use wml::debian::template title="Hints about l10n of Debconf templates"
#include "$(ENGLISHDIR)/international/l10n/templates/menu.inc"

<h2>Concepts</h2>
<p>
  In order to keep its translations up to date, an i18n-ed application must
  provide translators an easy way to detect and fix outdated translations.
</p>

<p>
  A Debconf templates file consist of fields and values.  Translated fields
  follow a specific naming scheme, e.g. <code>Description-es</code> stands
  for a Spanish description.  Actually, <code>Description-es_ES</code> (or
  <code>Description-es_MX</code>, or whatever) will be checked first.
</p>

<p>
  Thus to detect outdated translations, one must know from which string
  this description is translated.  The Debconf way is to keep only
  original fields in the templates file, and put translated fields along
  with the corresponding English fields into another file, named
  <code>templates.xx</code> or <code>templates.xx_XX</code> depending on
  language name.  Hints are given below to help working with separate
  files.
</p>

<h2>Initial translation</h2>

<p>
  Before working on a package, please check
  <a href="http://auric.debian.org/~grisu/debian_translation/">Grisu's
  templates translation server</a> and on BTS that no translation has
  already been sent to maintainer.
  Having made sure that, fetch the templates file from
  <a href="./">the language's page</a> or from the above link,
  and then run
</p>
<pre>$ debconf-getlang xx templates &gt; templates.xx</pre>
<p>
  to generate a file with empty translated fields.  Do not delete
  original fields, they are necessary to track outdated translations!
  When ready, check that all strings are translated by running
</p>
<pre>$ debconf-getlang --stats templates templates.xx</pre>
<p>
  and then send the translated file to the maintainer.
</p>

<h2>Merging translations</h2>

<p>
  As the maintainer did also read this page, they know that to ease the
  translators' job, they must not merge templates, but keep this file as is in
  the <tt>debian</tt> directory.
</p>

<p>
  The translated templates files are only merged when building the binary
  package.  Debhelper will do this automatically for you if you use the
  <tt>dh_installdebconf</tt> command in your <tt>debian/rules</tt>.
  Otherwise, add a command similar to
</p>
<pre>
	cd debian &amp;&amp; debconf-mergetemplate templates templates.* &gt; tmp/DEBIAN/templates
</pre>

<p>
  So maintainer receives translated templates files and puts them at the right
  place, that's all.
</p>

<h2>Updating translations</h2>
<p>
  Now, initial translation has been integrated, but wording has been
  improved in English templates.  Changes in original templates must be
  incorporated.  Again, <tt>debconf-getlang</tt> does the job for you:
</p>
<pre>$ debconf-getlang xx templates templates.xx &gt; new.xx</pre>
<p>
  appends <tt>-fuzzy</tt> tag to outdated fields, and insert a blank line
  just above.  Translator then edits <tt>new.xx</tt>, working on outdated
  translations, and checking them with
</p>
<pre>$ debconf-getlang --stats templates new.xx</pre>
<p>
  that all strings are done.  They then rename <tt>new.xx</tt> to
  <tt>templates.xx</tt> and send this file to maintainer, which applies
  the same treatment as seen at previous section.
</p>

<h2>Full example</h2>

<p>
  Here is a pure imaginary example which illustrates steps above.
  Consider the following templates file, which is called
  <code>debconf.templates</code> for convenience:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Slang, Text, Editor, Dialog, Gnome, Noninteractive
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The slang frontend provides a colorful, full-screen, character based
 windowing interface, while the text frontend uses a more traditional plain
 text interface, and the gnome frontend is a modern X interface. The editor
 frontend lets you configure things using your favorite text editor.  The
 noninteractive frontend never asks you any questions. The dialog frontend
 is a primitive frontend that is being phased out.
</pre>

<p>
  To translate it into French, translator typed:
</p>
  <pre>$ debconf-getlang fr debconf.templates &gt; debconf.templates.fr</pre>
<p>
  and created this <code>debconf.templates.fr</code> file with empty
  translated fields:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Slang, Text, Editor, Dialog, Gnome, Noninteractive
<b>Choices-fr:</b>
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The slang frontend provides a colorful, full-screen, character based
 windowing interface, while the text frontend uses a more traditional plain
 text interface, and the gnome frontend is a modern X interface. The editor
 frontend lets you configure things using your favorite text editor.  The
 noninteractive frontend never asks you any questions. The dialog frontend
 is a primitive frontend that is being phased out.
<b>Description-fr:</b>
</pre>

<p>
  After empty fields have been filled, translator obtains this
  <code>debconf.templates.fr</code>:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Slang, Text, Editor, Dialog, Gnome, Noninteractive
Choices-fr: Slang, Texte, Éditeur, Dialogue, Gnome, Non-interactif
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The slang frontend provides a colorful, full-screen, character based
 windowing interface, while the text frontend uses a more traditional plain
 text interface, and the gnome frontend is a modern X interface. The editor
 frontend lets you configure things using your favorite text editor.  The
 noninteractive frontend never asks you any questions. The dialog frontend
 is a primitive frontend that is being phased out.
Description-fr: Quelle interface utiliser pour configurer les paquets ?
 Les paquets utilisant debconf pour leur configuration partagent la même
 apparence et ergonomie. Vous pouvez choisir leur interface utilisateur.  
 .
 'Slang' est une interface couleur en plein écran basée sur une interface 
 fenêtrée en mode caractère. 'Texte' est une interface en mode texte, plus
 traditionnelle et sans fioriture, et 'Gnome' est une interface X
 moderne. L'interface 'Éditeur' vous permet de faire vos configurations
 depuis votre éditeur favori. Si vous choisissez 'Non-interactif', le
 système ne vous posera jamais de question.  'Dialogue' est une interface
 primitive et dépassée. 
</pre>

<p>
  Translator then sends this translated
  <code>debconf.templates.fr</code> to the Debian package maintainer.
</p>

<p>
  The package maintainer puts this <code>debconf.templates.fr</code>
  file in the <code>debian/</code> subdirectory. As they use
  <code>dh_installdebconf</code> in <code>debian/rules</code>, they have
  nothing special to do to merge templates. Templates merging is
  automagically done by <code>dh_installdebconf</code> when building
  the binary package.
</p>

<p>
  Some weeks later, the package maintainer finishes their work on new
  frontends, and has to modify <code>debconf.templates</code>:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Dialog, Readline, Gnome, Editor, Noninteractive
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The dialog frontend is a full-screen, character based interface, while the
 readline frontend uses a more traditional plain text interface, and the gnome
 frontend is a modern X interface. The editor frontend lets you configure
 things using your favorite text editor. The noninteractive frontend never
 asks you any questions.
</pre>

<p>
  But as they do not speak French, they can not update
  <code>debconf.templates.fr</code> too, but decides anyway to upload a
  new version of their package.
</p>

<p>
  Fortunately, as they wrote templates files <i>the right way</i>, this
  mismatch was visible on
  <a href="fr">http://www.debian.org/intl/l10n/templates/fr</a> because a string
  is tagged <b>fuzzy</b> in this package. Days later, one of the French
  translators notices this fuzzy string and wants to fix it. They
  first download the new <code>debconf.templates</code> file, then run:
</p>
<pre>$ debconf-getlang --stats debconf.templates debconf.templates.fr 
fr: 2 fuzzy translations</pre>
<p>
  to confirm that the translation is no more up to date.
</p>
<p>
  Translator needs to translate the <code>debconf.templates.fr</code>
  file again and will work on a temporary file <code>new.fr</code>
  generated by:
</p>

  <pre>$ debconf-getlang fr debconf.templates debconf.templates.fr &gt; new.fr</pre>

<p>
  This file <code>new.fr</code> looks like this:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Dialog, Readline, Gnome, Editor, Noninteractive
<b>Choices-fr</b>:
<b>Choices-fr-fuzzy</b>: Slang, Texte, Éditeur, Dialogue, Gnome, Non-interactif
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The dialog frontend is a full-screen, character based interface, while the
 readline frontend uses a more traditional plain text interface, and the
 gnome frontend is a modern X interface. The editor frontend lets you
 configure things using your favorite text editor. The noninteractive
 frontend never asks you any questions.
<b>Description-fr</b>:
<b>Description-fr-fuzzy</b>: Quelle interface utiliser pour configurer les paquets ?
 Les paquets utilisant debconf pour leur configuration partagent la même
 apparence et ergonomie. Vous pouvez choisir leur interface utilisateur.
 .
 'Slang' est une interface couleur en plein écran basée sur une interface
 fenêtrée en mode caractère. 'Texte' est une interface en mode texte, plus
 traditionnelle et sans fioriture, et 'Gnome' est une interface X moderne.
 L'interface 'Éditeur' vous permet de faire vos configurations depuis votre
 éditeur favori. Si vous choisissez 'Non-interactif', le système ne vous
 posera jamais de question.  'Dialogue' est une interface primitive et
 dépassée.
</pre>

<p>
  Fuzzy fields are easy to determine, and translator quickly finished
  <code>new.fr</code>:
</p>

<pre>
Template: debconf/frontend
Type: select
Choices: Dialog, Readline, Gnome, Editor, Noninteractive
Choices-fr: Dialogue, Readline, Gnome, Éditeur, Non-interactif
Default: Dialog
Description: What interface should be used for configuring packages?
 Packages that use debconf for configuration share a common look and feel.
 You can select the type of user interface they use.
 .
 The dialog frontend is a full-screen, character based interface, while the
 readline frontend uses a more traditional plain text interface, and the
 gnome frontend is a modern X interface. The editor frontend lets you
 configure things using your favorite text editor. The noninteractive
 frontend never asks you any questions.
Description-fr: Quelle interface utiliser pour configurer les paquets ?
 Les paquets utilisant debconf pour leur configuration partagent la même
 apparence et ergonomie. Vous pouvez choisir leur interface utilisateur.
 .
 «Dialogue» est une interface couleur en plein écran en mode caractère.
 «Readline» est une interface plus traditionelle en mode texte. «Gnome» est
 une interface X moderne. L'interface «Éditeur» vous permet de faire vos
 configurations depuis votre éditeur favori. Si vous choisissez  
 «Non-interactif», le système ne vous posera jamais de question.
</pre>

<p>
  They renamed this file to <code>debconf.templates.fr</code> and sent it to the package
  maintainer, which replaced the previous <code>debian/debconf.templates.fr</code> file
  with this update.
</p>

