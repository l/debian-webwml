<perl>

#
# emits an bunch of li (list items)
#   assumes %arches and $indirect_object_conjoiner
#
sub permute_as_list {
    my($file, $name, @exts) = @_;
    my($ext, $arch);
    $indirect_object_conjoiner or $indirect_object_conjoiner = 'for';

    foreach $arch (keys %arches) {
        print "<li> <a href=\"./$arch/$file\">$name $indirect_object_conjoiner " . $arches{$arch} . "</a>";
	if ( $#exts != -1 ) {
	    foreach $ext (@exts) {
	        print " (<a href=\"./$arch/$file.$ext\"><em>" . 
			$formats{$ext} . "</em></a>)";
	    }
	}
	print "\n";
    }
}

#
# emits an HTML table matrix:
#   | arch | format | lang1, lang2, lang3 |
#   assumes %arches and %formats
#
sub permute_as_matrix {
    my($file, @langs) = @_;
    my($ext, $arch, $lang);
    my $altcolor = 'white';
    my $ctr = 0;

    foreach $arch (keys %arches) {
	$ctr++;
	my $first = 1;

	foreach $ext (keys %formats) {
	    # alternate the row color
	    if ( $ctr % 2 ) {
		print "\n<tr>\n";
	    } else {
		print "\n<tr bgcolor=\"$altcolor\">\n";
	    }
	    # only print the arch name on the first row
	    if ( $first == 1 ) {
		print "  <td align=\"left\"><a href=\"$arch/$file\">" . $arches{$arch} . "</a></td>\n";
		$first = 0;
	    } else {
		print "  <td>&nbsp;</td>\n";
	    }
	    print "  <td align=\"left\">" . $formats{$ext} . "</td>\n";
	    # permute over languages
	    print "  <td>";
	    foreach $lang (@langs) {
		print "<a href=\"./$arch/$file." . $langs{$lang} . ".$ext\">";
		# sometimes the language name isn't properly defined yet
		my $workaroundlang = $trans{$CUR_ISO_LANG}{$lang};
		( $workaroundlang = $lang ) =~ s/^(.)/\U$1/
		    unless $workaroundlang;
		print $workaroundlang . "</a> \n";
	    }
	    print "  </td>";
	    print "</tr>\n";
	    
	}
    }
}

</perl>
