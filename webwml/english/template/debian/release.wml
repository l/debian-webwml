#use wml::std::tags
<perl>
<protect pass=2>
#
# emits an bunch of li (list items)
#   assumes %arches and $indirect_object_conjoiner
#
sub permute_as_list {
    my($file, $name, @exts) = @_;
    my($ext, $arch);

    %arches || die "%arches is not set\n";

    foreach $arch (sort keys %arches) {
	print "<li> <a href=\"$arch/$file\">";
	# language dependant part -- given a manual name and an architecture, join them
	if ( $CUR_ISO_LANG eq 'en' ) {
	    print "$name for " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'de' ) {
	    print "$name für " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'es' ) {
	    print "$name por " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'id' ) {
	    print "$name untuk " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'it' ) {
	    print "$name per " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'nl' ) {
	    print "$naam voor " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'ru' ) {
	    print "$name ÄÌÑ " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'sv' ) {
	    print "$name för " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'no' ) {
	    print "$name for " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'fi' ) {
	    print "$name " . $arches{$arch} . "-arkkitehtuurille";
	}
	elsif ( $CUR_ISO_LANG eq 'ja' ) {
	    print "$name " . $arches{$arch} . " ÍÑ";
	}
	elsif ( $CUR_ISO_LANG eq 'zh' ) {
	    print $arches{$arch} . " ªº$name";
	}
	elsif ( $CUR_ISO_LANG eq 'pl' ) {
	    print "$name dla architektury " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'hu' ) {
	    print "$name " . $arches{$arch} . " architektúrára";
	}
	elsif ( $CUR_ISO_LANG eq 'hr' ) {
	    print "$name za " . $arches{$arch} . " arhitekturu";
	}
	elsif ( $CUR_ISO_LANG eq 'fr' ) {
	    print "$name pour " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'ar' ) {
	    print "$name for " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'da' ) {
	    print "$name for " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'eo' ) {
	    print "$name for " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'ko' ) {
	    print "$name for " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'pt' ) {
	    print "$name for " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'ro' ) {
	    print "$name for " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'tr' ) {
	    print "$name for " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'el' ) {
	    print "$name for " . $arches{$arch};
	}
	elsif ( $CUR_ISO_LANG eq 'ca' ) {
	    print "$name per " . $arches{$arch};
	}
# add new languages like this:
#	elsif ( $CUR_ISO_LANG eq 'xy' ) {
#	    print "$name for " . $arches{$arch};
#	}
	print "</a>";
	if ( $#exts != -1 ) {
	    foreach $ext (@exts) {
	        print " (<a href=\"$arch/$file.$ext\"><em>" . 
			$formats{$ext} . "</em></a>)";
	    }
	}
	print "\n";
    }
}

#
# emits an HTML table matrix:
#   | arch | format | lang1, lang2, lang3 |
#   assumes %arches and %formats
#
sub permute_as_matrix {
    my($file, @langs) = @_;
    my($ext, $arch, $lang, @cur_dir, $release);
    my $altcolor = 'white';
    my $ctr = 0;
    my $check_if_file_exists = 0;

    @cur_dir = split('/', '$(WML_SRC_DIRNAME)');
    $release = pop @cur_dir;

    %arches || die "%arches is not set\n";
    %formats || die "%formats is not set\n";

    if ($file =~ /release-notes/) { delete $formats{'pdf'} } else { $formats{'pdf'} = "PDF" };

    foreach $arch (sort keys %arches) {
	$ctr++;
	my $first = 1;

	foreach $ext (keys %formats) {
	    if ($check_if_file_exists && 
                ! -f "$(HTMLDIR)/releases/$release/$arch/$file.en.$ext") {
	        next;
	    }
	    # alternate the row color
	    if ( $ctr % 2 ) {
		print "\n<tr>\n";
	    } else {
		print "\n<tr bgcolor=\"$altcolor\">\n";
	    }
	    # only print the arch name on the first row
	    if ( $first == 1 ) {
		if ($file =~ /release-notes/) {
		    print "  <td align=\"left\"><a href=\"$arch/$file/\">" . $arches{$arch} . "</a></td>\n";
		} else {
		    print "  <td align=\"left\"><a href=\"$arch/$file\">" . $arches{$arch} . "</a></td>\n";
		}
		$first = 0;
	    } else {
		print "  <td>&nbsp;</td>\n";
	    }
	    print "  <td align=\"left\">" . $formats{$ext} . "</td>\n";
	    # permute over languages
	    print "  <td>";
	    foreach $lang (@langs) {
	        next if ($ext eq "pdf" && $lang eq "japanese");
	        next if ($ext eq "pdf" && $lang eq "russian");
	        $file_version = "$arch/$file." . $langsinstall{$lang} . ".$ext";
	        if ( $file =~ /release-notes/ && $ext eq "html" ) {
	           $file_version = "$arch/$file/index." . $langsrelnotes{$lang} . ".$ext";
	        }
	        if (! $check_if_file_exists || 
                    -f "$(HTMLDIR)/releases/$release/$file_version") {
	            # all languages should be defined in %trans. Add missing entries 
	            # in English if this is not the case
	            print "<a href=\"$file_version\">" . $trans{$CUR_ISO_LANG}{$lang} . "</a> \n";
	        }
	    }
	    print "  </td>";
	    print "</tr>\n";
	    
	}
    }
}

</protect>
</perl>
