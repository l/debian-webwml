#use wml::debian::language_names

<define-tag hrline><hr noshade width="100%" size="1" /></define-tag>

<define-tag url><a href="%0">%0</a></define-tag>
<define-tag newsurl><url %0 /></define-tag>

<define-tag email><a href="mailto:%0">%0</a></define-tag>
<define-tag newsemail><email %0 /></define-tag>

#  Support for i18n with gettext
<when <symbol-info printf />>
   #  mp4h >= 1.3.0
   <use name="intl:gettext" />

   <mp4h-l10n LC_MESSAGES="<or "$(CUR_LOCALE)" <downcase $(CUR_LANG) /> />" />
   <textdomain domain="templates" />
   <define-tag bind-gettext-domain whitespace=delete>
     <preserve domain />
     <set-var %attributes />
     <defvar domain templates />
     <bindtextdomain domain="<get-var domain />" path="$(ENGLISHDIR)/../locale" />
     <bind_textdomain_codeset domain="<get-var domain />" codeset="<or $(CHARSET_WML) $(CHARSET) />" />
     <restore domain />
   </define-tag>
   <bind-gettext-domain templates />
</when>
<when <not <symbol-info printf /> />> 
   #  mp4h < 1.3.0, intl:gettext is not available
   #  <gettext> is defined in order not to break nm.d.o.
   <define-tag gettext endtag=required>%body</define-tag>
   <define-tag bind-gettext-domain></define-tag>
</when>

#  Slices go away, and a bug in slice < 1.3.9 is revealed.
#  This empty ZH slice prevents breakage for Chinese pages.
[ZH::]

#  Add <void id="foo"> to make msgids unique
<define-tag void></define-tag>

#   OBSOLETE, use <gettext> instead!!
#   The <define-tag-sliced> tag can be used instead of <define-tag>
#   when defining piece of text to translate.  Example:
#     <define-tag flags whitespace=delete>
#           [EN:Flags::]
#           [DA:Flag::]
#           [FI:Liput::]
#           [FR:Options ::]
#           [HR:Oznake::]
#           [IT:Opzioni::]
#           [SV:Flaggor::]
#     </define-tag>
#   Then slices for all other languages are automatically copied from
#   English.  It currently does only work when slices are on a single
#   line.

<define-tag define-tag-sliced endtag=required whitespace=delete>
  <preserve default />
#   English text is placed in `default' variable
  <set-var default=<subst-in-string %body
        ".*\\[EN:([^\\n]*):\\].*" "\\1" singleline=true /> />
#   Hack to change expansion order: string is first evaluated, then
#   substitution is performed and output is scanned again.
  <subst-in-string "<dummy-define-tag %attributes>
    <foreach _webwml_lang_ _webwml_langs_>
      <or <match %body "\[<get-var _webwml_lang_/>:[^\\n]*:\\]" action=extract />
        "[<get-var _webwml_lang_ />:<get-var default />:]" />
    </foreach>
  </dummy-define-tag>" "dummy-define-tag" "define-tag" />
  <restore default />
</define-tag>
