#use wml::std::tags
#use wml::sup::path
#use wml::debian::language_names

<define-tag langtext whitespace=delete>
	[EN:This page is also available in the following languages:]
	[EL:Ç óåëßäá áõôŞ åßíáé äéáèİóéìç êáé óôéò áêüëïõèåò ãëşóóåò:]
	[RO:Aceastã paginã este disponibilã în urmãtoarele limbi:]
	[EO:Tiu æi paøo estas ankaı legebla en la jenaj lingvoj:]
	[TR:Bu sayfa aşağıdaki dillerde de mevcuttur:]
	[FI:Tämä sivu on on olemassa myös seuraavilla kielillä:]
	[PT:Esta página está disponível nas seguintes línguas:]
	[HR:Ova stranica je takoğer dostupna na sljedeæim jezicima:]
	[FR:Cette page est aussi disponible dans les langues suivantes&nbsp;:]
	[NL:Deze pagina is ook beschikbaar in de volgende talen:]
	[DE:Diese Seite gibt es auch in den folgenden Sprachen:]
	[IT:Questa pagina è disponibile anche nelle lingue seguenti:]
 	[JA:¤³¤Î¥Ú¡¼¥¸¤Ï°Ê²¼¤Î¸À¸ì¤Ç¤â¤´Í÷¤Ë¤Ê¤ì¤Ş¤¹:]
	[PL:Ta strona jest równie¿ dostêpna w nastêpuj±cych jêzykach:]
	[ES:Esta página también está disponible en los siguientes idiomas:]
	[DA:Denne side findes ogs&aring; p&aring; f&oslash;lgende sprog:]
	[NO:Denne siden fins også på følgende språk:]
 	[ZH:¥»­¶¨ä¥L»y¨¥ª©¥»¦p¤U:]
	[SV:Denna sida finns även på följande språk:]
 	[KO:ÀÌ ÆäÀÌÁö´Â ´ÙÀ½ ¾ğ¾î·Îµµ º¼ ¼ö ÀÖ½À´Ï´Ù:]
 	[HU:Az oldal az alábbi nyelveken is olvasható:]
	[AR:åĞå ÇáÕøİÍÉ ãÊÇÍÉ ÈÇááÛÇÊ ÇáÊÇáíÉ ÃíÖÇ:]
	[RU:üÔÁ ÓÔÒÁÎÉÃÁ ÔÁËÖÅ ÄÏÓÔÕĞÎÁ ÎÁ ÓÌÅÄÕÀİÉÈ ÑÚÙËÁÈ:]
</define-tag>
<define-tag setlang whitespace=delete>
	[EN:How to set the default document language:]
	[EL:Ğùò íá ïñßóåôå ôçí ğñïêáèïñéóìİíç ãëşóóá:]
	[RO:Cum sã setaşi limba:]
	[EO:Kiel elekti la dokumentan lingvon:]
	[TR:Varsayılan belge dili nasıl ayarlanır:]
	[FI:Oletuskielen asettamisohjeet:]
	[PT:Como configurar a língua default dos documentos:]
	[HR:Kako postaviti predodreğeni jezik dokumenata:]
	[FR:Comment configurer le langage par défaut du document:]
	[NL:Hoe zet je de standaard taal voor documenten:]
	[DE:Wie stellt man die Standardsprache ein:]
	[IT:Come configurare la lingua predefinita per i documenti:]
 	[JA:¥Ç¥Õ¥©¥ë¥È¤Î¸À¸ì¤òÀßÄê¤¹¤ë¤Ë¤Ï:]
	[PL:Jak ustawiæ domy¶lny jêzyk dokumentu:]
	[ES:Cómo modificar el idioma por defecto de los documentos:]
	[DA:S&aring;dan s&aelig;tter du standard sprogvalg for dokumenter:]
	[NO:Slik setter du standard språkvalg:]
	[ZH:¦p¦ó³]¸m[CN:¯Ê¬Ù:][HKTW:¹w³]:]»y¨¥:]
	[SV:Så ställer du in standardspråkval för dokument:]
 	[KO:¿øÇÏ´Â ¾ğ¾î·Î º¸·Á¸é ¾î¶»°Ô ÇØ¾ß ÇÏ´Â°¡?:]
 	[HU:Hogyan állítsd be az alapértelmezett nyelvet?:]
	[AR:ßíİ ÊåíøÆ ÇááøÛÉ ÇáÊÚĞøÑíÉ ááÕİÍÉ:]
	[RU:ëÁË ÕÓÔÁÎÏ×ÉÔØ ÑÚÙË ĞÏ ÕÍÏÌŞÁÎÉÀ:]
</define-tag>

<perl>
# Add your language directory along with its ISO abbreviation here.
# Do _not_ translate the directory names.
#            Directory   Abbrev
my %langs = ( english    => "en",
              hellas     => "el",
              turkish    => "tr",
              romanian   => "ro",
              esperanto  => "eo",
              finnish    => "fi",
              portuguese => "pt",
              danish     => "da",
              french     => "fr",
              dutch      => "nl",
              german     => "de",
              italian    => "it",
              spanish    => "es",
              korean     => "ko",
              japanese   => "ja",
              croatian   => "hr",
              chinese    => "zh",
              swedish    => "sv",
              polish     => "pl",
              norwegian  => "no",
              russian    => "ru",
              czech      => "cs",
              hungarian  => "hu",
              arabic     => "ar",
              slovak     => "sk",
);

# DO NOT translate anything below here.
# If you feel something needs to be modified, write to debian-www first.

sub langcmp {
  my ($first, $second) = ($a, $b);
  # Handle sorting of non-latin characters
  # Language names based on Latin, Greek or Cyrillic letters are sorted
  # first, then other names, sorted on Unicode numbers.
  if (substr($first,0,1) eq '&')
  {
    $first =~ s/&#1056;&#1091;&#1089;&#1089;&#1082;&#1080;&#1081;/RUSSKIJ/; # er u es es ka i short-i
#   $first =~ s/&#1593;&#1585;&#1576;&#1610;&#1577;/ARBYTM/; # ain reh beh yeh teh-marbuta
    $first =~ s/&#917;&#955;&#955;&#951;&#957;&#953;&#954;&#940;/ELLYNIKA/; # epsilon lambda lambda eta nu iota kappa alpha-with-tonos
    $first =~ s/^&/_&/; # put remaining entities last in the list
  }
  if (substr($second,0,1) eq '&')
  {
    $second =~ s/&#1056;&#1091;&#1089;&#1089;&#1082;&#1080;&#1081;/RUSSKIJ/;
#   $second =~ s/&#1593;&#1585;&#1576;&#1610;&#1577;/ARBYTM/;
    $second =~ s/&#917;&#955;&#955;&#951;&#957;&#953;&#954;&#940;/ELLYNIKA/; # epsilon lambda lambda eta nu iota kappa alpha-with-tonos
    $second =~ s/^&/_&/; # put remaining entities last in the list
  }
  return uc($first) cmp uc($second);
}

sub languages {
  my $str = "";

  $base_url = "$(HOME)";
  $file = "$(WML_SRC_BASENAME)";
  $cur_lang = "$(CUR_LANG)";
  $cwd = $WML_SRC_DIRNAME;
  $full_base_url = &canonpath("$cwd/$base_url");
  $rel_dir = &relpath($full_base_url, $cwd);
  $rel_dir =~ s,/$,,;

  # Special case: Greek is not in a directory called "greek"
  $cur_lang = "hellas" if $cur_lang eq "Greek";

  # printf STDERR "base_url=$base_url rel_dir=$rel_dir file=$file cur_lang=$cur_lang\n";

  foreach(keys %langs) {
     # printf STDERR "$base_url/../$_/$rel_dir/$file.wml\n";
     if ( -f "$base_url/../$_/$rel_dir/$file.wml" ) {
        if ($_ ne lc($cur_lang) or $cur_lang eq "Chinese") {
           push @used_langs, $_;
           # printf STDERR "found file in $_\n";
        }
     }
  }
  # printf STDERR join(', ', @used_langs);
  if (@used_langs) {
     unless ($rel_dir eq "" && $file eq "index") {
        $str = '<hrline>';
        $str .= "\n";
     }
     $str .= "<langtext>:\n<BR>\n";
     # Language sorting. Create a hash going from the language's own name
     # for itself to the language's ISO keys. Then work with the sorted
     # keys.
     foreach (@used_langs) {
        $sorted_langs{$trans{$langs{$_}}{$_}} = $_;
     }
     # Sort on uppercase to work with languages which use lowercase initial
     # letters.
     foreach (sort langcmp keys %sorted_langs) {
        $cur_lang = $sorted_langs{$_};
        if ($cur_lang ne "chinese") {
           $str .= "<A href=\"$file.$langs{$cur_lang}.html\">$_</A>&nbsp;\n";
        } else {
           $str .= "<A href=\"$file.$langs{$cur_lang}-cn.html\">$_&nbsp;(CN)</A>&nbsp;\n";
           $str .= "<A href=\"$file.$langs{$cur_lang}-hk.html\">$_&nbsp;(HK)</A>&nbsp;\n";
           $str .= "<A href=\"$file.$langs{$cur_lang}-tw.html\">$_&nbsp;(TW)</A>&nbsp;\n";
        }
     }
     $str .= "\n<BR><A href=\"$base_url/intro/cn\"><setlang></A>\n";
  }

  return $str;
}

</perl>
