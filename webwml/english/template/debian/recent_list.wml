#use wml::debian::ctime

<define-tag noitemsforthisyear whitespace=delete>
	[EN:No items for this year.:]
	[EL:Ôßðïôá ãéá áõôüí ôï ÷ñüíï.:]
	[RO:Nu sÎnt articole pentru anul acesta:]
	[EO:Estas nenio por æi tiu jaro.:]
	[TR:Bu yIl iCin bilgi yok:]
	[FI:Ei otsikoita tältä vuodelta:]
	[PT:Sem itens neste ano.:]
	[HR:Za ovu godinu nema èlanaka.:]
	[FR:Pas d'éléments cette année.:]
	[NL:Geen items voor dit jaar.:]
	[DE:Kein Eintrag für dieses Jahr.:]
	[IT:Nessun articolo per quest'anno.:]
	[JA:º£Ç¯ÅÙ¤Î¹àÌÜ¤Ï¤¢¤ê¤Þ¤»¤ó¡£:]
	[PL:Brak wydarzeñ w tym roku.:]
	[ES:No hay elementos para este año.:]
	[DA:Ingen begivenheder i dette &aring;r.:]
	[NO:Ingen begivenheter dette året:]
	[ZH:¥»¦~«×¤ºÁÙ¥¼¦³¥ô¦ó·s®ø®§¡C:]
	[SV:Ingenting detta år.:]
	[KO:No items for this year.:]
	[AR:ÍÊøì ÚäÕÑ åÐÇ ÇáÚÇã:]
	[RU:îÅÔ ÎÉÞÅÇÏ ÚÁ ÜÔÏÔ ÇÏÄ.:]
</define-tag>

<define-tag proposed whitespace=delete>
	[EN:proposed:]
	[EL:ðñüôáóç:]
	[AR:proposed:]
	[DA:proposed:]
	[DE:vorgeschlagen:]
	[EO:proponita:]
	[ES:proposed:]
	[FI:proposed:]
	[FR:proposed:]
	[HR:proposed:]
	[HU:proposed:]
	[IT:proposed:]
	[JA:proposed:]
	[KO:proposed:]
	[NL:voorgesteld:]
	[NO:foreslått:]
	[PL:proposed:]
	[PT:proposed:]
	[RO:proposed:]
	[RU:proposed:]
	[SV:föreslagen:]
	[TR:proposed:]
	[ZH:proposed:]
</define-tag>

<define-tag discussed whitespace=delete>
	[EN:discussed:]
	[EL:Ý÷ïõí óõæçôçèåß:]
	[AR:discussed:]
	[DA:discussed:]
	[DE:diskutiert:]
	[EO:diskutita:]
	[ES:discussed:]
	[FI:discussed:]
	[FR:discussed:]
	[HR:discussed:]
	[HU:discussed:]
	[IT:discussed:]
	[JA:discussed:]
	[KO:discussed:]
	[NL:besproken:]
	[NO:diskutert:]
	[PL:discussed:]
	[PT:discussed:]
	[RO:discussed:]
	[RU:discussed:]
	[SV:diskuterad:]
	[TR:discussed:]
	[ZH:discussed:]
</define-tag>

<define-tag votedon whitespace=delete>
	[EN:voted on:]
	[EL:øçößóôçêå óôßò:]
	[AR:voted on:]
	[DA:voted on:]
	[DE:abgestimmt:]
	[EO:vocxdonita je la:]
	[ES:voted on:]
	[FI:voted on:]
	[FR:voted on:]
	[HR:voted on:]
	[HU:voted on:]
	[IT:voted on:]
	[JA:voted on:]
	[KO:voted on:]
	[NL:op gestemd:]
	[NO:avstemt:]
	[PL:voted on:]
	[PT:voted on:]
	[RO:voted on:]
	[RU:voted on:]
	[SV:omröstad:]
	[TR:voted on:]
	[ZH:voted on:]
</define-tag>

<define-tag finished whitespace=delete>
	[EN:finished:]
	[EL:ôåëåßùóå:]
	[AR:finished:]
	[DA:finished:]
	[DE:abgelaufen:]
	[EO:finita:]
	[ES:finished:]
	[FI:finished:]
	[FR:finished:]
	[HR:finished:]
	[HU:finished:]
	[IT:finished:]
	[JA:finished:]
	[KO:finished:]
	[NL:afgelopen:]
	[NO:avsluttet:]
	[PL:finished:]
	[PT:finished:]
	[RO:finished:]
	[RU:finished:]
	[SV:avslutad:]
	[TR:finished:]
	[ZH:finished:]
</define-tag>

<define-tag future_events whitespace=delete>
	[EN:Future events:]
	[AR::]
	[DA::]
	[DE:Kommende Veranstaltungen:]
	[EL::]
	[EO::]
	[ES::]
	[FI::]
	[FR::]
	[HR::]
	[HU::]
	[IT::]
	[JA::]
	[KO::]
	[NL::]
	[NO:Kommende begivenheter:]
	[PL::]
	[PT::]
	[RO::]
	[RU::]
	[SV:Kommande evenemang:]
	[TR::]
	[ZH::]
</define-tag>
<define-tag past_events whitespace=delete>
	[EN:Past events:]
	[AR::]
	[DA::]
	[DE:Vergangene Veranstaltungen:]
	[EL::]
	[EO::]
	[ES::]
	[FI::]
	[FR::]
	[HR::]
	[HU::]
	[IT::]
	[JA::]
	[KO::]
	[NL::]
	[NO:Tidligere begivenheter:]
	[PL::]
	[PT::]
	[RO::]
	[RU::]
	[SV:Tidigare evenemang:]
	[TR::]
	[ZH::]
</define-tag>

# DO NOT translate anything below here. If you feel something needs to be changed, write to
# debian-www first

<perl>

# grabs the date and title of the last $number news items from directory $year.
# If $number is zero then all the news items are shown.
# example usage:
# get_recent_list ('1998', '0', '$(ENGLISHDIR)/News', '', '\d+\w*')

# Events will be sorted in normal order instead of reverse

sub get_recent_list {
	my ($year, $number, $eng_dir, $format, $match) = @_;

	if ($format =~ order) {
		$listhead = '<OL>';
		$listfoot = '</OL>';
		$elemhead = '<LI>';
		$elemfoot = '- ';
	}
	elsif ($format =~ bullet) {
		$listhead = '<UL>';
		$listfoot = '</UL>';
		$elemhead = '<LI>';
		$elemfoot = '- ';
	}
	elsif ($format =~ list) {
		$listhead = '<DL>';
		$listfoot = '</DL>';
		$elemhead = '<DT>';
		$elemfoot = '<DD>';
	}
	else {
		$listhead = '';
		$listfoot = '';
		$elemhead = '';
		$elemfoot = '- ';
	}

	my $str = $listhead;

	opendir(DIR, "$eng_dir/$year");
	@files = grep { /^$match.wml$/ && -f "$eng_dir/$year/$_" } readdir(DIR);
	@files = sort {$b cmp $a} @files;
	@files = reverse @files if ($eng_dir =~ /\/events\/\d{4}$/);
	closedir DIR;

#	print STDERR "files: " . join " ", @files; print STDERR "\n";
#	print STDERR "year=$year number=$number eng_dir=$eng_dir format=$format match=$match\n";
	$count = 0;
	$str .= grab_titles($year, $number, $eng_dir, $format, $match);

	if ($count < $number && $number ne 0) {
		@tmp = split('/', $year);
		$tmp[$#tmp]--;
		# $year--;
		$year = join('/', @tmp);
		if (-d "$eng_dir/$year") {
			opendir(DIR, "$eng_dir/$year") or printf stderr "couldn't open dir $eng_dir/$year\n";
			@files = grep { /^$match.wml$/ && -f "$eng_dir/$year/$_" } readdir(DIR);
			@files = sort {$b cmp $a} @files;
			closedir DIR;
			$str .= grab_titles($year, $number, $eng_dir, $format, $match);
		}
	}
	if ($count eq 0) {
		$str .= "<noitemsforthisyear>\n";
	}
	$str .= $listfoot;
	# these two lines are a dumb kludge, happens with events/
	$str =~ s/$listhead(.+)\n$listhead/$1\n$listhead/;
	$str =~ s/$listfoot\n$listfoot/$listfoot/;
	return $str;
}

sub grab_titles {
my ($year, $number, $eng_dir, $format, $match) = @_;
my $over = $current = $base = $str1 = $str = "";

foreach $file (@files) {
  ($trans_title = $file) =~ s/wml/title/;
  $count++;
  open FILE, "$year/$file" or open FILE, "$year/$trans_title" or open FILE, "$eng_dir/$year/$file" or print STDERR "couldn't open $eng_dir/$year/$file: $!\n";
  $base = $1 if ($file =~ /($match).wml/);
  my $event = '';
  if ($WML_SRC_DIRNAME =~ /events/) { # shouldn't waste time if it's not events
    foreach (<FILE>) {
      if (/^#use wml::debian::past_event$/) {
        $event = "past";
      } elsif (/^#use wml::debian::event$/) {
        $event = "current";
      }
    }
    seek FILE, 0, SEEK_SET;
  }
#  print STDERR (stat FILE)[7]; print STDERR "\n";
  $title = ''; $date = ''; $rdate = ''; $desc = ''; $status = ''; $where = '';
<protect pass=2>
  foreach $line (<FILE>) {
       if ($line =~ /^<define-tag pagetitle>(.*)<\/define-tag>$/) { $title = qq/$1/; }   # all
    elsif ($line =~ /^<define-tag release_date>(.*)<\/define-tag>$/) { $date = qq/$1/; } # News
    elsif ($line =~ /^<define-tag where>(.*)<\/define-tag>$/) { $where = qq/$1/; }       # events
    elsif ($line =~ /^<define-tag date>(.*)<\/define-tag>$/) { $date = qq/$1/; }         # events
    elsif ($line =~ /^<define-tag description>(.*)<\/define-tag>$/) { $desc = qq/$1/; }  # security
    elsif ($line =~ /^<define-tag status>(.*)<\/define-tag>$/) { $status = qq/$1/; }     # vote
</protect>
    if ($title && $date && $where) { # for events/
      $str1 = "$elemhead<tt>[$date]</tt> <strong><a href=\"$year/$base\">$title</a></strong> $elemfoot$where<br>\n";
      last;
    }
    elsif ($desc) { # for security/
      open DATAFILE, "$eng_dir/$year/$base.data" or print STDERR "couldn't open $eng_dir/$year/$base.data: $!\n";
      foreach $l (<DATAFILE>) {
<protect pass=2>
           if ($l =~ /^<define-tag pagetitle>(.*)<\/define-tag>$/) { $title = qq/$1/; }
        elsif ($l =~ /^<define-tag report_date>(.*)<\/define-tag>$/) { $rdate = qq/$1/; }
</protect>
      }
      close DATAFILE;
#      print STDERR "title: $title rdate: $rdate\n";
      $rdate = newsdate($rdate);
      $title =~ s/(DSA-\d{3})-\d{1}/$1/; # strip off the revision in the DSA number
      $str1 = "$elemhead<tt>[$rdate]</tt> <strong><a href=\"$year/$base\">$title</a></strong> $elemfoot$desc<br>\n";
      last;
    }
    elsif ($title && $date) { # for News/
      $date = newsdate($date);
      $str1 = "$elemhead<tt>[$date]</tt> <strong><a href=\"$year/$base\">$title</a></strong><br>\n";
      last;
    }
    elsif ($title && $status) { # for vote/
      $str1 = "$elemhead<a href=\"$year/$base\">$title</a> &mdash; ";
         if ( $status eq "P" ) { $str1 .= "<proposed>"; }
      elsif ( $status eq "D" ) { $str1 .= "<discussed>"; }
      elsif ( $status eq "V" ) { $str1 .= "<votedon>"; }
      elsif ( $status eq "F" ) { $str1 .= "<finished>"; }
      else { $str1 .= "$status"; }
      $str1 .= "<br>\n";
      last;
    }
  } # for each line in file
  close FILE;

  if ($event ne "") { # this file was for an event
       if ( $event eq "past" ) { $over .= $str1; }
    elsif ( $event eq "current" ) { $current .= $str1;  }
  } else {
    $str .= $str1;
  }
  if ($count eq $number) { last; }
} # for each file

if ($WML_SRC_DIRNAME =~ /events/) {
  $str = "";
  if ($current) {
    $str .= "<H2><future_events></H2>\n$listhead\n$current\n$listfoot\n";
  }
  if ($over) {
    $str .= "<H2><past_events></H2>\n$listhead\n$over\n$listfoot\n";
  }
}

return $str;
}

</perl>
