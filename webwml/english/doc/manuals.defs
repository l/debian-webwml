#use wml::debian::common_tags
#use wml::debian::languages
#include "$(ENGLISHDIR)/doc/user-manuals.defs"
#use wml::debian::toc

# See user-manuals.defs for the quick cheatsheet

<define-tag toc-title-formatting endtag="required" whitespace="delete">
  <p><strong><span class="ddpbooktitle">%body</span></strong></p>
</define-tag>

<toc-display/>

<define-tag document>
  <toc-add-entry name="%1">%0</toc-add-entry>
</define-tag>

<define-tag doctable endtag=required whitespace=delete>
<table summary="">
  %body
</table>
</define-tag>

<bind-gettext-domain domain="doc" />

<define-tag authors>
<tr>
  <td><strong><gettext domain="doc">Authors:</gettext></strong></td>
  <td>%0</td>
</tr>
</define-tag>

<define-tag editors>
<tr>
  <td><strong><gettext domain="doc">Editors:</gettext></strong></td>
  <td>%0</td>
</tr>
</define-tag>

<define-tag maintainer>
<tr>
  <td><strong><gettext domain="doc">Maintainer:</gettext></strong></td>
  <td>%0</td>
</tr>
</define-tag>

<define-tag status endtag=required whitespace=delete>
<tr>
  <td valign="top"><strong><gettext domain="doc">Status:</gettext></strong></td>
  <td>%body</td>
</tr>
</define-tag>

<define-tag availability endtag=required whitespace=delete>
<tr>
  <td valign="top"><strong><gettext domain="doc">Availability:</gettext></strong></td>
  <td>%body</td>
</tr>
</define-tag>

# Alias for inddpsvn for those looking for 'svn' here
<define-tag inddpsvn whitespace=delete>
    <inddpcvs %attributes>
</define-tag>

# NOTE defined as 'inddpcvs' although now the repo is SVN
# kept to minimise the number of changes in the pages
<define-tag inddpcvs whitespace=delete>
  <preserve name index baselink langs formats path loc txt version cvsname naming srctype vcstype vcsweb vcsrepo />
  <set-var %attributes />
  <if <get-var name /> "" <exit message="you must pass a name to the inddpcvs tag" /> />
  #   Default values
  <defvar index index />
  <if <get-var langs />
      <set-var add-lang-ext=true />
      <group <set-var langs=en /><set-var add-lang-ext= /> />
  />
  <defvar formats html />
  <defvar path "manuals/<get-var name />" />
  <defvar cvsname <get-var name /> />
# naming: default(extention: pt-br, ...), locale(extention: pt_BR, ...), none(no listing)
  <defvar naming default />
  <defvar srctype XML />
  <defvar vcstype ddp />

  <subst-in-var langs " " "\n" />
  <subst-in-var formats " " "\n" />

 <when <not <match <get-var naming /> "none" />/>>
  <br/>
  <gettext domain="doc">Latest version:</gettext>
  <ul>
  <foreach lang langs>
    <li>
    <:
    use Locale::Language;
    my $xy = '<get-var lang />';
    $xy =~ s/[-_]\w+$//; # for pt-br, pt_BR and such
    my $printlang = $trans{$CUR_ISO_LANG}{lc(code2language($xy))};
    $printlang = $trans{$CUR_ISO_LANG}{'norwegian'} if ($xy eq 'nb'); # nb is refered as Norwegian on the website
    $printlang = $trans{$CUR_ISO_LANG}{'greek'} if ($xy eq 'el'); # el is displayed as “Greek, Modern (1453-)”
    $printlang = "<strong>$printlang</strong>" if ($xy eq $CUR_ISO_LANG);
    print $printlang;
    :>
    <set-var version=<get-var version-<get-var name />-<get-var lang /> /> />
    <when <get-var version />>
      &nbsp;<gettext domain="doc">(version <get-var version />)</gettext>
    </when>
    :
    <foreach format formats>
      <set-var extlang=<get-var lang /> />
      <when <match <get-var naming /> "locale" />>
      	<when <match <get-var format /> "(dvi|epub|txt|pdf|ps)" />>
		<subst-in-var extlang "(\w\w)-(\w\w)" "\\1_<:=uc("\\2"):>" />
      	</when>
      </when>
      &nbsp;
      <if <match <get-var format /> "^html$" action=report />
        <set-var baselink=<get-var index /> />
        <set-var baselink=<get-var name /> />
      />
      <if <get-var add-lang-ext />
        <set-var loc="<get-var baselink />.<get-var extlang />.<get-var format />" />
        <set-var loc="<get-var baselink />.<get-var format />" />
      />
      <when <match <get-var add-lang-ext /> "^$" action=report />>
        <when <match <get-var index /> "^index$" action=report />>
          <when <match <get-var format /> "^html$" action=report />>
            <set-var loc="" />
          </when>
        </when>
      </when>
      <when <match <get-var format /> "(pdf|ps|dvi|epub|html)" action=report />>
        <set-var txt=<upcase <get-var format /> /> />
      </when>
      <when <match <get-var format /> "txt" action=report />>
        <set-var txt=<gettext domain="doc">plain text</gettext> />
      </when>
      [<a href="<get-var path />/<get-var loc />"><get-var txt /></a>]
#      <if <match <get-var format /> "(html|txt|pdf|ps)" action=report /> ""
#        <exit message="you must pass a valid format to the inddpcvs tag" />
#      />
    </foreach>
    </li>
  </foreach>

  </ul>
 </when>
# DDP Subversion repo access (used)
 <when <match <get-var vcstype /> "ddp" action=report />>
  <set-var vcsweb="http://anonscm.debian.org/viewvc/ddp/manuals/trunk/<get-var cvsname />/" />
  <set-var vcsrepo="svn://svn.debian.org/svn/ddp/manuals/trunk/<get-var cvsname /> <get-var cvsname />" />
  <p><gettext domain="doc">The latest <get-var srctype /> source is available through the <a href="http://www.debian.org/doc/cvs">Subversion</a> repository.</gettext></p>
  <ul>
    <li><gettext domain="doc">Web interface: </gettext><a href="<get-var vcsweb />"><get-var vcsweb /></a></li>
    <li><gettext domain="doc">VCS interface: </gettext><tt>svn co <get-var vcsrepo /></tt></li>
  </ul>
 </when>
# Generic CVS repo access (unused)
 <when <match <get-var vcstype /> "cvs" action=report />>
  <p><gettext domain="doc">The latest <get-var srctype /> source is available through the <a href="http://packages.debian.org/cvs">Cvs</a> repository.</gettext>i</p>
  <ul>
    <li><gettext domain="doc">Web interface: </gettext><a href="<get-var vcsweb />"><get-var vcsweb /></a></li>
    <li><gettext domain="doc">VCS interface: </gettext><tt>cvs -d <get-var vcsrepo /></tt></li>
  </ul>
 </when>
# Generic Subversion repo access (used)
 <when <match <get-var vcstype /> "svn" action=report />>
  <p><gettext domain="doc">The latest <get-var srctype /> source is available through the <a href="http://packages.debian.org/subversion">Subversion</a> repository.</gettext></p>
  <ul>
    <li><gettext domain="doc">Web interface: </gettext><a href="<get-var vcsweb />"><get-var vcsweb /></a></li>
    <li><gettext domain="doc">VCS interface: </gettext><tt>svn co <get-var vcsrepo /></tt></li>
  </ul>
 </when>
# Generic Git repo access (used)
 <when <match <get-var vcstype /> "git" action=report />>
  <p><gettext domain="doc">The latest <get-var srctype /> source is available through the <a href="http://packages.debian.org/git">Git</a> repository.</gettext></p>
  <ul>
    <li><gettext domain="doc">Web interface: </gettext><a href="<get-var vcsweb />"><get-var vcsweb /></a></li>
    <li><gettext domain="doc">VCS interface: </gettext><tt>git clone <get-var vcsrepo /></tt></li>
  </ul>
 </when>
  <restore name index baselink langs formats path loc txt version cvsname naming srctype vcstype vcsweb vcsrepo />
</define-tag>

<define-tag inbfdcvs>
  <p><gettext domain="doc">CVS sources working copy: set <code>CVSROOT</code>
  to <kbd>:ext:<var>userid</var>@cvs.debian.org:/cvs/debian-boot</kbd>,
  and check out the <kbd>boot-floppies/documentation</kbd> module.</gettext></p>

  <p><a href="http://cvs.debian.org/boot-floppies/documentation/?cvsroot=debian-boot">
  <gettext domain="doc">CVS via web</gettext></a></p>
</define-tag>

<define-tag inpackage>
  <gettext domain="doc">Debian package</gettext>
  <strong><a href="http://packages.debian.org/%0">%0</a></strong>
</define-tag>
<define-tag insrcpackage>
  <gettext domain="doc">Debian package</gettext>
  <strong><a href="http://packages.debian.org/src:%0">%0</a></strong>
</define-tag>

<define-tag inoldpackage>
  <gettext domain="doc">Debian package (archived)</gettext>
  <strong><a href="http://archive.debian.net/%0">%0</a></strong>
</define-tag>
<define-tag inoldsrcpackage>
  <gettext domain="doc">Debian package (archived)</gettext>
  <strong><a href="http://archive.debian.net/src:%0">%0</a></strong>
</define-tag>

