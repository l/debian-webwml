#use wml::debian::template title="Cómo trabajar con las páginas web de Debian" BARETITLE=true
#use wml::debian::toc
#use wml::debian::translation-check translation="1.36"

<toc-display/>

<hrline />

<toc-add-entry name="general">Información general</toc-add-entry>

<h3>Recursos necesarios</h3>

<p>Si va a trabajar en nuestro sitio web, prepárese para almacenar al
menos 250 MB de datos en su disco. Esto refleja el tamaño actual del
archivo fuente. Si (por accidente) construye todas las páginas, necesitará
al menos el doble de espacio. Si sólo ha hecho una descarga parcial, será
mucho menos (por ejemplo, 50 MB para english/).</p>

<h3>Descargas parciales</h3>

<p>Mucha gente no descarga la totalidad del árbol CVS
<code>webwml</code>, lo que a veces conduce a tener ficheros perdidos o a
pruebas fallidas, en caso de que se haya añadido un fichero crucial y no
se haya hecho un <kbd>cvs update</kbd> completo en el directorio. Recuerde
comprobar que tenga todos los ficheros necesarios (como los .wmlrc) antes
de quejarse.</p>

<h3><q>¿Qué son esas líneas que empiezan con <q>#</q>?</q></h3>

<p>En WML, una línea que empieza por <q>#</q> es un comentario. Se
prefieren a los comentarios normales de HTML debido a que los primeros
no aparecen en la página final.</p>

<p>Por favor, lea la página sobre <a href="using_wml">el uso de WML</a> para 
obtener más información acerca de WML.</p>

<toc-add-entry name="etiquette">Etiqueta para los editores</toc-add-entry>

<h3><q>¿Puedo modificar tal página?</q></h3>

<p>Depende. Si ve un pequeño fallo, gramatical, por ejemplo,
arréglelo.</p>

<p>Si comprueba que falta algo de información, siéntase libre también de
arreglarlo.</p>

<p>Si alguna parte le parece horrible y necesita ser reescrita, coméntelo
en debian-www para que podamos discutirlo. Seguramente estaremos de
acuerdo con usted.</p>

<p>Si encuentra algún problema en una plantilla (o sea, un fichero en el
directorio webwml/english/template/debian), medite el cambio antes de
enviarlo, porque los cambios en las plantillas a menudo producen la
reconstrucción de grandes partes del sitio web.</p>

<H3>Cuando añada nuevos directorios, ¡añada también el Makefile!</H3>

<p>Debe prestar atención cuando añada directorios al CVS. Si el directorio
actual está listado en ../Makefile, entonces <b>debe</b> crear un Makefile
dentro suyo &mdash; porque si no, <tt>make</tt> mostrará un mensaje de
error.</p>

<h3>Use inglés claro y sencillo</h3>

<p>Ya que el web de Debian lo leen personas para las que el inglés no
es su idioma nativo y se traduce a varios idiomas, lo mejor es
escribir en inglés claro y sencillo y evitar el uso de jerga (slang) y
de palabras de idiomas extraños e inglés antiguo.</p>

<p>Si hace algo de esto, ponga un comentario en el fichero explicando
su significado.</p>

<h3>Busque ficheros README</h3>

<p>Algunos de los directorios contienen un fichero README para ayudarle a
entender cómo se organiza dicho directorio. Éstos deberían proporcionar
toda la información necesaria cuando se trabaja en ese área.</p>

<h3>Separe los cambios en el contenido de los cambios en el formato</h3>

<p>Haga siempre parches o commits separados para los cambios en el
contenido y los cambios en el formato. Cuando se combinan, es más difícil
para los traductores encontrar las diferencias. Si ejecuta
<kbd>cvs diff</kbd> con tales cambios, podrá ver el desastre usted
mismo.</p>

<p>En general, evite cambios aleatorios en el formato. No debería hacer
compatibles con XHTML/XML partes viejas de una página en el mismo commit
con otros cambios. (Las cosas nuevas pueden y deben hacerse adecuadamente
desde el principio, claro está.)</p>


<h3>Actualice las traducciones, también, si fuera posible</h3>

<p>Algunos cambios son idependientes del idioma usado en el fichero WML,
como cambios en una URL o en código Perl embebido. La corrección de fallos
al escribir también cae en esta misma categoría, puesto que los
traductores suelen ignorarlos al traducir.
Con este tipo de cambios independientes del idioma, puede hacer el mismo
cambio en todos los ficheros traducidos sin saber en realidad otros
idiomas, y modificar sin problemas la versión de la cabecera
translation-check.</p>

<p>No es que sea terriblemente duro para los traductores hacer el trabajo
ellos mismos, y puede ser inconveniente para editores anglo-parlates tener
que hacer un checkout completo sobre el que trabajar. Sin embargo,
animamos a la gente a que lo haga para evitar molestar a dos docenas de
personas por algo que podría hacer rápidamente una.</p>

<p>Además, para hacer más fácil aplicar estos cambios, puede usar el
script <code>smart_change.pl</code> del directorio superior en el módulo
webwml de CVS.</p>

<h4>Uso de smart_change.pl</h4>

<pre>smart_change.pl [opciones] ficheroorigen</pre>

<p>Actualmente sólo se permiten ficheros bajo <code>/english/</code> como
<var>ficheroorigen</var>. <code>smart_change.pl</code> admite los
siguientes argumentos:</p>

<dl>
      <dt><code>-s, --substitute=<var>REGEXP</var></code></dt>
      <dd>Especifica una expresión regular en perl que se aplica a los
       ficheros fuente (puede usarse más de una vez). Ejemplo:
      <pre>
         $&gt; ./smart_change.pl -s "s,http://urlvieja/,http://urlnueva/,g" english/devel/index.wml
	 $&gt; cvs diff -u */devel/index.wml | less
	 $&gt; cvs ci -m "1.23: urlvieja colocada en la ubicación actual" */devel/index.wml
       </pre>
       La primera orden hace el cambio; el segundo, simplemente checa el
       archivo original en Inglés y toda traducción de él. Debe hacer ésto
       para revisar los cambios actuales antes de enviar (commit). Si todo
       luce como ud. espera, envíe los cambios con el tercer comando.
      </dd>

      <dt><code>-l, --lang=<var>CADENA</var></code></dt>
      <dd>Procesa este idioma (puede usarse más de una vez). Si no se
       especifica el idioma, se procesan todos los disponibles.</dd>

      <dt><code>-n, --no-bump</code></dt>
      <dd>No incrementa las versiones en las cabeceras translation-check.
       Normalmente, la versión de cada cabecera translation-check se
       incrementa en uno en el fichero traducido que están al día, y se
       deja sin tocar en aquellos que están obsoletos.
       Si se especifica esta opción, no se toca ninguna cabecera
       translation-check. Vea <q>Cómo mantener las traducciones al día</q> si
       desea una <a href="uptodate">explicación sobre las cabeceras
       translation-check</a>.
      </dd>

      <dt><code>-p, --previous</code></dt>
      <dd>Muestra la revisión de CVS anterior. Esto es útil principalmente
       cuando el fichero en inglés ya ha sido enviado y quiere comprobar
       las cabeceras translation-check frente a la versión anterior.</dd>

      <dt><code>-h, --help</code></dt>
      <dd>Muestra una información breve sobre uso.</dd>

      <dt><code>-v, --verbose</code></dt>
      <dd>Muestra mensajes prolijos mientras funciona.</dd>
</dl>

<toc-add-entry name="links">Enlaces</toc-add-entry>


<h3>«Este enlace no parece correcto. ¿Debería cambiarlo?»</h3>

<p>Debido a la manera en que están configurados los servidores web
(utilizando <a href="content_negotiation">negociación de contenido</a>),
no tendría por qué cambiar ninguno de los enlaces internos. En realidad,
le sugerimos que no lo haga. Escriba a debian-www si piensa que un enlace
es incorrecto antes de cambiarlo.</p>

<h3>Correción de enlaces</h3>

<p>Si observa un enlace a un sitio web externo que resulta en una
redirección (301, 302, una redirección &lt;meta&gt;, o una página que diga
<q>Esta página ha cambiado de sitio.</q>), indíquelo por favor en debian-www.</p>

<p>Si encuentra un enlace roto (404, 403, o una página que no es lo que el
enlace dice), por favor, corríjalo e indíquelo en debian-www de manera que
los traductores se enteren. Incluso mejor aún, corrija el enlace en todas
las traducciones, y actualice las cabeceras translation-check si es
posible. :-)</p>

<toc-add-entry name="special">Separación de texto y datos</toc-add-entry>
 
<h3><q>¿Qué son esos ficheros algo.def y algo.data?</q></h3>

<p>Para facilitar que las traducciones estén al día, separamos las partes
genéricas (datos) de las partes textuales (texto), de algunas páginas. Los
traductores sólo necesitan copiar y traducir las partes textuales; ya que
las partes genéricas serán añadidas automáticamente.</p>

<p>Un ejemplo le ayudará a entenderlo. Se necesitan varios ficheros para
generar la página de vendedores:</p>
<dl>
  <dt><code>index.wml</code>:</dt>
      <dd>El texto en la parte superior de la página de vendedores está en
      este fichero. Se debería colocar una copia en el directorio de la
      traducción.</dd>
  <dt><code>vendors.CD.def</code>:</dt>
      <dd>Este contiene todas las secciones de texto que se necesitan para
      cada vendedor. Las traducciones deberían ser añadidas mediante
      <code>&lt;<var>language</var>&gt;/po/vendors.<var>xy</var>.po</code>.</dd>
  <dt><code>vendors.CD</code>:</dt>
      <dd>Este fichero contiene los datos reales de los vendedores que son
      independientes del idioma, de manera que un traductor no necesita
      tocar este fichero.</dd>
</dl>

<p>Cuando una de las personas detrás de <email "cdvendors@debian.org">
añade un nuevo vendedor, lo hace a <code>debiancd.db</code>, lo 
convierte en código WML como <code>vendors.CD</code> (usando
<code>getvendors.pl</code>), y deja que WML y los ficheros "makefile"
hagna su magia. Todas las traducciones son reconstruidas usando el 
texto ya traducido, pero con los datos del nuevo vendedor. ¡Una
traducción actualizada gratis! :-)</p>

<toc-add-entry name="newpage">Añadir nuevas páginas</toc-add-entry>

<p>Añadir nuevas páginas a Debian es bastante fácil. Todo el trabajo para
hacer correctamente la cabecera y pie de página se hace con WML. Todo lo que
usted necesita hacer es incluir una línea como la siguiente al principio de
cada fichero nuevo:</p>

<pre><protect>
#use wml::debian::template title="TÍTULO DE LA PÁGINA"
</protect></pre>

<p>seguido del cuerpo. Todas las páginas usan la plantilla
<code>wml::debian::template</code> a no ser que usen una especial creada solamente
para esa sección, por ejemplo, los apartados de noticias o seguridad.</p>

<p>Las plantillas que tenemos le permiten definir ciertas variables que
afectarán a las páginas creadas. Ésto debería evitar el tener que crear
diferentes plantillas para cada situación y permitir que las mejoras sean
más sencillas de implementar. Las variables que actualmente están disponibles junto
con su propósito son:</p>

<dl>
<dt>BARETITLE="true"</dt>
	<dd>Borra la parte "Debian GNU/Linux --" que usualmente se encuentra antes de
        todas las marcas &lt;title&gt;.</dd>
<dt>NOHEADER="true"</dt>
	<dd>Borrar la cabecera inicial de la página. Por supuesto, puede incluirse una cabecera
        personalizada en el cuerpo.</dd>
<dt>NOMIRRORS="true"</dt>
	<dd>Elimina la lista de servidores espejo de la página. No se
	recomienda su uso, excepto para un puñado de páginas.</dd>
<dt>NOHOMELINK="true"</dt>
	<dd>Borra el enlace de vuelta a la página principal de Debian, que normalmente
        se añade al final de la página.</dd>
<dt>NOLANGUAGES="true"</dt>
	<dd>Borra los enlaces de las versiones en otros idiomas que normalmente
        se añade al final de la página.</dd>
<dt>GEN_TIME="true"</dt>
	<dd>Configura la fecha de los ficheros resultantes con la marca de tiempo de los
        ficheros generados, en vez de la marca de tiempo del fichero fuente.</dd>
<dt>NOCOPYRIGHT="true"</dt>
	<dd>Borra la nota de copyright del final de la página.</dd>
</dl>

<p>Tenga en cuenta que puede usar cualquier cadena de caracteres como el valor
de estas variables,  <q>true</q>, <q>yes</q>, <q>foo</q>, da igual.</p>

<p>Un ejemplo de su uso se encuentra en las páginas de las migraciones (ports), que tienen
sus propias cabeceras. <code>ports/arm/index.wml</code> usa:</p>

<pre><protect>
#use wml::debian::template title="ARM Port" NOHEADER="yes"
</protect></pre>

<p>Si usted desea hacer algo que no puede hacer usando las plantillas existentes,
considere primero extender alguna de ellas. Si no es posible extender una de ellas
de una forma compatible con las versiones anteriores, intente hacer que la
plantilla existente sea un subconjunto de la nueva plantilla, de forma que
las páginas puedan convertirse a ésta en la siguiente actualización principal
(esperemos que nunca más de 6 meses).</p>

<p>Si usted crea una página que es generada por un script o tiene
poco texto, considere el uso de etiquteas &lt;gettext&gt; para facilitar la 
tarea de mantener las traducciones al día.
# think of a good example for <gettext> in new pages

<toc-add-entry name="inclusion">Incluir otros archivos</toc-add-entry>

<p>Si quiere separar algunas partes de su página en un archivo distinto 
   (que entonces se incluya en su archivo principal), utilice la extensión
   <code>.src</code> si su archivo contiene contenido que se debería traducir
   porque entonces a su archivo incluido se le hace un seguimiento de los 
   cambios como cualquier archivo <code>.wml</code> ordinario. Si su usa 
   cualquier otra extensión, como <code>.inc</code>, los traductores no
   tendrán noticias de sus actualizaciones y las diferentes lenguas pueden 
   mostrar contenidos diferentes. 

<toc-add-entry name="newdir">Añadir un nuevo directorio</toc-add-entry>

<p>Nota: <strong>no</strong> cree un directorio con el nombre
<code>install</code>. Ésto confunde a make y las páginas en ese directorio
no se actualizarán automáticamente.</p>

<p>Seguidamente se encuentra un ejemplo comentado de cómo añadir un
nuevo directorio <kbd>foo</kbd> al servidor web.</p>
<pre>
   mkdir foo
   cvs add foo
   cd foo
   cp ../intro/Makefile .
   cvs add Makefile
</pre>

<p>Edite el fichero Makefile en el directorio padre y añada el directorio
que acaba de crear en la variable <code>SUBS</code>. Ésto añadirá el
directorio a la construcción cuando ejecute make.</p>

<p>Finalmente, envíe todos los cambios recién hechos al repositorio con
</p>
<pre>
  cvs commit Makefile foo
</pre>
