#use wml::debian::template title="Programa electoral de Raphaël Hertzog" BARETITLE="true"
#use wml::debian::translation-check translation="1.65"

<h2>Presentación</h2>

<p>Mi nombre es Raphaël Hertzog. En el IRC me conocen como <i>buxy</i>. Soy un
estudiante francés de 23 años. La escuela donde estudio se llama 
"<a href="http://www.insa-lyon.fr">INSA de Lyon</a>" y formo parte del
<a href="http://www.if.insa-lyon.fr/if/">departamento de ciencia del ordenador</a>.
Tendré mi título de ingeniero este verano, después buscaré un trabajo relacionado
con el software libre (tengo esperanzas en que me deje más tiempo para trabajar en
Debian).

<h2>Historia en Debian</h2>

<p>Mi primer contacto con Linux fue con Debian 1.3. Se remonta a 1997.
Primero probé con Debian porque alguien me contó que tenía perl instalado por
defecto y porque había descubierto perl en Windows unos meses antes y 
había pensado que sería realmente fantástico. Sin embargo rápidamente borré 
mi partición Debian para probar otras distribuciones (RedHat principalmente).
Volví a Debian unos meses después por dos razones principales:
la usaban la gente más competente que yo conocía en mi LUG, y entendí que era
la única distribución donde verdaderamente podía ayudar e involucrarme.

<p>En 1998, ingresé en Debian como desarrollador y comencé con un paquete simple
llamado "<a href="http://packages.debian.org/sympa">sympa</a>". No era siquiera
DFSG libre (tenía una cláusula contra el uso comercial), sin embargo, la
licencia había sido corregida después de discutirlo con los autores originales.

<p>Rápidamente me interesé por el trabajo en convicción de calidad Debian que 
todavía era gestionado por Vincent Renardias. Él me inició. Comencé a buscar
paquetes que podían funcionar con mis destrezas en perl, y encontré
<a href="http://packages.debian.org/dpkg-ftp">dpkg-ftp</a> (el método ftp
de dselect). Lo recogí en un estado realmente malo y arreglé todos los
errores conocidos incluyendo la lista de sugerencias.

<p>En 1999, el equipo de debian-cd tenía un problema porque el guión no
fue realmente diseñado para gestionar múltiples CDs y slink fue la primera 
versión Debian que necesitó más de un solo CD. Por eso es por lo que escribí
YACS (Yet Another Cd Script, en inglés, aún otro script para Cd) (sin embargo 
usé partes del código del slink_cd de Steve McIntyre) que llegó a ser el 
debian-cd oficial para el lanzamiento de potato. Se caracteriza por un mejor 
diseño que puede manejar eficientemente múltiples CDs y CDs personalizados 
(puede personalizar fácilmente el contenido de los CDs). Todavía soy el 
mantenedor de debian-cd.

<p>También en 1999, tuvimos grandes problemas con el nuevo equipo de mantenedores.
Se cerraron las puertas por varias razones. Yo no estaba de acuerdo con esa 
decisión. Por eso es por lo que preparé el <a
href="http://lists.debian.org/debian-devel/1999/debian-devel-199907/msg01530.html">mecanismo
de esponsorización</a>. El principio es simple: cada futuro mantenedor tiene
un desarrollador oficial Debian que revisará su trabajo y que actualizará su
paquete Debian. Por supuesto, el desarrollador Debian comparte sus opiniones
sobre el paquete con el futuro mantenedor de manera que él pueda aprender sobre 
ello. Y de ello sobrevive el sistema de esponsorización incluso después de 
reabrir la puerta al nuevo mantenedor. Parecía ser una herramienta fantástica
para entrenar a los futuros desarrolladores y asegurarse que ellos comparten 
nuestros principios (Contrato Social, DFSG).

<p>Aún en 1999 (¡ no recordaba que hice tantas cosas durante el mismo año ! :-)),
ayudé a Darren Stalder a preparar perl-5.005 y gestioné la completa migración a 
perl (todos los módulos binarios tuvieron que ser recompilados, contacté con
todos los interesados e hice NMU a varios paquetes que no habían sido actualizados 
en  un tiempo). Al mismo tiempo escribí la primera versión de 
las <a href="http://www.debian.org/doc/packaging-manuals/perl-policy/">normas
perl</a>.

<p>Después de eso, trabajé para resucitar Debian QA. Preparé <a
href="http://qa.debian.org">qa.debian.org</a> (todavía existe pero el
contenido ha sido completamente actualizado desde entonces debido al buen
trabajo de otros trabajadores QA como Josip Rodin y Martin Michlmayr) y creé 
el comité QA. EL comité no existe ya porque no funcionó. Era un intento 
por "organizar" QA con un equipo que tiene que decidir lo que hacer y con 
trabajadores que hagan un trabajo real. Mi interpretación de este error es 
que era demasiado centralizado para Debian y que de hecho, no seguía el camino 
Debian, y por eso fallaba.

<p>Hoy día, estoy convencido de que para mantenerse con un duro trabajo y continuar
con una alta calidad, Debian tiene que adaptarse para prevenir problemas
(paquetes con mal mantenimiento, paquetes olvidados o no asignados a nadie, ...) 
desde que estos ocurran. Por eso es por lo que lancé el <a
href="http://lists.debian.org/debian-devel-announce/2002/debian-devel-announce-200201/msg00011html">sistema
de seguimiento de paquetes</a> con la ayuda de Anthony Towns. La idea principal
tras el PTS es que deberíamos tener más gente cuidando de cada paquete. Cuidar
puede entenderse como varias formas de ayuda al mantenedor (para otro desarrollador)
sólo para supervisar que el paquete está bien mantenido (para un usuario avanzado 
que cuidan de un paquete particular).

<p>Y durante todo ese tiempo, seguí muchas listas de correo y participé en
docenas de discusiones (y flames, incluso si intentaba esquivarlos porque 
normalmente pierdes el tiempo con ellos). También patrociné a muchos futuros
mantenedores y participé en varias fiestas de limpieza de errores. Y por
supuesto, hice mi trabajo normal como mantenedor: estuve manteniendo 5 módulos
perl, dpkg-ftp, debian-cd y logidee-tools.

<p>Con toda esta experiencia creo estar bastante familiarizado con Debian y su 
forma de trabajo. He mantenido contacto con mucha gente involucrada en todos los
aspectos clave en torno a Debian (boot-floppies, ftpmasters, gestor de
lanzamientos, mantenedores BTS, equipo de seguridad, equipo QA, equipo debian-www,
debian-admin, portadores y empaquetadores ...).

<h2>El papel del líder</h2>

<p>Mi opinión es que las principales tareas del líder son la "organización" y
la "comunicación".
<p>La organización concierne el trabajo interno de Debian, él tiene que 
asegurar que la infraestructura Debian está adaptada al trabajo Debian. Si es
necesario, debería iniciar proyectos para resolver problemas. Si quiere saber de qué 
clase de "infraestructura" estoy hablando, eche un vistazo a mi 
<a href="#projects">programa</a>.
<p>La comunicación puede ser dividida en dos categorías: interna y externa. El
líder tiene que estar en contacto con tanta gente como sea posible en Debian
y tiene que asegurar que todos caminan en la misma dirección. El líder también
representa a Debian en el mundo "exterior", él responde a las entrevistas, participa
en espectáculos y demás.
<p>Sin embargo siempre no es posible ir a cualquier lugar al que seas invitado
y por eso creo en la posibilidad de designar representantes locales del
líder (voluntarios por supuesto).
<p>En resumen, el líder tiene que asegurar que el trabajo Debian puede hacerse
en buenas condiciones y que todos los implicados se diviertan y puedan estar
orgullosos de lo que hacen...

<h1 align="center"><a name="projects">Proyectos para Debian</a></h1>

<p>Mi programa contiene tantos puntos que no puedo garantizar que
todos sean completados. Sin embargo haré todo lo posible para ver
muchos de ellos finalizados. Cada proyecto será asignado a una persona
responsable (se animará a los candidatos a contactar conmigo) que debería
mantenerme informado de sus progresos. Periódicamente publicaré mensajes
explicando como está cada proyecto y en qué estado se encuentra.

<p>Aquí hay una lista de todos los proyectos que me gustaría gestionar
durante el próximo año. Se clasifican en dos categorías:
<ul>
<li><a href="#organisation">1. Organización</a>
<ul>
<li><a href="#sf">1.1 Sourceforge para desarrolladores Debian</a></li>
<li><a href="#ping">1.2 Buscar a los mantenedores</a></li>
<li><a href="#adoption">1.3 Reclutar a gente para adoptar paquetes</a></li>
<li><a href="#l10n">1.4 Infraestructura de localización</a></li>
<li><a href="#security">1.5 Un segundo equipo de seguridad</a></li>
<li><a href="#release1">1.6 No mezclar los paquetes de la rama estable e inestable</a></li>
<li><a href="#release2">1.7 Congelaciones/Lanzamientos más frecuentes</a></li>
<li><a href="#pts">1.8 Extensión para el sistema de seguimiento de paquetes</a></li>
<li><a href="#cvs">1.9 Repositorio CVS para los directorios debian</a></li>
</ul>
</li>
<li><a href="#communication">2. Comunicación</a> (interna y externa)
<ul>
<li><a href="#dbpp">2.1 Mejores prácticas de empaquetado Debian</a></li>
<li><a href="#ddr">2.2 Actualizar el manual de referencia al desarrollador Debian</a></li>
<li><a href="#backup">2.3 Promocionar la idea de colaboración de mantenimiento y mantenedores reserva</a></li>
<li><a href="#dd-local">2.4 Crear más listas debian-devel-&lt;idioma&gt;</a></li>
<li><a href="#message">2.5 Anunciar las ofertas de Debian y las necesidades de actores para el software libre</a></li>
<li><a href="#upstream">2.6 Ponerse en contacto con los desarrolladores originales</a></li>
<li><a href="#bizcases">2.7 Promocionar Debian en la empresa</a></li>
<li><a href="#otherdistro">2.8 Confirmar y cooperar con las distribuciones basadas en Debian</a></li>
</ul>
</li>
</ul>

<hr width="100%" align="center">
<h2><a name="organisation">1. Organización</a></h2>

<h3><a name="sf">1.1 Sourceforge para los desarrolladores Debian</a></h3>
<p>Crear sourceforge.debian.org para permitir a los desarrolladores Debian
hospedar sus propios proyectos de software libre es una buena idea por varias
razones :
<ul>
<li>Los servicios de lista de correo tradicional y CVS proporcionados por
    Debian sólo son usados para proyectos de interés general para Debian.
    Los desarrolladores no pueden pedir listas de correo o repositorio
    CVS para un proyecto que no esté directamente relacionado con Debian (en
    particular si concierne sólo a poca gente). Aquí la herramienta sourceforge 
    permitiría a cada desarrollador tener una lista de correo o repositorio CVS
    (a través de todos los servicios sourceforge) para sus proyectos;</li>
<li>Todos los proyectos hospedados en sourceforge.debian.org deberían ser
    identificados como provenientes de la comunidad Debian y debería hacernos más
    visible como una parte activa de la comunidad del software libre;</li>
<li>Sourceforge es una buena manera de lanzar proyectos que queremos
    distribuir más allá de Debian. Tomaremos como ejemplo el menú de 
    sistema, ha sido desarrollado originalmente por Debian, aunque no es 
    realmente específico de Debian (Mandrake lo está reusando) pero si hubiera 
    estado en algún lugar donde la gente externa a Debian pueda ayudar 
    fácilmente, quizás ahora sería usada por más gente incluso;</li>
<li>Sourceforge puede ser una fantástica herramienta para permitir a los no
    desarrolladores trabajar en ciertas partes de Debian. Piensa en la
    documentación y los numerosos traductores.
</ul>
<p>Por supuesto, los proyectos hospedados en sourceforge.debian.org no 
necesitarían ser específicos de Debian. El único criterio sería que el 
proyecto debe ser pedido por un desarrollador Debian.

<hr width="75%" align="center">
<cite>
Como puede saber, he formado compartido esfuerzos en Debian-QA durante
bastante tiempo y por tanto, me gustaría hacerlo más popular y efectivo.
Mientras no tenga una solución milagrosa (podemos anunciarlo un poco
más, pero eso es parte de los proyectos de "comunicación"), tengo algunas 
tareas :
</cite>

<h3><a name="ping">1.2 Buscar a los mantenedores</a></h3>
Esta idea siempre surge una y otra vez, pero nadie la realizó. Martin
Michlmayr inició un seguimiento de los mantenedores MIA pero no contactó 
con todos, sólo con la gente que había sido reconocida como MIA por alguien 
más (que lo informaba a una gran lista de errores sin preguntas y así se
continuó). Es hora efectivamente de que lo hagamos a través del contacto 
con todos los mantenedores, ya tengan paquetes en mal estado o hayan 
desaparecido (de acuerdo con la información de echelon):
<ul>
<li>podemos detectar a mantenedores MIA y acoger sus paquetes correspondientes ;</li>
<li>podemos informar a los mantenedores del estado de sus paquetes y hacerles darse
    cuenta de que deberían encontrar algo de ayuda o acoger algunos paquetes
    si están en mal estado;</li>
<li>los mantenedores que olvidan que son desarrolladores Debian pueden desear la 
    retirada (yo preferiría que ellos volvieran al trabajo, pero si no piensan
    volver a Debian, entonces deberían retirarse de manera que se puedan reducir
    el riesgo de que sus claves sean pirateadas);</li>
</ul>

<h3><a name="adoption">1.3 Reclutar a gente para adoptar paquetes</a></h3>
<p>Como sabes, tenemos un número creciente de paquetes huérfanos y muchos más paquetes
que no lo son, pero deberían (ya que no son bien mantenidos). Tenemos dos soluciones
a los paquetes huérfanos; eliminarlos o encontrarles un mantenedor. La eliminación de
paquetes ya se hace desde hace tiempo por el equipo QA. Pero nadie está realmente 
intentando encontrar nuevos mantenedores. Poner la lista de paquetes huérfanos
disponibles en la web no es suficiente (de cualquier forma es incómodo ir a leerlo).
<p>Tenemos que crear un equipo que establezca contactos con los (antiguos y
actuales) mantenedores, antiguos contribuyentes que pueden encontrarse en el
BTS,
<p>Tenemos que formar un equipo que establezca contactos con los mantenedores (pasados 
y actuales), pasados contribuyentes que puedan encontrarse en el BTS, autores originales 
de paquetes y listas de correo especializadas en ese paquete. El fin es encontrar
un nuevo mantenedor y varias personas con motivación que se suscribirían al PTS
para ayudar a limpiar (y mantener) el paquete. Si no podemos encontrar un desarrollador
Debian actual, el equipo tendría que encontrar un patrocinador hasta que una de las 
personas interesadas llegase a ser un desarrollador oficial.
<p>Los mantenedores también podrían pedirla ayuda de este equipo para encontrar
"mantenedores de seguridad" y/o contribuyentes para ayudar en la gestión de su
paquete.
<p>Todo este trabajo se puede coordinar a través de un nuevo "paquete virtual" en
el BTS (parecido a "wnpp", sin embargo no se me ocurre un nombre).

<hr width="75%" align="center">
<cite>
Al ser francés, estoy bastante concienciado con los temas de localización ( e
internacionalización). Todavía nos queda mucho trabajo hasta alcanzar la
internacionalización completa. Creo que necesitamos una mejor infraestructura
de coordinación entre traductores, correctores y desarrolladores. El DDTP de 
Michael Bramer es un primer paso en esta dirección aunque generase muchas
discusiones en debian-devel...
</cite>

<h3><a name="l10n">1.4 Infraestructura de localización</a></h3>
No tengo una idea precisa todavía sobre como se debería configurar. Sin embargo
sé cuáles son los problemas que debemos gestionar:
<ul>
<li>Tenemos que traducir al menos (y mantener actualizadas) las plantillas
    debconf, las descripciones de los paquetes y el programa específico de
    Debian (mensajes y documentación). Lo siguiente implicaría coordinación
    con la gente que está trabajando en el software libre fuera de Debian;
    sería interesante, pero debería primero enfocarse en qué está directamente
    relacionada Debian.</li>
<li>Necesitamos una manera efectiva de distribuir el trabajo de traducción si 
    queremos que el DDTP de un paso magnífico.</li>
<li>Tenemos que asegurarnos que las traducciones sean enviadas e incluidas
    correctamente al BTS. Demasiados de ellos están todavía perdidos en el
    BTS incluso siendo muy fácil incluirlos.</li>
</ul>
También puedes mirar en <a href="http://www.debian.org/intl/l10n/">estadísticas
de traducción Debian</a> para aprender más sobre el proceso de localización
y ver la clase de información que la nueva infraestructura debería facilitar
(en tiempo real).

<hr width="75%" align="center">
<cite>
Después de años de buenos informes, Debian recientemente ha tenido mala publicidad
en la forma de gestionar las alertas de seguridad. Me gustaría hacer algunas mejoras.
</cite>

<h3><a name="security">1.5 Un segundo equipo de seguridad</a></h3>i
<p>Podemos crear un segundo equipo de seguridad que tendría acceso a la
misma información que el principal y que tuviese acceso a las mismas 
herramientas (rbuilder, ...). El fin principal de este segundo equipo sería
facilitar paquetes actualizados a las distribuciones no estables. Ellos 
también pueden puntualmente ayudar al equipo principal facilitando paquetes
preparados ya que sólo tengan que ser revisados (por el equipo principal).
<p>Este segundo equipo se coordina realmente con el mantenedor para 
conseguir una reparación rápida en inestable. Ellos también facilitan un 
paquete para "testing" (o cualquier otra distribución que pudiésemos 
presentar...) mediante la adaptación del parche si fuese necesario. Este
paquete reparado podría ser directamente puesto en testing o podría ser
simplemente proporcionado por security.debian.org/testing hasta que un 
paquete reparado entrase en testing).
<p>Este segundo equipo más o menos 
<a href="http://lists.debian.org/debian-security/2001/debian-security-200109/msg00225.html">existe ya</a>, 
pero no ha sido muy efectivo todavía. Necesita ser ampliado (dos personas
no son suficientes) y se necesita trabajar en la configuración de la
infraestructura requerida (no tenemos todavía rbuilders para todas las 
arquitecturas).

<hr width="75%" align="center">
<cite>
Todos vosotros sabéis que tenemos serios temas pendientes con la gestión de los
lanzamientos. No se le reprocha a Anthony Towns, él ha hecho un gran trabajo,
pero necesitamos ir un pasó más allá. Tengo algunas proposiciones pero 
todas ellas necesitan ser discutidas/modificadas. Sin embargo, no es hora aún
de discutirlas... Sólo os comento que pretendo trabajar en la mejora de la
gestión de lanzamientos porque la situación actual no es aceptable a largo
plazo. Todo esto es material para woody+1 por supuesto, Anthony continuará
gestionando el lanzamiento de woody y ¡ lo apoyaré tanto como necesite !
</cite>

<h3><a name="release1">1.6 No mezclar paquetes estables e inestables</a></h3>
Tenemos varios problemas con la situación actual:
<ul>
<li>testing deriva de inestable que consecuentemente atrae nuevas versiones
    de todos los paquetes (y nuevos errores al mismo tiempo);</li>
<li>cuando debemos proveer un paquete actualizado para testing, tenemos que
    pasarlo a través de inestable otra vez. Eso significa que el paquete puede 
    ser recompilado contra una versión más moderna de una biblioteca (que no
    estaba disponible todavía cuando la versión previa del paquete fue
    lanzada) que puede bloquearlo dentro de inestable (porque esa biblioteca 
    puede tener problemas u otros conflictos);</li>
<li>cuando trabajamos en paquetes de inestable no podemos bloquearlos en
    inestable sin archivar un error crítico de lanzamiento con ese propósito.
    Piensa en los paquetes pre-lanzamiento de GNOME 2. No deberían aparecer
    nunca en "testing" porque va a ser nuestra próxima "estable". Lo mismo se
    aplica a XFree 4.2, Branden no va a subirlo a inestable porque eso
    significaría que él puede hacer versiones actualizadas de XFree 4.1
    para testing ...</li>
</ul>
<p>Por eso es por lo que creo que necesitamos tener una distribución separada
completamente para la próxima estable en preparación e inestable. Está en la
mano del mantenedor decidir cuando su paquete está listo para ser incluido en
la distribución en preparación.
<p>En el resto de mi explicación, llamaré "trabajo" a la distribución en
preparación en la que los mantenedores deciden cuando subir paquetes
que creen que están en su conjunto listos para ser incluidos en una
distribución "estable".
<p>La gente todavía trabaja en inestable, pero cuando el paquete está listo
en inestable, se sube a "trabajo" ¡ y no antes ! Cualquier paquete subido
a trabajo es compilado contra trabajo.
<p>Eso permitiría (por ejemplo) a Branden subir xfree 4.2.0 a inestable
mientras se finaliza xfree 4.1 en trabajo. O, Gnome 2.0 puede ser preparada
fácilmente en inestable y mantener gnome 1.4 en trabajo sin preocupación.
Una vez un paquete (o un conjunto de paquetes) está listo en inestable, 
podríamos tener un guión poniéndolos en trabajo y todos los auto-constructores
(incluidos los de i386) los recogerán y los construirán. Eso puede prevenir
de códigos subidos innecesariamente que pueden provocar errores.
<p>Una de las consecuencias es que deberíamos tener auto-constructores
construyendo en trabajo tanto como en inestable. Eso significa que 
necesitaremos más auto-constructores y más chroots construidos ... pero se
requiere un paso para facilitar el funcionamiento del gestor de lanzamientos : 
cada mantenedor decide si su paquete cumple las condiciones para ir a estable. 
Una vez subido a trabajo, el gestor de lanzamientos sigue teniendo por supuesto
todavía la posibilidad de controlar qué acepta.
<p>¿ Y qué hay de testing ? Bien, lo mantenemos esencialmente como es.
Porque es fantástico para algunos de nuestros usuarios avanzados y es una buena
forma de ver si un paquete es un buen candidato para "trabajo" o no. Y nosotros
presentamos "liberable", que consiste en el resultado de "guiones de testing"
ejecutados contra "trabajo". "liberable" debería ser una distribución consistente
basada en paquetes funcionales. Eso es, no deberían estar muy lejos de tenerlos
listos para ser lanzados ...
<p align="center"><img src="http://people.debian.org/~hertzog/release-management.png" alt="Gestión de lanzamiento" width="465" height="251">

<h3><a name="release2">1.7 Estándar congelación ("paquetes principales Debian") regularmente</a></h3>

<p>Ya que la distribución "trabajo" está pensada sólo para paquetes
considerados buenos para su mantenedor, el sistema base/estándar contenido en
"trabajo" debería siempre ser el más preparado y puede ser congelado regularmente
(cada 8 meses) sin requerir más de unas semanas de trabajo. En este
momento, tenemos un período de uno o dos meses después de que la nueva
distribución estable sea lanzada (cualquier cosa puede ocurrir ... los
paquetes no estén listos en este momento serán eliminados).

<p>Esto ignora completamente a los boot-floppies, porque asumo que estos
deberían estar siempre preparados (si la nueva versión no está lista, entonces
la vieja debería ser útil).

<hr width="75%" align="center">
<cite>
Por último pero no menos importante, tenemos que ir más allá en la colaboración
para el mantenimiento de paquetes. Tengo dos ideas en mi mente:
</cite>

<h3><a name="pts">1.8 Extensión del sistema de seguimiento de paquetes (PTS)</a></h3>

<p>Yo implementé (con la ayuda de Anthony Towns para las modificaciones del BTS)
el sistema de seguimiento de paquetes. Pero se podría extender con una
interfaz web; cada paquete fuente tendría su propia página web (con una URL como
http://activity.debian.org/&lt;sourcepackage&gt;). Esta página pretendería ser el
portal de un paquete fuente. Incluiría muchos enlaces (al BTS, a las páginas
de comprobación de paquetes Debian, a packages.debian.org) y algo más de información 
(como la información provista por madison en auric). También tendría noticias como un 
sistema donde debian pueda añadirlas simplemente con un correo a 
&lt;sourcepackage&gt;@activity.debian.org, que estaría disponible directamente en la web.
Aquí hay una muestra de noticias que podrían ser interesantes:
<ul>
<li>Nuevos paquetes beta disponibles para pruebas</li>
<li>Se espera una versión final del paquete para el 15-02-2002 (para permitir
    a los traductores actualizar sus traducciones, por ejemplo)</li>
<li>El empaquetado está en proceso de reconstrucción</li>
<li>La versión X.Y-Z tiene fallos, cómo arreglar</li> 
<li>Henri Dupont trabaja en NMU</li>
<li>Mantenedor en vacaciones hasta el 12-02-2002 (si el mantenedor quiere
publicar esta información ... no sería obligatoria, por supuesto)</li>
<li>Nuevo fuente original disponible, planes de empaquetado<li>
<li>Jornada de depuración de errores en este paquete la próxima semana</li>
</ul>
<p>El mantenedor también puede añadir alguna información estática al paquete, 
como la forma en la que les gustaría que los NMUs fuesen hechos, o qué otros
recursos útiles están disponibles para ese paquete (sistema de seguimiento 
de paquetes original, canales de irc, listas de correo, ...).
<p>Esta extensión debería permitir a mucha más gente saltar rápidamente y conocer
la información esencial sobre el paquete. Los trabajadores QA pueden revisar
qué ocurre con el paquete, y en caso de congelación puede ser una invalorable
herramienta para indicar que un trabajador QA va a cuidar de este paquete.

<h3><a name="cvs">1.9 Repositorio CVS para los directorios debian</a></h3>
<p>Orto paso natural cuando la gente va a trabajar en el mismo paquete
es poner los archivos debian/* bajo control CVS. Necesitamos proveer
algo de espacio de disco en nuestro servidor CVS para esos propósitos.
Necesitamos una herramienta para crear automáticamente tal repositorio
(p.e. cada mantenedor podría requerir un repositorio CVS para su propio
paquete mediante la llamada a un programa en el servidor bueno). La 
integración con las herramientas de empaquetado deberían ser estudiadas
y deberían proveerse herramientas de ayuda (para actualizar, enviar,
gestionar ramas (estable/inestable) y ficheros de etiquetas cuando un 
paquete es subido y demás). cvs-buildpackage podría usarse para ese 
propósito.
<p>Supón que todos los desarrolladores Debian tienen permiso de escritura
en todos aquellos repositorios cvs, las ventajas son numerosas y el 
mantenedor principal puede tener todavía algún control:
<ul>
<li>El equipo de traducción podría enviar directamente las traducciones
    sin requerir trabajo del mantenedor;</li>
<li>Los NMU's no necesitarían enviar más un parche al BTS. El parche
    se aplica directamente al CVS; el mantenedor puede deshacerlo o
    mantenerlo;</li>
<li>Es bastante más fácil para el mantenedor tener co-mantenedores,
    no tiene que "centralizar" los parches. Sólo necesita actualizar su
    repositorio local de cuando en cuando;</li>
<li>Podemos mantener fácilmente dos versiones de los paquetes (estable e
    inestable por ejemplo) usando ramas CVS;</li>
<li>Los mantenedores pueden tener un correo por cada envío con el
    parche y el registro adjuntado. Con tal sistema él puede ver
    quién hizo qué, y detectar los errores potenciales.</li>
</ul>
<p>Por supuesto, este servicio debería ser opcional, los mantenedores no
deberían ser forzados a usarlo.


<!-- ##### -->
<hr width="100%" align="center">
<h2><a name="communication">2. Comunicación</a></h2>

Primero de todo, nuestra comunicación interna necesita ser mejorada. Algunas
cosas útiles sólo son conocidas por los mantenedores que siguen tanto
debian-devel como #debian-devel. Eso no es aceptable. Si hay cosas que son 
de interés para todos los desarrolladores deberíamos documentarlas (y 
anunciarlas en debian-devel-announce).

<h3><a name="dbpp">2.1 Las mejores prácticas de empaquetado Debian</a></h3>

<p>La primera vez que escuché esto fue en el IRC; fue una idea de Matthew
Wilcox. Como me gustaron verdaderamente los principios de esta idea, las he
incluido en mi programa.
<p>El DBPP va a ser un manual de referencia a todas las mejores soluciones
disponibles para mantener un paquete: usar DBS si tienes que gestionar varios
parches originales, usar debconf para interacción con el usuario, como manejar
los archivos de configuración que quieres auto-generar y demás. Hemos
acumulado años de experiencia que debemos capitalizar.

<h3><a name="ddr">2.2 Referencia del desarrollador Debian actualizada</a></h3>
<p>La referencia del desarrollador Debian es ya una invalorable documentación
   para los mantenedores, pero la tenemos descatalogada respecto
   a los recursos disponibles (documentar el PTS por ejemplo, y todos los
   otros proyectos completados y mencionados en la primera parte de mi programa).
<p>Además también se debería dar una lista de cosas que un desarrollador puede
   (o debería) hacer aparte de mantener sus propios paquetes (p.e. convicción
   de calidad, patrocinio, gestión de aplicación, trabajo en el instalador,
   participación en jornadas de supresión de fallos, ...).
<p>Podría beneficiarse también de más traducciones.

<h3><a name="backup">2.3 Promocionar la idea de colaboración de mantenimiento y mantenedores reserva</a></h3>
<p>La idea de colaboración de mantenimiento no está muy extensamente distribuida
   en Debian. Sólo unos pocos paquetes los gestiona un equipo completo. Esto tiene
   que cambiar. Tenemos que explicar lo útil que es estar varios mantenedores
   en cada paquete. Tenemos que documentar todos los recursos disponibles
   para los co-mantenedores (PTS, campo de subidas, CVS, ...).
<p>Para paquetes pequeños, donde varios mantenedores no son realmente necesarios,
   todavía es útil tener "mantenedores reserva", que pueden ayudar puntualmente
   como cuando el mantenedor está de vacaciones (o cuando el está verdaderamente
   ocupado=. Y como que ellos seguirían el  paquete, evitarán que el paquete sea 
   olvidado en el limbo ... :-)

<h3><a name="dd-local">2.4 Crear más listas debian-devel-&lt;language&gt;</a></h3>
<p>Yo creé debian-devel-french hace unos meses y sería interesante
   tener más listas dedicadas como esta (yo no tengo criterio
   para definir el "mayor idioma"). Estas listas son útiles, porque los 
   mantenedores que no siguen debian-devel pueden seguir el homólogo local que
   normalmente tiene mucho menos tráfico. Si llegan buenas ideas a la lista
   local, un mantenedor que siga ambas listas las reenviará. Lo contrario ocurre
   también; algunas cosas discutidas en debian-devel también se discuten en la
   lista local. La lista también sirve al propósito de debian-mentors pero en
   en lengua nativa (es más amigable y más fácil encontrar un espónsor en este
   contexto).

<hr width="75%" align="center">
<cite>
A pesar de lo abierto que es Debian, no estamos intentando comunicarnos demasiado
con la gente de fuera de Debian; sólo les permitimos encontrarse en los sitios web
de los que ellos quieren saber. Deberíamos ser más activos, debemos intentar 
contarles que los queremos conocer.
</cite>

<h3><a name="message">2.5 Un mensaje adaptado a cada grupo</a></h3>

Ciertamente tenemos muchas cosas que decir a todos. Sin embargo,
tenemos que adaptar nuestros mensajes a cada tipo de usuario. Exactamente
lo que nosotros vamos a contaros es lo que Debian puede ofrecerles y lo que
Debian necesita que le proporcionen. Aquí hay una lista de gente interesada y 
ejemplos de mensajes (la lista puede ser discutida y extendida por supuesto):

<ul>

<li>Un usuario medio
<ul>
<li>Cómo conseguir Debian (vendedores de CD's) y sus distribuciones derivadas</li>
<li>Dónde puede encontrar soporte Debian (de la comunidad o comercial)</li>
<li>Cómo donar (dinero o hardware) a Debian</li>
</ul>
</li>

<li>Un contribuyente (un usuario avanzado)
<ul>
<li>Cómo seguir la huella de un desarrollador Debian (pruebas, listas de correo, 
    PTS, ...)</li>
<li>Cómo ayudar sin ser desarrollador (traducciones, parches, realimentación, 
    convicción de calidad en general...)</li>
<li>Cómo conseguir un desarrollador para temas más concretos</li>
</ul>
</li>

<li>Un grupo de usuarios linux
<ul>
<li>Dónde encontrar material para fiestas de instalación, demostraciones,
    exposiciones, documentación, logos, imágenes de fondo bonitas, explicaciones
    de las ventajas de Debian, ...)</li>
<li>Soporte para novatos que descubran Debian a través de sus listas de correo
    local, ...)</li>
<li>Ofrecer facilidades a los usuarios Debian (espejos locales, vender CD's Debian, 
    ...)</li>
</ul>
</li>

<li>Un creador de software libre
<ul>
<li>Cómo pedir que alguien empaquete su software (RFP en wnpp)</li>
<li>Cómo seguir el paquete dentro de Debian (PTS, BTS)</li>
<li>Cómo ayudar al mantenedor y qué cooperación se espera de él)</li>
<li>Cómo conseguir un desarrollador para mantener el paquete él mismo</li>
</ul>
</li>

<li>Una compañía comercial
<ul>
<li>Cómo conseguir soporte comercial para Debian</li>
<li>Reconocer el uso de Debian ("Debian powered")</li>
<li>Donar a Debian (dinero o hardware)</li>
<li>Contratar a desarrolladores Debian para tu soporte interno y
    permitirles trabajar a jornada partida en Debian</li>
</ul>
</li>
</ul>

<h3><a name="upstream">2.6 Ponerse en contacto con los desarrolladores originales</a></h3>
<p>Tengo el presentimiento de que pocos mantenedores tienen
   contactos reales con los autores originales. Esto debería cambiar,
   deberíamos tener mejores contactos con ellos y deberíamos incluso 
   intentar reclutar a los desarrolladores originales que estén usando
   ya Debian. Deberíamos informarles de cómo pueden ayudar (sin que
   se molesten en acudir al desarrollador Debian) mediante la suscripción
   de sus paquetes al sistema de seguimiento de paquetes y tomando cuenta
   de los informes de errores que sean enviados.
<p>Cuanto mejor conozca Debian el autor original, mejor cooperación
   habrá. Eso es por lo que me gustaría que escribiéramos un tipo
   de "carta abierta a los autores de software libre" (que podría
   estar inspirada en la página descrita en el punto anterior) que
   cada mantenedor debería enviar a los desarrolladores originales
   de sus paquetes.

<h3><a name="bizcases">2.7 Promocionar Debian en la empresa</a></h3>
<p>Mientras Debian no sea una distribución comercial, esto significará
que podrá ser incluido en cualquier corporación o entorno comercial.
El desarrollador Debian en ese área se debería animar porque cuantas
más compañías conocen Debian, más donaciones puede haber, y más 
desarrolladores pueden cobrar por trabajar en Debian.
<p>Lo más simple que podemos hacer para esto es dar la posibilidad 
a los usuarios Debian de publicar dónde Debian ha sido usada y cómo ha
sido usada en el mundo corporativo (Mandrake hizo algo parecido a esto con
<a href="http://www.mandrakebizcases.com">MandrakeBizCases</a>).
<p>Ese sitio web podría también dar enlaces a páginas que pueden interesar
a las compañías explorar el uso corporativo de Debian. Estoy pensando en
las <a href="http://www.debian.org/consultants/">páginas de
consultores</a> o la lista de vendedores que ofrecen <a
href="http://www.debian.org/distrib/pre-installed">hardware con Debian
pre-instalada</a>.

<h3><a name="otherdistro">2.8 Confirmar y cooperar con las distribuciones basadas en Debian</a></h3>
<p>Todas las distribuciones que están basadas en Debian ayudan a Debian
en la distribución del formato de paquetes .deb y proporcionando otras
(y algunas veces más simples) formas de instalar Debian. Nosotros estamos
orgullosos de ellos porque siempre reusan muchas cosas de Debian, no
bifurcan proyectos por su causa, sino que añaden valor a Debian. Y la 
mayoría de las veces, contribuyen a ello.
<p>Por eso es por lo que creo que deberíamos tener una página web de
reconocimiento de su existencia (algo <a
href="http://www.debian.org/misc/related_links">existe ya</a> pero 
necesita que se mejore y sea más visible). También creo que deberíamos
reforzar las relaciones con ellos, sólo asegurar que los más interesante
se aporta a Debian.

<hr width="75%" align="center">
<cite>
Supongo que es suficiente, un año son sólo 365 días. :-) Si está interesado
en trabajar en alguno de esos proyectos, hazme saber de ti.
Por supuesto, hay muchos otros proyectos valiosos (un instalador más 
simple basado en debian-installer o el recientemente anunciado PGI,
detección de hardware estándar, ...) y espero que los logremos aunque
no esté realmente bajo la responsabilidad del DPL.
</cite>

<h2>Conclusión</h2>
<p>Gracias por su atención. Este próximo año va a ser muy excitante y
muy duro para el siguiente líder; él necesitará todo su apoyo. Por eso es
por lo que espero que todos voten en las próximas elecciones. Hasta entonces,
¡ diviértanse !

<p><hr>
<b><a href="mailto:hertzog@debian.org">Raphaël Hertzog</a></b>.
<p>



<hr>

<h1> Refutación </h1>
<h2> Sobre el programa de Bdale</h2>

<p>
No tengo mucho que decir sobre el programa de Bdale ya que estoy de acuerdo
con la mayoría de lo que dice. Sólo puedo reconocer su experiencia con
Debian y el invalorable trabajo que ya ha hecho. Comparto su visión de Debian;
sin embargo pienso que su programa carece de proposiciones concretas. Es 
perfectamente entendible porque puedes saber donde quieres llegar sin conocer 
como irás. Si es elegido, espero que vea que algunos de los proyectos que 
propongo van en la dirección que él quiere para liderarnos y que así él
los promocionará lo suficiente para llevarlos a efecto.
</p><p>
Mencionó que atendería muchos eventos en favor de su nuevo trabajo en los
laboratorios Linux de HP; así que sería más que feliz si quiere ser uno
de los representativos DPL.
</p>
<p>
Ciertamente<sup>*1</sup>, Bdale conseguiría mi apoyo para cualquier proyecto
concreto que a él le gustara lanzar relacionado con uno de los puntos
mencionados en su programa ("calidad", "lanzamientos predecibles",
"primera impresión del usuario", "infraestructura", "seguridad", "base estándar
de Linux").

<p>
[*1]  Bien, no puedo garantizarlo ya que no sé lo qué aquellos proyectos
serían... aunque digo eso porque sé que Bdale es muy razonable y siempre
ha hecho un buen trabajo. Tómalo como una prueba de confianza.
</p>

<h2> Sobre el programa de Branden</h2>

<p>
Branden es *alguien* dentro de Debian, nadie es indiferente a él.
La gente puede recordar cómo suavemente discutimos los unos con los otros. 
Me siento afín a las formas de hacer de Branden; deseo lo que desearía
cualquiera, al menos ellos no piensan herir cuando discuten con él. :-) 
Tengo que admitir que aprecio el esfuerzo de Branden para ser más 
comprensible y discutir sólo como un último recurso. ¡ Mantén tu esfuerzo ! ;-)
</p>

<p>
Él siempre ha hecho un gran trabajo con XFree86 y ha demostrado su
habilidad para gestionar otros temas no técnicos (tesorero del SPI es lo
primero que me viene a la mente pero también creo en varias de las 
proposiciones que ha hecho para cambiar la constitución o las políticas de
uso de máquina Debian, y también varias cosas que él ha gestionado en
debian-private que no puedo citar aquí :-)).
</p>

<p>
Aquí van mis comentarios sobre su programa. Además de comprender la motivación
de una definición más clara del papel del delegado DPL, creo que no es útil
para Debian y que es justo la clase de burocracia que no necesitamos. Los
equipos tienen buena presencia, la gente que son parte de ellos también,
y la forma de ponerse en contacto con ellos está documentada. No necesitamos
más que eso. "Mantener la base activa del desarrollador" y "la representación
en función de Debian" son dos puntos de su programa que comparto plenamente.
Los puntos "las relaciones de Debian con el SPI" y "reactivación del comité
técnico de Debian" son dos proyectos en los que no estoy interesado pero que 
son valiosos y persiguen un valor y por eso sería feliz permitiendo a
Branden gestionarlos como un delegado DPL.
</p>

<h2> Sobre mi programa</h2>


<p>
Llegado a este punto, no quiero cambiar nada en mi programa (excepto algunos
errores de ortografía :-)); creo que las clarificaciones necesarias ya se han
dado en debian-vote.
</p>

<p>
La mayor preocupación ha estado en torno a "SourceForge". No lo llamaremos
"SourceForge" para que sea obvio que no está afiliado a VA Research.
Pero usaremos el código sourceforge ya que está empaquetado y funciona.
Sin embargo si alguien llega con otro software libre con tantas características,
por supuesto que las consideraremos.
</p>
