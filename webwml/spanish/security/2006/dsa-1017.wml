#use wml::debian::translation-check translation="1.8" maintainer="Juan M. Garcia"
<define-tag description>varias vulnerabilidades</define-tag>
<define-tag moreinfo>
<p>Se han descubierto varias vulnerabilidades locales y remotas en el núcleo
  Linux, que podían provocar una denegación de servicio o la ejecución de
  código arbitrario.  El proyecto Common Vulnerabilities and Exposures identifica
  los siguientes problemas:</p>

<ul>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2004-1017">CVE-2004-1017</a>

    <p>Existían varios desbordamientos de buffer en el controlador io_edgeport, que
      se podían utilizar para un vector de ataques de denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-0124">CVE-2005-0124</a>

    <p>Bryan Fulton informó de que había un error en la comprobación de los límites
      en la función coda_pioctl, que podía permitir a los usuarios locales ejecutar
      código arbitrario o producir un ataque de denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-0449">CVE-2005-0449</a>

    <p>Se ha descubierto un error en la función skb_checksum_help() del entorno netfilter
      que permitía que se eludiesen las reglas de filtrado de los paquetes o que se
      provocase un ataque de denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-2457">CVE-2005-2457</a>

    <p>Tim Yamin descubrió que la validación de la entrada no era suficiente en el
      controlador zisofs para sistemas de archivos ISO comprimidos, y se permitía un
      ataque de denegación de servicio mediante imágenes ISO perniciosas.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-2490">CVE-2005-2490</a>

    <p>Un desbordamiento de buffer en la función sendmsg() permitía que los usuarios
      locales ejecutasen código arbitrario.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-2555">CVE-2005-2555</a>

    <p>Herbert Xu descubrió que la función setsockopt() no estaba restringida a los
      usuarios o procesos con la capacidad CAP_NET_ADMIN.  Esto permitía que los
      atacantes manipulasen las políticas IPSEC o que iniciasen un ataque de denegación
      de servicio. </p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-2709">CVE-2005-2709</a>

    <p>Al Viro descubrió una condición de fuga en la gestión de los dispositivos de
      red en /proc.  Un atacante (local) podía sacar provecho de la referencia dura
      después de apagar la interfaz para provocar una denegación de servicio o,
      posiblemente, ejecutar código en modo núcleo.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-2800">CVE-2005-2800</a>

    <p>Jan Blunck descubrió que las repetidas lecturas fallidas de /proc/scsi/sg/devices
      producían una debilidad en la memoria que permitía un ataque de denegación de
      servicio.</p></li>

<li><p><a href="http://security-tracker.debian.org/tracker/CVE-2005-2973">CVE-2005-2973</a>

    <p>Tetsuo Handa descubrió que la función udp_v6_get_port() del código de IPv6 se
      podía forzar a entrar en un bucle infinito, lo que podía permitir un ataque de
      denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3044">CVE-2005-3044</a>

    <p>Vasiliy Averin descubrió que los contadores de referencias de sockfd_put() y 
    fput() se podían forzar para provocar un solapamiento que podía permitir un ataque
    de denegación de servicio mediante una redirección a un puntero nulo.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3053">CVE-2005-3053</a>

    <p>Eric Dumazet descubrió que la llamada al sistema set_mempolicy() aceptaba un valor
      negativo para el primer argumento, que producía una aserción BUG().  Esto permitía
      un ataque de denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3055">CVE-2005-3055</a>

    <p>Harald Welte descubrió que si un proceso emitía un bloque de solicitud de USB (URB)
      a un dispositivo y terminaba antes de completar el URB, se podía perder la referencia
      a un puntero duro.  Este hecho se podía utilizar para producir un ataque de
      denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3180">CVE-2005-3180</a>

    <p>Pavel Roskin descubrió que el controlador para las tarjetas inalámbricas Orinoco
      limpiaba los buffers de forma insuficiente.  Esto podía dejar desprotegida información
      sensible en el espacio del usuario.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3181">CVE-2005-3181</a>

    <p>Robert Derr descubrió que el subsitema audit usaba una función incorrecta para
      liberar memoria, lo que podía permitir un ataque de denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3257">CVE-2005-3257</a>

    <p>Rudolf Polzer descubrió que el núcleo no restringía adecuadamente el acceso al ioctl
      KDSKBSENT, lo que posiblemente pudiera conducir a una escalada de privilegios.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3356">CVE-2005-3356</a>

    <p>Doug Chapman descubrió que se podía engañar a mq_open para decrementar dos veces su
      contador interno, lo que podía permitir un ataque de denegación de servicio mediante
      un kernel panic.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3358">CVE-2005-3358</a>

    <p>Doug Chapman descubrió que pasando una máscara de bits de cero a la llamada al sistema
      set_mempolicy() se podía producir un kernel panic, que a su vez permitía un ataque de
      denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3783">CVE-2005-3783</a>

    <p>El código de ptrace que utiliza CLONE_THREAD no utilizaba el id. del grupo thread para
      determinar si el llamante se estaba adhiriendo a sí mismo, lo que podía permitir un
      ataque de denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3784">CVE-2005-3784</a>

    <p>La funcionalidad automática de recolección automática de procesos hijo incluida en los
      procesos adheridos con ptrace podía permitir ataques de denegación de servicio
      mediante referencias perdidas.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3806">CVE-2005-3806</a>

    <p>Yen Zheng descubrió que el código de la etiqueta de flujo IPv6 modificaba una variable
      incorrecta que podía conducir a una corrupción de memoria y a una denegación de 
      servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3847">CVE-2005-3847</a>

    <p>Se descubrió que un proceso con hilos a tiempo real que estuviese volcando el núcleo
      podía verse obligado a una situación de interbloqueo enviando una señal SIGKILL, lo que
      podía permitir un ataque de denegación de servicio. </p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3848">CVE-2005-3848</a>

    <p>Ollie Wild descubrió una debilidad en la memoria de la función icmp_push_reply() que
      podía permitir la denegación de servicios mediante consumo de memoria.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3857">CVE-2005-3857</a>

    <p>Chris Wright descubrió que la ubicación excesiva de comparticiones rotas de bloqueos
      de archivos en la capa VFS podía agotar la memoria y rellenar el registro del sistema,
      lo que podía permitir la denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-3858">CVE-2005-3858</a>

    <p>Patrick McHardy descubrió una debilidad de memoria en la función ip6_input_finish() del
      código IPV6, que también permitía la denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-4605">CVE-2005-4605</a>

    <p>Karl Janmar descubrió un error de signo aritmético en el código de procfs, del que se podía
      sacar provecho para leer memoria del núcleo, que podía revelar información sensible.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2005-4618">CVE-2005-4618</a>

    <p>Yi Ying descubrió que sysctl no aseguraba de forma adecuada el tamaño de un buffer, lo que
      permitía un ataque de denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2006-0095">CVE-2006-0095</a>

    <p>Stefan Rompf descubrió que dm_crypt no limpiaba una estructura interna antes de
      liberarla, lo que podía revelar información sensible.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2006-0096">CVE-2006-0096</a>

    <p>Se descubrió que los controles de capacidad del controlador SDLA estaban
      bastante relajados para las actualizaciones de firmware.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2006-0482">CVE-2006-0482</a>

    <p>Ludovic Courtes descubrió que get_compat_timespec() no realizaba un saneamiento de
      la entrada suficiente, lo que permitía un ataque local de denegación de servicio.</p></li>

<li><a href="http://security-tracker.debian.org/tracker/CVE-2006-1066">CVE-2006-1066</a>

    <p>Se descubrió que, en la arquitectura ia64, ptrace() permitía un ataque local de denegación
      de servicio, cuando estaba activado preemption.</p></li>

</ul>

<p>La matriz siguiente explica en qué versiones del núcleo y para qué arquitecturas
  se han corregido los problemas que se mencionaron anteriormente:</p>

<div class="centerdiv"><table cellspacing="0" cellpadding="2">
<tr><th>                           </th><th>Debian 3.1 (sarge)</th></tr>
<tr><td>Fuente                     </td><td>2.6.8-16sarge2</td></tr>
<tr><td>Arquitectura Alpha         </td><td>2.6.8-16sarge2</td></tr>
<tr><td>Arquitectura AMD64         </td><td>2.6.8-16sarge2</td></tr>
<tr><td>Arquitectura HP Precision  </td><td>2.6.8-6sarge2</td></tr>
<tr><td>Arquitectura Intel IA-32   </td><td>2.6.8-16sarge2</td></tr>
<tr><td>Arquitectura Intel IA-64   </td><td>2.6.8-14sarge2</td></tr>
<tr><td>Arquitectura Motorola 680x0</td><td>2.6.8-4sarge2</td></tr>
<tr><td>Arquitectura PowerPC       </td><td>2.6.8-12sarge2</td></tr>
<tr><td>Arquitectura IBM S/360     </td><td>2.6.8-5sarge2</td></tr>
<tr><td>Arquitectura Sun Sparc     </td><td>2.6.8-15sarge2</td></tr>
</table></div>

<p>La matriz siguiente muestra paquetes adicionales que se deben recompilar
  por motivos de compatibilidad o para utilizar las ventanas de esta
  actualización:</p>

<div class="centerdiv"><table cellspacing="0" cellpadding="2">
<tr><th>                        </th><th>Debian 3.1 (sarge)</th></tr>
<tr><td>kernel-latest-2.6-alpha </td><td>101sarge1</td></tr>
<tr><td>kernel-latest-2.6-amd64 </td><td>103sarge1</td></tr>
<tr><td>kernel-latest-2.6-hppa  </td><td>2.6.8-1sarge1</td></tr>
<tr><td>kernel-latest-2.6-sparc </td><td>101sarge1</td></tr>
<tr><td>kernel-latest-2.6-i386  </td><td>101sarge1</td></tr>
<tr><td>kernel-latest-powerpc   </td><td>102sarge1</td></tr>
<tr><td>fai-kernels             </td><td>1.9.1sarge1</td></tr>
<tr><td>hostap-modules-i386     </td><td>0.3.7-1sarge1</td></tr>
<tr><td>mol-modules-2.6.8       </td><td>0.9.70+2.6.8+12sarge1</td></tr>
<tr><td>ndiswrapper-modules-i386</td><td>1.1-2sarge1</td></tr>
</table></div>

<p>Le recomendamos que actualice inmediatamente el paquete del núcleo y que reinicie
  la máquina. Si ha compilado un núcleo personalizado con el paquete kernel-source,
  tiene que recompilar para utilizar las ventajas que aportan estas correcciones.</p>

<p>Esta actualización introduce un cambio en la interfaz binaria del núcleo. Los
  paquetes del núcleo que se ven afectados en Debian se han recompilado. Si ha realizado
  alguna modificación local, también tiene que recompilar esos paquetes. Debido al cambio
  en el nombre del paquete, tiene que utilizar <tt>apt-get dist-upgrade</tt> para
  actualizar su sistema.</p>
</define-tag>

# do not modify the following line
#include "$(ENGLISHDIR)/security/2006/dsa-1017.data"
# $Id$
