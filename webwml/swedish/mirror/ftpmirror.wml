#use wml::debian::template title="Sätta upp en spegel av Debianarkivet"
#use wml::debian::toc
#use wml::debian::translation-check translation="1.76"
#include "$(ENGLISHDIR)/releases/sid/archive.data"
#include "$(ENGLISHDIR)/releases/arches.data"

<toc-display/>

<toc-add-entry name="whether">Om du ska spegla</toc-add-entry>

<p>
Även om vi är glada för alla speglar, bör alla som vill sätta upp en spegel
försäkra sig om att de kan svara på dessa frågor innan de försöker starta
sin egen spegel:
</p>

<ul>
 <li>
  Behövs det en spegel här?
  Kanske finns det redan en spegel i närheten.
 </li>
 <li>
  Har jag de resurser som behövs för att stå värd för en spegel?
  Speglar tar upp betydliga <a href="size">mängder diskutrymme</a> och 
  bandbredd, en kostnad man måste vara beredd att ta.
 </li>
 <li>
  Är en spegel rätt val?
  Några har av misstag börjat sätta upp en spegel när de egentligen ville
  ha en cachande mellanserver som <a 
  href="https://packages.debian.org/apt-proxy">apt-proxy</a>
 </li>
</ul>

<toc-add-entry name="what">Vad som bör speglas</toc-add-entry>

<p>
<a href="./">Ingångssidan för speglar</a> innehåller en förteckning över
vilka arkiv som är tillgängliga för spegling.
</p>

<ul>
<li>
Användarna kommer att leta efter debian/-arkivet för att installera Debian
över nätverket, att bygga cd:ar (med jigdo) och att uppgradera redan
installerade system.
</li>

<li>
debian-cd/ är ett arkiv som inte är identiskt hos alla spegelservrar.
På några platser innehåller det jigdo-mallar att bygga cd-avbildningar från
(används tillsammans med filer från debian/), på några innehåller det
färdigbyggda cd-avbildningar, och på vissa bådadera.
<br />
Se sidan om att <a href="$(HOME)/CD/mirroring/">spegla cd-avbildningar</a>
för vidare information om detta.
</li>

<li>
debian-archive/ innehåller det sanna <em>arkivet</em>, de gamla och
föråldrade versionerna av Debian.
Den är vanligtvis bara intressant för en liten del av användarna.
</li>
</ul>

<p>
Se vår sida om <a href="size">storlek på spegeln</a> för mer detaljerad
information om spegelstorlekar.
</p>

<p>
Arkiven i debian-security/ innehåller säkerhetsuppdateringar som släppts av
Debians säkerhetsgrupp.
Det låter intressant för alla, men eftersom säkerhetsuppdateringarna är
sporadiska måste man spegla den väldigt ofta för att hålla sig à jour (eller
använda <a href="push_mirroring"><q>push</q>-spegling</a>), så vi
rekommenderar det inte.
Debian gör allt som står i vår makt för att istället vidmakthålla
tillgängligheten hos security.debian.org.
</p>

<toc-add-entry name="wherefrom">Platser att spegla</toc-add-entry>

<p>Många tror att <code>ftp.debian.org</code> är <q>rätt</q> plats
för Debianpaket och att det är bäst att spegla därifrån.
Detta är <strong>inte korrekt</strong>.
</p>

<p>
<code>ftp.debian.org</code> är bara en av många servrar som uppdateras från
en intern Debianserver.
Adressen pekar för närvarande mot en enda adress och är mest där för
bakåtkompatibilitet.
</p>

<p>
<a href="official">Officiella speglar</a> är tänkta att vara bra platser att
spegla från.
Alla servrar i den <a href="list-full">kompletta spegellistan</a> som
är märkta <q><kbd>Type: Push-Primary</kbd></q> eller
<q><kbd>Type: Push-Secondary</kbd></q>
bör vara lämpade att spegla från.
Välj en som är nära dig både nätverksmässigt och geografiskt.
</p>

<p>
Det är i praktiken ingen skillnad mellan olika <em>Push-Primary</em>-speglar
vad gäller själva speglingen.
Å andra sidan, om många använder ftp.debian.org (vilket tyvärr sker) slösar
detta i onödan med donerad bandbredd.
</p>

<p>
Spegeladministratörer i Förenta Staterna bör spegla från ftp.us.debian.org
(den officiella spegeladressen i USA, vilken är en Push-Primary-spegel).
Men eftersom den adressen även är ett cirkulerande alias för flera maskiner
är det
oftast en bra idé att bestämma vilken av komponenterna som är bäst och
därefter spegla från just den.
<br />
<small>Fördelen med detta är att man undviker risken för misslyckanden när
man kör en tvåstegs-rsync (olika steg kan hamna hos olika maskiner under det
tidsfönster då de har olika data, vilket ger en kapplöpningseffekt).
Nackdelen är att den koncentrerar sig på en enda plats, vilket gör att
prestanda kan variera, men det är något som finns där i hela vårt
spegelnätverk för närvarande.</small>
</p>

<toc-add-entry name="how">Hur man speglar</toc-add-entry>

<p>
Den rekommenderade metoden för att spegla är med den skriptsamling
som kallas <a href="anonftpsync">ftpsync</a>
och finns tillgänglig på två sätt:
</p>
<ul>
    <li>som en tarboll från <url "https://ftp-master.debian.org/ftpsync.tar.gz"></li>
    <li>som ett gitarkiv: <kbd>git clone https://ftp-master.debian.org/git/archvsync.git</kbd></li>
</ul>

<p>
Vi rekommenderar starkt speglingsprotokollet anonym
<a href="https://packages.debian.org/stable/net/rsync">rsync</a>.
</p>

<p>
Vi ber dig att inte använda <kbd>wget</kbd> eller andra ftp-baserade
verktyg.
De verkar fungera bra, men har vissa problem (de kan inte detektera hårda
länkar, gör det svårare att ha en delvis spegling, osv).
</p>

<h3>Ställa in rsync</h3>

<p>
Vi rekommenderar att du använder
skriptsamlingen <a href="https://ftp-master.debian.org/ftpsync.tar.gz">ftpsync</a> för att spegla
arkivet.
Följ den medföljande README-filen för att sätta upp spegeln.
</p>

<p>
Om du använder dina egna skript, gäller att den minsta funktionaliteten
som måste stödjas är som följer:
</p>

<ul>
 <li>
  <p>MÅSTE genomföra en 2-stegssynkronisering.</p>
  <p>Arkivspeglingen måste göras i två steg.
  Den första rsync-körningen måste ignorera indexfilerna.
  Det korrekta valet av "exclude"-parametrar för
  den första rsync-körningen är</p>
  <kbd>--exclude Packages* --exclude Sources* --exclude Release* --exclude InRelease --exclude i18n/* --exclude ls-lR*</kbd>
  <p>Det första steget får inte ta bort några filer.</p>
  <p>Det andra steget måste sedan hämta de filer
  som exkluderades ovan och ta bort filer som inte längre hör hemma
  på spegeln.</p>

  <p>Motivering: om arkivspegling görs i ett enda steg,
  kommer det finnas
  tidsperioder då indexfilerna refererar till filer som inte har
  speglats ännu.</p>
 </li>

 <li>
   <p>FÅR INTE ignorera uppdateringar under körning (för <a href="push_mirroring">&rdquo;push&rdquo;-spegling</a>).</p>
  <p>Om en uppdatering tas emot under en körning av spegelsynkroniseringen FÅR den INTE
  ignoreras.  Hela synkroniseringsprocessen måste köras om.</p>

  <p>Motivering: de flesta implementationer av speglingsskript för Debian kommer lämna
  spegeln i ett inkonsekvent tillstånd vid hämdelse av en andra uppdatering
  som utförs medan den första synkroniseringen fortfarande körs.
  Det är troligt att uppdateringsfrekvensen kommer öka i framtiden.</p>
 </li>
 <li>
  Kör rsync med åtminstone dessa flaggor:
  <kbd>--recursive --times --links --hard-links --delete</kbd>.
 </li>

 <li>
  Om du har tillräckligt med diskutrymme bör även flaggan
  <kbd>--delete-after</kbd> användas för att undvika vissa temporära
  uppdateringsproblem.
 </li>

 <li>
  När rsync är färdig med sin spegling, lägg till en tidsstämpelfil i
  underkatalogen <code>project/trace/</code> på Debianspegeln, med din
  server som namn.
  Det betyder att du bör köra
  <kbd>date -u &gt; .../debian/project/trace/<var>din.server</var></kbd>
  när din dagliga rsync är färdig.
 </li>

 <li>
  Vi avråder å det bestämdaste att exkludera <tt>project/</tt>,
  <tt>doc/</tt> och andra kataloger.
  Dessa är normalt mycket små, men väldigt användbara för användarna.
  Speciellt <tt>project/trace</tt> är väldigt bra att ha om det är några
  problem med speglingsprocessen.
 </li>

</ul>

<toc-add-entry name="partial">Spegla delmängder</toc-add-entry>

<p>Med tanke på <a href="size">hur stort</a> Debianarkivet
redan är föredrar vissa att bara spegla de delar de behöver.
Om du vill undvara något bör du undvara arkitekturer.</p>

<p>Med det rekommenderade <a href="https://ftp-master.debian.org/ftpsync.tar.gz">ftpsync</a> kan detta göras genom att
redigera ARCH_EXCLUDE-variabeln.
Det finns även andra specialskrivna skript, de är dock inte lämpliga för
officiella speglar.
</p>

<p>Vi rekommenderar å det bestämdaste mot att exkludera <tt>project/</tt>,
<tt>doc/</tt> och andra underkataloger.
Vanligtvis är dessa inte speciellt stora men ändå användbara för användare.
Speciellt <tt>project/trace</tt> är väldigt bra att ha om det är några
problem med speglingsprocessen.
</p>

<p>
Du kan välja att använda andra specialskrivna skript, men det är oftast inte
nödvändigt, och rekommenderas inte för officiella speglar.
</p>

<toc-add-entry name="when">När du bör spegla</toc-add-entry>

<p>
Huvudarkivet uppdateras fyra gånger om dagen.
Speglarna börjar normalt uppdatera runt klockan 3:00, 9:00, 15:00 och 21:00 (alla tiderna
UTC), men dessa är inga fastslagna tider och du bör inte fixera dina speglar
runt dem.
</p>

<p>
Din spegel bör uppdatera ett par timmar efter en av huvudarkivets
spegelpulser.
Du bör se om platsen du speglar från skapar en tidsstämpelfil i sin
<kbd>project/trace/</kbd>-katalog.
Tidsstämpelfilen kommer ha samma namn som den platsen, och ange den
tidpunkt när senaste speglingskörningen slutfördes.
Lägg till ett par timmar på det (för att vara på den säkra sidan) och spegla
då.
</p>

<p><b>Det är väsentligt att din spegling är i synk med huvudarkivet</b>. Ett
minimum på 4 uppdateringar per 24 timmar säkerställer att din spegling är en
sann reflektion av arkivet. Var vänlig förstå att speglingar som inte är
i synk med huvudarkivet inte kommer att listas i de officiella
speglingslistorna.</p>

<p>Det enklaste sättet att automatiskt köra spegeln varje dag är att använda
cron.
Se <kbd>man crontab</kbd> för detaljer.
</p>

<p>
Om din plats blir <q>push</q>-speglad behöver du inte bry dig om något av detta.
</p>

<h3><q>Push</q>-styrd spegling</h3>

<p>
<q>Push</q>-spegling är en form av spegling med rsync vi har utvecklat
som minimerar tiden det tar för ändringar i huvudarkivet att nå speglarna.
En uppströmsspegel använder en SSH-utlösare som informerar nedströmsspegeln
om att den måste uppdateras.
<q>Pushningen</q> begränsas oftast till en säker utlösare som inte tar någon
variabel indata, så att resten av spegelfunktionen är en vanlig <q>pull</q>,
på samma sätt som för ett cron-jobb.
</p>

<p>
<q>Push</q>-spegling är nödvändig för att hålla flera servrar
synkroniserade (som servrarna för cirkulerande DNS-alias, till exempel
<tt>ftp.us.debian.org</tt>), och vi använder det vanligtvis för våra första-
och andranivåspeglar.
För <q>vanliga</q> speglar kräver detta en hel del arbete att ställa
in vilket egentligen inte är värt besväret jämfört med ett finjusterat
cron-jobb.
</p>

<p>
För en mer utförlig beskrivning av hur det fungerar, varför det är
säkert, och hur man sätter upp en <q>push</q>-spegel, se
<a href="push_mirroring">den kompletta förklaringen</a>.
</p>
<toc-add-entry name="settings">Rekommenderade ytterligare inställningar</toc-add-entry>

<p>Om du planerar att göra Debianspegeln tillgänglig över HTTP ber vi dig
lägga till följande inställningar till Apaches konfiguration (förutsatt,
naturligtvis, att du använder Apache), innanför blocket
<code>&lt;Directory <var>/sökväg/till/din/debianspegel</var>&gt;</code>,
där <code>/sökväg/till/din/debianspegel</code> är namnet på den
katalog du har spegeln i:
</p>

<pre>
   Options +Indexes +SymlinksIfOwnerMatch
   IndexOptions NameWidth=* +SuppressDescription
</pre>

<p>
Detta aktiverar katalogindex och försäkrar att symboliska länkar fungerar.
Filnamnen i katalogindexen kommer inte trunkeras och (de huvudsakligen
icke-existerande) beskrivningarna kommer inte att visas.
</p>

<p>
I Apache 1.3.x kan även följande alternativ läggas till:
</p>

<pre>
   DirectoryIndex .
</pre>

<p>
Lägg inte till detta alternativ för Apache 2.x.
</p>

<toc-add-entry name="submit">Lägga till en spegel i spegellistan</toc-add-entry>

<p>
När en spegel satts upp bör den <a href="submit">registreras hos Debian</a>
så att den kan läggas in i
<a href="list">spegellistan</a>.
Registrering kan göras via vårt <a href="submit">enkla webbformulär</a>.
</p>

<p>
Problem eller frågor kan ställas till
<email mirrors@debian.org>.
</p>
