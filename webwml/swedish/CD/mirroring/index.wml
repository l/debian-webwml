#use wml::debian::cdimage title="Spegla Debians cd-avbildningar" BARETITLE=true
#use wml::debian::toc
#use wml::debian::translation-check translation="1.8"

<p>
För att spegla Debians cd-avbildningar behöver du en Linux- eller
Unixliknande maskin med en permanent, pålitlig Internetanslutning.
</p>

<p>
CD-speglarna innehåller oftast jigdomallarna och vissa har även färdigbyggda
avbildningar.
Mallarna uppdateras vanligtvis via rsync från
<a href="../jigdo-cd/#which">en av de officiella platserna</a> och de
kompletta avbildningarna uppdateras med <kbd>jigdo-mirror</kbd>.
</p>

<toc-display>

<hr>

<toc-add-entry name="httpftp">Varför ftp och http <strong>inte</strong> är
lämpliga</toc-add-entry>

<p>Du bör <em>inte</em> använda ftp eller http för att hämta avbildningarna.
Dessa överföringsmetoder har en hög misslyckandepotential på grund av filernas
enorma storlekar.
</p>

<p>
Dessutom måste allt data hämtas på nytt även om avbildningarna bara ändras
minimalt (såsom sker för underutgåvor), något som medför hög belastning på våra
datorer och nätverksanslutningar.</p>

<toc-add-entry name="download">Hämta med rsync</toc-add-entry>

<p>
Av de orsaker som beskrivs ovan användere vi programmet
<a href="http://rsync.samba.org/"><tt>rsync</tt></a> vilket, kortfattat,
genomför fjärrbinärpatchning.
Med <tt>rsync</tt> kan avbildningar för underutgåvor uppdateras mycket
effektivt, eftersom endast de förändrade delarna sänds över nätverket; de
oförändrade delarna kopieras från den gamla avbildningen.</p>

<p>
För de som endast vill ha cd-avbildningar av Debian (och inte någon annan
sorts Debianspegel) och som inte har en näraliggande/snabb Debianspegel
(<kbd>debian/</kbd>) föreslår vi att <kbd>rsync</kbd> används i ett dagligt
cron-jobb.
</p>

<p>
Diu kan spegla från alla platser i
<a href="rsync-mirrors">denna spegellista</a>.
</p>

<p>
Använd åtminstone flaggorna
<strong><kbd>--times --links --hard-links --block-size=8192</kbd></strong>.
Detta kommer att bevara modifieringstid, symboliska länkar och hårda länkar, och
använda en blockstorlek om 8192 byte (mest effektivt för cd-avbildningar).
När modifieringstider och storlekar är desamma kommer <kbd>rsync</kbd> helt
enkelt att lämna filerna som de är, så <kbd>--times</kbd> är verkligen
obligatoriskt.
</p>

<toc-add-entry name="jigdomirror">Generera avbildningar med
jigdo-mirror</toc-add-entry>

<p>
Många har &rdquo;vanliga&rdquo; Debianspeglar (<kbd>debian/</kbd>), eller
har en sådan spegel i närheten, vilket innebär att de redan har de
.deb-filer som finns på cd-avbildningarna.
Den uppenbara frågan är &ndash; varför kan vi inte använda samma filer i
cd-avbildningarna?
</p>

<p>
<kbd>jigdo-mirror</kbd> är ett program som gör det möjligt att skapa en
Debian-cd-avbildning med filerna från en &rdquo;vanlig&rdquo; Debianspegel,
plus några få extra jigdo-mallfiler.
</p>

<p>
Observera att <kbd>jigdo-mirror</kbd> medföljer jigdo 0.6.8, men att denna
version inte finns i Debian 3.0 (&rdquo;Woody&rdquo;).
Det innebär bara att du måste hämta det separat, programmet fungerar utan
problem på &rdquo;Woody&rdquo;.
</p>

<p>
Först och främst behöver du jigdo-mallfilerna.
Dessa kan hämtas från de flesta officiella speglar, men de två primära
platserna är:
</p>

<ul compact>
  <li><kbd>rsync us.cdimage.debian.org::jigdo-area/</kbd> (USA-spegel)
  <li><kbd>rsync non-us.cdimage.debian.org::debian-jigdo/</kbd> (Europeisk spegel)
</ul>

<p>
Hämta filerna från underkatalogen
&lt;<var>version</var>&gt;/jigdo/&lt;<var>arkitektur</var>&gt; för varje
arkitektur du vill bygga avbildningar för.
</p>

<p>
Skapa en <kbd>~/.jigdo-mirror</kbd>-fil för att konfigurera programmet.
Detta är ett exempel:
</p>

<pre>
jigdoDir="/where/you/keep/mirrors/debian-cd/current/jigdo"
imageDir="/where/you/keep/mirrors/debian-cd/current/images"
tmpDir="/where/you/keep/mirrors/debian-cd/current/images"
debianMirror="file:/where/you/keep/mirrors/debian"
nonusMirror="file:/where/you/keep/mirrors/debian-non-US"
include='i386/|sparc/|powerpc/|source/'; exclude='-1\.'
</pre>

<p>
Variablenra <i>include</i> och <i>exclude</i> innehåller listan över
arkitekturer du vill skapa avbildningar för (eller snarare reguljära
uttryck).
För ytterligare information, se manualsidan för <kbd>jigdo-mirror</kbd>
eller själva källkoden (det är ett skalskript med massor av kommentarer).
</p>

<p>
När du konfigurerat det kör du bara <kbd>jigdo-mirror</kbd> varpå det gör
allting av sig självt.
Det kommer skriva ut en hel del utdata och antagligen ta ett tag, så vi
föreslår att du gör vad som krävs för att hantera detta (kör det i screen,
omdirigera utdata till en fil, osv).
</p>

<toc-add-entry name="pik">Generera avbildningar med pseudo-image kit och
debcdmirror</toc-add-entry>

<p><tt>rsync</tt> i sig självt utför fortfarande kompletta hämtningar av
&rdquo;helt nya&rdquo; utgåvor, eftersom de avbildningarna i stort sett inte
innehåller några oförändrade delar.
Med &rdquo;<span lang=en>pseudo-image kit</span>&rdquo; kan vi dock skapa
&rdquo;pseudo&rdquo;-cd-avbildningsfiler från data som redan är tillgänglig på
närmaste ftp-spegeln av Debian &ndash; kanske din egen lokala hårddisk.
<tt>Rsync</tt> kan sedan binärpatcha dessa &rdquo;pseudo-avbildningar&rdquo;
till officiella, något som till och med kan vara mer effektivt än att patcha
gamla avbildningar för nya underutgåvor.</p>

<p>
Informationen här kan vara föråldrad!
Vi rekommenderar att du antingen använder vanlig rsync eller testar
jigdo-mirror.
</p>

<p><span lang=en>Pseudo image kit</span> är huvudsakligen skrivet för att bara
hämta en eller ett par avbildningar, så som de allra flesta gör.
Förutom det finns även skriptet <tt>debcdmirror</tt> som gör speglingen
<em>riktigt</em> enkel eftersom automatiskt använder <span lang=en>pseudo image
kit</span> och <tt>rsync</tt> för att hålla din spegel à jour &ndash; till den
grad att den automatiskt kontrollerar MD5-kontrollsumman för varje hämtad
avbildning.
Med <tt>debcdmirror</tt> kan du ange exakt vad du vill spegla.</p>

<p>
Manuell användning av <span lang=en>pseudo image kit</span> (kanske
tillsammans med <tt>rsync</tt> för att uppdatera underutgåvor) betyder en
massa arbete och problem, så vi rekommenderar det inte.
</p>

<p>
I stället rekommenderar vi skriptet <tt>debcdmirror</tt> (vilket
&rdquo;internt&rdquo; använder <span lang=en>pseudo image kit</span> och
<tt>rsync</tt>) (dagligt cron-jobb).
</p>

<p>Senaste versionen av
<a href="http://cdimage.debian.org/~costar/pseudo-image-kit/" lang=en>pseudo
image kit</a> och skriptet
<a href="http://cdimage.debian.org/~costar/debcdmirror/"><tt>debcdmirror</tt></a>
är tillgängliga från författarens webbplats.
Läs README-filerna i de båda arkiven för omfattande information om hur de
fungerar.</p>

<p><strong>Observera:</strong>

<p>För skriptet <tt>debcdmirror</tt> måste du välja en <tt>rsync</tt>-spegel
som gör en &rdquo;<tt>ls-lR</tt>&rdquo; fil tillgänglig.
Adresser finns på <a href="rsync-mirrors">rsync-spegellistan</a>.
</p>

<p>Om du inte har en lokal
<a href="$(HOME)/mirror/">&rdquo;vanlig&rdquo; Debian-ftp-spegel</a>, se
<a href="$(HOME)/mirror/list">listan över speglar</a>.
</p>

<p>
<tt>debcdmirror</tt> kräver <tt>bash</tt> version 2 eller högre, vilket 
inte är något problem på ett modernt Debiansystem.
Om så krävs kan du installera det på en icke-förvald plats, men då måste du se
till att ändra sökvägen till <tt>bash</tt> på första raden i skriptet.</p>

<toc-add-entry name="test">Testavbildningar</toc-add-entry>

<p>Katalogerna &rdquo;<tt><i>kodnamn</i>_test</tt>&rdquo; innehåller avbildningar
som är hårdlänkade mot de i katalogerna med versionsnummer (t.ex
<tt>2.2_r4</tt>).
Versionskatalogen kommer att ändras mellan (under)utgåvorna, men namnen i
&rdquo;<tt>test</tt>&rdquo;-katalogerna kommer bevaras.
</p>

<p>
Så, om <tt>rsync</tt> används självt, är spegling av både katalogerna med
versionsnummer och lämpliga &rdquo;<tt>test</tt>&rdquo;-kataloger, <em>och</em>
använda flaggan <tt>--hard-links</tt> det enda sättet för rsync att uppdatera
underutgåvor ordentligt.
[Du bör <em>inte</em> inkludera &rdquo;<tt>test</tt>&rdquo;-katalogerna med
<tt>debcdmirror</tt>, eftersom <tt>debcdmirror</tt> hanterar situationen på ett
annat och mer effektivt sätt.]</p>

<toc-add-entry name="ls-lR">ls-lR-filer</toc-add-entry>

<p><tt>ls-lR</tt>-filen beskriver katalogstrukturen på den spegel den ligger på.
Spegla <strong>inte</strong> <tt>ls-lR</tt>-filen; skapa antingen en egen (med det
bifogade &rdquo;<tt>Makels-lR</tt>&rdquo; varje timme via <tt>cron</tt>) eller
ha helt enkelt inte någon <tt>ls-lR</tt>-fil alls.
[<tt>debcdmirror</tt> kommer automatiskt skapa en lokal <tt>ls-lR</tt>-fil efter
varje spegling.]</p>

<toc-add-entry name="serve">Dela ut filerna</toc-add-entry>

<p>När du har hämtat de cd-avbildningar du vill spegla (i386- och
källkodsskivorna är de mest populära) bör du köra
<tt>rsync</tt>-serverprogrammet.
Detta kommer inte att belasta din maskin speciellt mycket, och kommer generera
betydligt mindre nätverkstrafik än en ftp-/http-tjänst.
</p>

<p>
Instruktioner för hur detta ställs in finns i README-filen i
<span lang=en>pseudo image kit</span>.
Kortfattat innebär du att du lägger till <kbd>rsync --daemon</kbd> i din
<i>inetd</i>-konfiguration och ställer in <kbd>rsyncd.conf</kbd> så att den
passar dig.
Vi rekommenderar att du begränsar tillgången till ett fåtal anslutningar per
IP-adress, och som mest ett tvåsiffrigt tal som total mängd anslutningar.
</p>

<toc-add-entry name="register">Registrera spegeln i vår
lista</toc-add-entry>

<p>
För att göra din cd-avbildningsspegel användbar för en större målgrupp kan
du registrera den i vår spegellista, till exempel
<a href="../http-ftp/">denna</a> eller <a href="rsync-mirrors">denna</a>.
Eftersom de kompletta avbildningarna är stora filer kan detta skapa
flera gigabyte nätverkstrafik varje dag.
</p>

<p>
Du kan registrera dig antingen genom att fylla i
<a href="$(HOME)/mirror/submit">spegelanmälningsformuläret</a>
(observera att CDImage-fälten är de intressanta), eller genom att sända
e-post till
<a href="&#109;&#97;&#105;&#108;&#116;&#111;&#58;debian-cd&#64;lists.debian.org">debian-cd&#64;lists.debian.org</a>.
</p>

<p>
Vi uppskattar alla nya CD-avbildningsspeglar.
Tack på förhand!
</p>