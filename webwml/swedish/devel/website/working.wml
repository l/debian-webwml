#use wml::debian::template title="Hur man arbetar på Debians webbsidor"
#use wml::debian::translation-check translation="1.4"

<h2>Lägga till nya sidor</h2>

<p>Att lägga till nya sidor till Debian är rätt så enkelt, allt arbete med
att få sidhuvud och -fot rätt görs med wml.
Allt du behöver göra är att inkludera en rad ungefär som denna överst i den
nya filen:

<pre><protect>
#use wml::debian::template title="SIDTITEL" 
</protect></pre>

<p>följd av sidkroppen.
Alla sidor bör använda mallen <code>wml::debian::template</code>,
såvida de inte använder
en specialmall för just den sektionen, t.ex nyhets- eller säkerhetssidorna.

<p>Mallarna vi har tillåter dig definiera vissa variabler som
påverkar sidan som skapas, vilket bör minska nödvändigheten av att skapa
olika mallar för varje situation, och gör det enklare att implementera
förbättringar.
De variabler som för närvarande finns tillgängliga är:
<dl>
 <dt>BARETITLE="true"
 <dd>Tar bort "Debian GNU/Linux --"-delen som vanligtivs läggs till i
     början av alla &lt;title&gt;-märken.

 <dt>NOHEADER="true"
 <dd>Tar bort det inledande sidhuvudet från sidan.
     Ett speciellt sidhuvud kan naturligtvis inkluderas i sidkroppen.

 <dt>NOHOMELINK="true"
 <dd>Tar bort länken tillbaka till Debians huvudsida, vilken normalt
     sett läggs in nederst på sidan.

 <dt>NOLANGUAGES="true"
 <dd>Tar bort länken till de olika språkversionerna, vilka normalt
     sett läggs in nederst på sidan.

 <dt>GEN_TIME="true"
 <dd>Sätter datumet i den resulterande filen till datumstämpeln på
     den genererade filen, istället för datumet på källfilen.

 <dt>NOCOPYRIGHT="true"
 <dd>Tar bort upphovsrättsinformationen nederst på sidan.
</dl>

<p>Notera att du kan använda vilken sträng som helst som värde för dessa
variabler, "true", "yes", "löksoppa", det spelar ingen roll.

<p>Ett exempel på hur detta används finns på anpassningssidorna vilka
har sina egna sidhuvuden.
<code>ports/arm/index.wml</code> använder:

<pre><protect>
#use wml::debian::template title="ARM Port" NOHEADER="yes"
</protect></pre>

<p>Om du vill göra något som inte kan göras med de existerande mallarna bör
du först överväga om det går att utöka en existerande.
Om det inte är möjligt att göra det på ett bakåtkompatibelt sätt, försök
göra en ny mall som har en existerande som delmängd, så att de sidor som
använder den gamla kan konverteras till den nya vid nästa större uppdatering
(vilket förhoppningsvis inte behöver ske oftare än var sjätte månad).

<p>Om du skapar en sida som genereras av ett skript, eller som inte har så
mycket brödtext bör du överväga att använda wml:s "slices"-filter för att
göra det enklare att hålla översättningarna uppdaterade.
Ett bra exempel på detta är i <kbd>distrib/vendors.wml</kbd>, där nya
distributörer kan läggas till, vilket får till följd att tillägget
inkluderas i alla språkversioner automatiskt.
<kbd>vendors.wml</kbd> inkluderar <kbd>vendors.CD</kbd>, vilken innehåller
den faktiska listan.
Den filen inkluderar i sin tur <kbd>distrib/vendors.CD.def</kbd> som
innehåller definitionen av alla fraser i <kbd>vendors.CD</kbd>.

<p>
Översättare behöver bara lägga till översättningar för varje "slice", t.ex

<pre><protect>
	[EN:Country:]
	[ES:Pa-is:]
	[DE:Land:]
</protect></pre>

<h2>Lägga till nya kataloger</h2>

<p>Observera:
Skapa <strong>inte</strong> kataloger med namnet <code>install</code>,
då detta ställer till
problem med make vilka leder till att sidorna i den katalogen inte kommer
att uppdateras automatiskt.

<p>Nedan följer ett förklarat exempel om hur nya kataloger läggs till
webbplatsen:
<pre>
   mkdir foo
   cvs add foo
   cd foo
   cp ../intro/Makefile .
   cvs add Makefile
</pre>

<p>Redigera Makefile i moderkatalogen, och lägg till katalogen du just
skapade i <code>SUBS</code>-variabeln,
vilket kommer att lägga till katalogen till byggcykeln när make körs.

<p>Slutligen lägger du in alla ändringar du just gjort i CVS-trädet genom
att skriva
<pre>
  cvs commit Makefile foo
</pre>
