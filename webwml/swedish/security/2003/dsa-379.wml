#use wml::debian::translation-check translation="1.6" mindelta="1"
<define-tag description>flera sårbarheter</define-tag>
<define-tag moreinfo>
<p>
Alexander Hvostov, Julien Blache och Aurelien Jarno upptäckte flera
säkerhetsrelaterade problem i paketet sane-backends, vilket innehåller ett
API-bibliotek för bildläsare samt en bildläsarserver (i paketet libsane) som kan
utnyttjas utifrån.
Dessa problem gör det möjligt för en angripare utifrån att orsaka ett
segmenteringsfel och/eller konsumera godtyckliga mängder minne.
Angreppet lyckas även om angriparens dator inte listas i saned.conf.
</p>

<p>
Du är enbart sårbar om du bara kör saned via xinetd eller inetd eller liknande.
Om posterna i konfigurationsfilerna för xinetd respektive inetd är
utkommenterade eller inte existerar, är du säker.
</p>

<p>Testa &rdquo;<kbd>telnet localhost 6566</kbd>&rdquo; på servern som kan köra
saned.
Om du får &rdquo;förbindelse vägras&rdquo; körs inte saned och du är säker.
</p>

<p>
Projektet <span lang="en">Common Vulnerabilities and Exposures</span>
identifierar följande problem:
</p>

<ul>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0773">CAN-2003-0773</a>:

 <p>
 Saned kontrollerar inte identiteten (IP-adressen) hos fjärrvärden förrän efter
 den första kommunikationen ägde rum (SANE_NET_INIT).
 Så alla kan sända RPC, även om fjärrvärden inte tillåts läsa in bilder (inte
 finns med i saned.conf).
 </p>
</li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0774">CAN-2003-0774</a>:

 <p>
 Saned saknar felkontroll i stort sett överallt i koden, så avbrutna
 förbindelser upptäcks väldigt sent.
 Om den avbrutna förbindelsen inte upptäcks begränsas inte tillgången till den
 interna databufferten av det allokerade minnet, vilket gör att slumpmässigt
 minne &rdquo;efter&rdquo; databufferten läses, något som kommer att orsaka ett
 segmenteringsfel.
 </p>
</li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0775">CAN-2003-0775</a>:

 <p>
 Om saned förväntar sig strängar allokerar det det minne som behövs för att
 lagra den fullständiga strängen när den tagit emot storleken på strängen.
 Om förbindelsen bröts innan storleken sänts kommer malloc att reservera en
 godtycklig mängd minne.
 Beroende på den storleken och mängden tillgängligt minne misslyckas antingen
 malloc (&rarr; saned avslutar korrekt) eller så allokeras stora mängder minne.
 Växling och slut-på-minne-funktioner kan utlösas beroende på kärnan.
 </p>
</li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0776">CAN-2003-0776</a>:

 <p>
 Saned kontrollerar inte giltigheten på de RPC-nummer det får innan parametrarna
 hämtas.
 </p>
</li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0777">CAN-2003-0777</a>:

 <p>
 Om felsökningsmeddelanden har aktiverats och förbindelsen bryts, kan
 icke-nullterminerade strängar skrivas ut och segmenteringsfel kan orsakas.
 </p>
</li>

<li><a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2003-0778">CAN-2003-0778</a>:

 <p>
 Det är möjligt att allokera en godtycklig mängd minne på servern som kör saned
 även om förbindelsen inte bryts.
 För närvarande kan detta enligt författaren inte enkelt korrigeras.
 Bästa lösningen är att begränsa den totala mängden minne saned kan använda
 (ulimit).
 </p>
</li>
</ul>

<p>
För den stabila utgåvan (Woody) har detta problem rättats i version 1.0.7-4.
</p>

<p>
För den instabila utgåvan (Sid) har detta problem rättats i version 1.0.11-1
och senare.
</p>

<p>Vi rekommenderar att ni uppgraderar era libsane-paket.</p>
</define-tag>

# do not modify the following line
#include "$(ENGLISHDIR)/security/2003/dsa-379.data"
