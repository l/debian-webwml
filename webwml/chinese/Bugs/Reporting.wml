#use wml::debian::template title="Debian 錯誤追蹤系統" NOHEADER=yes NOCOPYRIGHT=true
#use wml::debian::translation-check translation="1.16"

# $Id$

<h1>如何回報 Debian 中的錯誤</h1>

<P>請依以下說明的方式<em>用英文</em>寄信給
<A href="mailto:submit@bugs.debian.org"><code>submit@bugs.debian.org</code></A>\
。</P>

<p>請您不要在同一封信中報告多個－－尤其是在不同套件之中的－－錯誤。也請您\
不要把錯誤報告寄給除了 <code>submit@bugs</code> 之外的其他收件人或是通信論\
壇（請參閱<A href="#xcc">以下</A>關於如何正確的做到這一點的說明）。</P>

<P>您可以在 <A href="./">WWW</A> 上以及<A href="Access">其他地方</A>找到目\
前仍未解決的錯誤表列－－詳情請參考其他文件。

<P>您必須在錯誤報告的內文開始的地方加入一些虛檔頭，其中您必須在以 \
<code>Package:</code> 及 <code>Version:</code> 開始的行後提供套件的名稱以\
及發生問題的套件版本號碼（這些虛檔頭的欄位必須從每一行的最前面開始，由於\
目前的錯誤追蹤系統仍然看不懂 MIME 和 PGP 的信件格式，因此錯誤追蹤系統可能\
會無法辨認出這些信件中的資訊。您可以用 <code>dpkg --search</code> 以及 \
<code>dpkg --list</code> 來取得這些資訊，詳情請參考 \
<code>dpkg --help</code> 的說明）。\
<em>請您也順便閱讀以下的<A href="#details">其他需求</A></em>。</P>

<P>系統中也有一些特殊的擬套件 (pseudo-package) 名稱，可以讓您用來列在 \
<code>Package</code> 欄位之中，以報告 Debian 軟體套件之外的其他問題。您\
可以在錯誤追蹤網頁上找到這些<A HREF="pseudo-packages">\
擬套件名稱的列表</A>。</P>


<h2><A name="example">實例</A></h2>

<P>一個包含標準的郵件檔頭的錯誤報告大致上看來像這個樣子：
<PRE>
  To: submit@bugs.debian.org
  From: diligent@testing.linux.org
  Subject: Hello says `goodbye'

  <A name="pseudoheader">Package: hello</A>
  Version: 1.3-16

  When I invoke `hello' without arguments from an ordinary shell
  prompt it prints `goodbye', rather than the expected `hello, world'.
  Here is a transcript:

  $ hello
  goodbye
  $ /usr/bin/hello
  goodbye
  $

  I suggest that the output string, in hello.c, be corrected.

  I am using Debian GNU/Linux 2.2, kernel 2.2.17-pre-patch-13
  and libc6 2.1.3-10.
</PRE>

<h2><A name="details">請在報告中加入以下資訊：</A></h2>

<ul>
<li>任何程式所輸出的<em>未經修改</em>而且<em>完整</em>的錯誤訊息或其他\
資訊。這非常非常重要！
<li>能夠用來重新複製這個問題的詳細方法（就是這個問題會在什麼時候發生）。
<li>關於您所發現的錯誤行為的詳細描述：包括您所期待的正確行為是什麼，以及\
您觀察到了什麼現象。您可以很輕鬆的用您和系統互動的完整過程紀錄來滿足這個\
條件。
<li>建議的修正方式，或者是補丁（如果您有的話）。
<li>發生問題的程式的詳細設定方式。請附上它完整的設定檔案內容。
<li>發生問題的套件所依賴的其他套件的版本號碼。
<li>您所用的系統核心版本（輸入 <code>uname -a</code>），C 共享函式庫版\
本（輸入 <code>ls -l /lib/libc.so.6</code> 或 <code>dpkg -s libc6 | \
grep ^Version</code>），以及\
關於您的 Linux 系統的其他資訊（如果您覺得有必要的話）。舉例來說，如果\
您有一個 Debian 的 Perl 腳本發生了問題的話，您大概就應該提供系統上 `perl' \
程式的版本（輸入 <code>perl -v</code> 或 <code>dpkg -s perl-5.005 | grep
^Version:</code>）。
<li>關於您系統硬體的適常資訊。如果您報告的問題和設備驅動程式相關的話，請\
列出您系統中<em>所有</em>的硬體設備，因為問題很可能是由 IRQ 以及 I/O 埠\
位址的衝突所造成的。
</ul>

<P>總而言之，請附上所有您覺得相關的資訊－－您不必擔心會因為附上了太多資\
訊而使得錯誤報告變成太過冗長。如果您在使用上發生問題的檔案不大的話，請\
您也將它們一併附上（如果是二進位檔或包含中文字的話，請用 uuencode 編碼）\
。</P>

<P>而當然的，就像其他任何的電子郵件一樣，您應該在信件的主檔頭中使用一個\
清楚而明瞭的 <code>Subject</code> 欄位來標示信件的主旨。您所選擇的信件標\
題將會成為這個錯誤在追蹤系統中最初的名稱，所以請儘量讓它能一目瞭然！</P>

<h2><A name="xcc">把錯誤報告的複本寄到其他位址</A></h2>

<P>錯誤報告的複本通常都會被轉寄到 <code>debian-bugs-dist</code> 通信論\
壇以及套件維護者的手中；但有些時候，您也會需要把錯誤報告的複本送到其他\
的地方。</P>

<P>您可以透過郵件軟體的 CC 功能來做到這一點，但這樣其他人收到的複本中\
就不會有錯誤追蹤系統在 <code>Reply-To</code> 以及 <code>Subject</code> \
欄位所加入的錯誤識別碼了。而當其他的收件人回信時，也可能會誤把 \
<code>submit@bugs.debian.org</code> 的地址留在主檔頭之中，因而把回信變成\
一個新的錯誤報告。這將會造成錯誤報告重覆的問題。</P>

<P>這件事情的<em>正確</em>做法是使用 <code>X-Debbugs-CC</code> 檔頭。\
請用以下的格式把應該收到複本的位址加到信件的主檔頭（而非包含了 \
<code>Package</code> 等欄位的虛檔頭）之中：</P>
<pre>
 X-Debbugs-CC: other-list@cosmic.edu
</pre>
<P>這會使得錯誤追蹤系統把您的錯誤報告的複本送到 <code>X-Debbugs-CC</code> \
所指定的位址以及 <code>debian-bugs-dist</code> 上。</P>

<P>這個功能也可以和 <code>quiet</code> 並用－－請見以下說明。</P>


<h2><A name="severities">嚴重程度</A></h2>

<P>不管錯誤報告中所描述的是一個非常嚴重的錯誤，或者是是希望能在其中加\
入一些新功能，您都可以在您送出錯誤報告時設定它的嚴重程度。當然這並不是必\
須的，如果您沒有這麼做的話，開發人員自然會為您的報告加上適常的嚴重程度\
。</P>

<P>請在虛檔頭中，除了 <code>Package</code> 和  <code>Version</code> 之\
外，再加入一行 <code>Severity: <var>嚴重性</var></code> 來標示錯誤的嚴\
重程度。您可以在<A href="Developer#severities">開發者天地</A>中找到嚴重\
程度的分級資訊。</P>


<h2>不要轉寄到通信論壇－－輕微的錯誤報告</h2>

<P>如果您所報告的錯誤是很輕微的（例如只是文件中的錯字或其他的小問題），
或者是您一次要報告很多個錯誤時，請改把您的報告送到 \
<code>maintonly@bugs</code> 或 <code>quiet@bugs</code> 去。
<code>maintonly</code> 只會把報告送給套件維護者（假設您在虛檔頭中有提供\
正確的 <code>Package</code> 資訊，而且我們知道維護者是誰的話），而 \
<code>quiet</code> 則不會把錯誤報告轉寄給任何人，而只把它歸檔到系統之中\
（舉例來說，這在您一次報告了很多錯誤，而想再加入一個摘要的時候就很好用
了）。</P>

<P>如果您這麼做的話，錯誤追蹤系統會把所有轉寄信件的 \
<code>Reply-To</code> 欄位設好，這樣所有的回覆都會和原本的錯誤報告一樣，
得到相同的處理。</P>

<h3>不知道是什麼套件的錯誤</h3>

<P>如果錯誤追蹤系統不曉得相關套件的維護者是誰的話，即使您使用的是 \
<code>maintonly</code> 位址，它還是會把報告轉寄到 \
<code>debian-bugs-dist</code> 去。</P>

<P>在您把任何東西寄給 <code>maintonly@bugs</code> 或 \
<var>nnn</var><code>-maintonly@bugs</code> 之前，您應在初始的錯誤報告\
的最前面加入 <code>Package</code> 欄位，或者是使用 \
<A href="server-control"><code>control@bugs</code> 服務</A>來把報告歸\
到正確的套件之上，以確保錯誤報告和套件之間的關連性。</P>

<h2>使用 <code>dpkg</code> 來找出報告中所需的套件名稱和版本號碼</h2>

<P>如果您是要報告某個指令的問題，您可以利用 <code>dpkg --search</code> \
來找出這個程式是由哪一個套件所安裝的。接下來，您可以再用 \
<code>dpkg --list</code> 或 <code>dpkg --status</code> 來找出您所安裝\
的版本號碼。</P>

<P>以下是一個實例：
<pre>
$ which apt-get
/usr/bin/apt-get
$ type apt-get
apt-get is /usr/bin/apt-get
$ dpkg --search /usr/bin/apt-get
apt: /usr/bin/apt-get
$ dpkg --list apt
Desired=Unknown/Install/Remove/Purge/Hold
| Status=Not/Installed/Config-files/Unpacked/Failed-config/Half-installed
|/ Err?=(none)/Hold/Reinst-required/X=both-problems (Status,Err: uppercase=bad)
||/ Name           Version        Description
+++-==============-==============-============================================
ii  apt            0.3.19         Advanced front-end for dpkg
$ dpkg --status apt
Package: apt
Status: install ok installed
Priority: standard
Section: base
Installed-Size: 1391
Maintainer: APT Development Team &lt;deity@lists.debian.org&gt;
Version: 0.3.19
Replaces: deity, libapt-pkg-doc (&lt;&lt; 0.3.7), libapt-pkg-dev (&lt;&lt; 0.3.7)
Provides: libapt-pkg2.7
Depends: libapt-pkg2.7, libc6 (&gt;= 2.1.2), libstdc++2.10
Suggests: dpkg-dev
Conflicts: deity
Description: Advanced front-end for dpkg
 This is Debian's next generation front-end for the dpkg package manager.
 It provides the apt-get utility and APT dselect method that provides a
 simpler, safer way to install and upgrade packages.
 .
 APT features complete installation ordering, multiple source capability
 and several other unique features, see the Users Guide in
 /usr/doc/apt/guide.text.gz

</pre>

<hr>

#use "otherpages.inc"

#use "footer.inc"
