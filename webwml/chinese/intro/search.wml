#use wml::debian::template title="如何使用 Debian 搜尋引擎"
#use wml::debian::translation-check translation="1.7"

# $Id$
# Translator: Franklin <franklin@goodhorse.idv.tw>, 2002/11/20
# Checked by foka, 2002/11/25

[[s/傳回/[CN:返回:][HKTW:傳回:]/g]]

#<P>The Debian search engine at <a href="http://search.debian.org/">http://search.debian.org/</a>
#will allow for different types of searching, depending on what you would like
#to do.
<p>Debian 的搜尋引擎在 <a href="http://search.debian.org/">http://search.debian.org/</a>，讓您可以依您的需要做不同型態的搜尋。</p>

#<H3>Simple Search</H3>
<h3>簡易搜尋</h3>

#<P>The simplest way of all is to enter a single word in the search box, and
#hit enter (or click the <em>Search</em> button). The search engine will then
#return all pages on the website that have that word in it. This will give
#you good results quite often.
<p>最簡單的搜尋方法就是輸入一個單字然後按下[CN:回車:][HKTW: Enter :]鍵或[CN:點擊:]「<em>搜尋 (Search)</em>」按鈕。搜尋引擎會找出含有那個單字的網頁。通常這樣就能找到想要的<tw資訊>。</p>

#<P>The next level up is to search for more than one word.  You have a
#choice:
<p>進一步的搜尋可以輸入多個單字。您可以選擇：</p>

<dl>
#<dt><em>search for all words</em>
<dt><em>搜尋所有單字</em></dt>
  #<dd>which will return pages that have all the words you typed
  <dd>會找到含有所有您所輸入的單字的網頁</dd>
#<dt><em>search for any words</em>
<dt><em>搜尋任一個單字</em></dt>
  #<dd>which will return pages that have any of the words you typed
  <dd>會找到含有任何一個您所輸入的單字的網頁</dd>
</dl>

#<H3>Boolean Search</H3>
<h3><tw布林>搜尋</h3>

#<P>If a simple search is not enough, then
#<a href="http://www.foldoc.org/foldoc/foldoc.cgi?query=boolean">boolean</a>
#may do the job for you. You have a choice of <em>and</em>, <em>or</em>,
#<em>not</em> and a combination of these three.
<p>如果簡易搜尋沒辦法滿足您的需求，那麼可以試試<a href="http://www.foldoc.org/foldoc/foldoc.cgi?query=boolean"><tw布林>搜尋</a>。您可以選擇<em>且(and)</em>、<em>或</em>、<em>否定(not)</em>等運算元，也可以任意組合它們。</p>

#<P><B>&amp; - logical AND</B> will return results where both words are in
#the page.  For example "gcc &amp; patch" will find any URLs have contain both
#"gcc" and "patch".
<p><b>&amp; - 且 (AND)</b> 運算元會傳回包含所有您輸入的單字的網頁。例如，
"gcc &amp; patch" 會找出所有包含 gcc 與 patch 兩個單字的網頁。</p>

#<P><B>| - logical OR</B> will return results where either word is in the
#page.  For example "gcc | patch" will find any URLs that have either "gcc"
#or "patch".
<p><b>| - 或(OR)</b> 運算元會傳回包含任何一個您輸入的單字的網頁。例如，
"gcc | patch" 會找出所有包含 gcc 這個單字，或者是包含 patch 這個單字的網頁。</p>


#<P><B>~ - logical NOT</B> excludes a word from the results.  You will usually use this with logical AND ( &amp; ) as it removes results from a list.
#For example "gcc &amp; ~patch" will find all URLs that contain "gcc" that do
#not also contain "patch".  Searching for just "~patch" will not return
#anything because you were searching for nothing, which returns nothing, and
#then removing pages that contain the word "patch" from the empty list, which
#of course still returns nothing.
<p><b>~ - 否定(NOT)</b> 運算元會將所輸入的單字排除。通常會與「且(and)」運算元\
一起使用，來排除包含特定字串的網頁。例如，"gcc &amp; ~patch" 會找出包含
gcc 這個單字，但裡面沒有 patch 這個單字的網頁。注意如果您只輸入 "~patch"
的話，將不會傳回任何結果。因為您並沒有指定要搜尋哪個單字，也就不會傳回\
什麼結果，而進一步的過濾排除 patch 這個字的動作自然也就不會有任何作用。</p>

#<P><B>() - grouping</B> adds even more complexity as you can now group
#logical blocks together.  For example "(gcc | make) &amp; ~patch" will find
#all URLs that contain either "gcc" or "make" but do not contain "patch".
<p><b>() - [CNHK:分組:][TW:群組:]</b>符號會將多個複雜的運算組合成一個單位。例如，
"(gcc | make) &amp; ~patch" 會找出所有含 gcc 或 make 單字的網頁，並排除\
含有 patch 單字的網頁。</p>
