<sect>Software available in the Debian system <label id="Software">
<P>
<sect1>What types of applications and development software are available for Debian GNU/Linux?
<P>
Like most Linux distributions, Debian GNU/Linux provides:
<itemize>
<item>the major GNU applications for software development,
file manipulation, and text processing, including gcc, libc,
g++, make, texinfo, the Bash shell and numerous upgraded
Unix utilities,
<item>Perl and its libraries,
<item>TeX, LaTeX, and dvips,
<item>the X Window System, which provides a networked graphical user
interface for Linux, and numerous X applications,
<item>a full suite of other networking applications, including WWW servers,
browsers, and development tools.
</itemize>
<!-- XXX keep numbers up-to-date -->
More than 2200 packages, ranging from news servers and readers
to sound support,
FAX programs, database and spreadsheet programs, image processing programs,
communications, net, and mail utilities, Web servers, and
even ham-radio programs are included in the distribution.
Another 400 software suites are available as Debian packages, but are not
formally part of Debian due to license restrictions.

<sect1>Who wrote all that software?
<P>
<itemize>
<item>For each package the <em>authors</em> of this program are
credited in the file <tt>/usr/doc/PACKAGE/copyright</tt>, where
PACKAGE is to be substituted with the package's name.

<item><em>Maintainers</em> who package this software for the Debian Linux system
are listed in the <ref id="CtlFile" name="Debian control file"> that comes
with each package.
</itemize>

<sect1>
How can I get a current list of programs that have been packaged for the Debian project?
<P>
A complete list is available from any of the
Debian <htmlurl url="https://www.debian.org/distrib/ftplist.html"
name="mirrors">.

<P>
The file <tt>indices/Packages-Master-i386.gz</tt> provides a list,
including short descriptions, of all packages that are available for
computers with 386 (or more advanced) chips.
The file <tt>indices/Packages-Master-m68k.gz</tt> provides a similar list
of packages that are available for computers with Motorola 680x0 CPUs.

<P>
The <htmlurl url="https://www.debian.org/distrib/packages.html" name="WWW
interface to the Debian packages"> conveniently summarizes the packages in
each of about twenty &dquot;sections&dquot; of the Debian archive.

<!--
, as well as the 10 most recently uploaded packages.  ???
-->

<sect1>What is missing from Debian GNU/Linux?
<P>
A list of packages which are most urgently needed for Debian
is maintained by Johnie Ingram under the name &dquot;Work-Needing and
Prospective Packages&dquot;. For more details, see the section
<ref id="contrib" name="on contributing to the Debian project">.

<sect1>(How) Does Debian support Java?
<P>
The Java Development Kit from Sun is currently available as a Debian
package (<tt>jdk_VVV-RRR.deb</tt>).  The JDK will allow you to run
Java programs and applets, and write your own.  If your kernel is
properly configured (see below), the JDK will allow you to
<em>run</em> Java programs just like other
executables.  The JDK package also includes a number of demo programs.
<P>
<!-- XXX general "how to load a module" section ? -->
Debian's kernel is configured with Java support built in as a module (i.e.,
CONFIG_BINFMT_JAVA=m).  Users who wish to build their own
<ref id="custker" name="custom kernel"> can of course omit this if
they choose.  Once module support is available in the kernel, you
need to make sure the module is loaded.  You can do it at boot time
by inserting the line <tt>binfmt_java</tt> in the file
<tt>/etc/modules</tt>.
Alternatively, you can install the module from the command line by
executing the command <tt>insmod DIRNAME/binfmt_java.o</tt> where
<tt>DIRNAME</tt> is the name of the directory where the modules that
have been built for the version of the kernel now running are stored.
On a system with the 2.0.36 version of the kernel,
<tt>DIRNAME</tt> is likely to be <tt>/lib/modules/2.0.36/fs/</tt>.
You can check that a module is loaded using the command
<tt>lsmod</tt>.
<P>
Running a Java applet requires a browser with the capability to
recognize and execute them.  The Netscape browser that can be installed
as a Debian package will run Java applets.  (The Netscape source code
is not publicly available.  The Debian netscape package provides
a wrapper which aids the installation
and management of Netscape on a Debian system.  This is actually a good
example of the integration of commercial packages with the Debian system.)
<P>
<!--
META:  Check whether/how Netscape can run Java programs.
-->
<P>
A final note of mixed blessings:
Sun's licensing policies on the JDK are becoming more restricted with time,
so this package may not be available as part of Debian soon.
It is possible that it may be available in the same way that Netscape is
available for Debian Linux.  Better news is that a number of programs are
currently being developed with may provide attractive publicly-available
alternatives.

<sect1>Where is pine?
<P>
Due to its restrictive license, it's in the non-free area. Moreover, since
license does not even allow modified binaries to be distributed, you have
to compile it yourself from the source and the Debian patches. For the
convenience of people using dselect, the source code for the Debian
version of pine is available in the packages <tt>pine396-src</tt> and
<tt>pine396-diffs</tt>. Releases of pine 4.x may be available in the source
directory from the <tt>project/experimental</tt> tree.

<sect1>How can I check that I am using a Debian system?
<P>
The existence of the program <tt>dpkg</tt> shows that you should be able
to install Debian packages on your system.

In order to make sure that your system has been installed from the
real Debian base disks check for the existence of
<tt>/etc/debian_version</tt>.

<sect1>
How can I tell what &dquot;version&dquot; of the Debian system I am using?
<P>
There is a file,
<tt><htmlurl url="file:/etc/debian_version" name="/etc/debian_version"></tt>,
which contains a single one-line entry giving the version number of the
release, as defined by the package <tt>base-files</tt>.
<P>
Users should be aware, however, that the Debian system consists
of many parts, each of which can be updated (almost) independently.
Each Debian &dquot;release&dquot; contains well defined and unchanging
contents.  Updates are separately available.  For a one-line description
of the installation status of package <tt>foo</tt>, use the command
<tt>dpkg --list foo</tt>.  (With no arguments, this command prints out
versions of all installed packages.)  For a more verbose description,
use <tt>dpkg --status foo</tt>.

<sect1>
How does Debian support non-English languages? <label id="nonEngl">
<P>
<itemize>
<item>Debian GNU/Linux is distributed with keymaps for nearly two dozen
keyboards, and with utilities (in the <tt>kbd</tt> package) to install, view,
and modify the tables.
The installation prompts the user to specify the keyboard he will use.
<P>
<item>Support for French-, German-, Italian- and Spanish-language manual pages is
provided through the <tt>manpages-fr</tt>, <tt>manpages-de</tt>, <tt>manpages-it</tt> and
<tt>manpages-es</tt> packages.  To access an NLS manual page, the user
must set LC_MESSAGES to the appropriate string.  In the case of the
German-language manual pages, LC_MESSAGES must be set to 'de_DE'.  The
<tt>man</tt> program will then search for German manual pages under
<tt>/usr/man/de_DE/</tt>.
</itemize>

<sect1>
What about the US export regulation limitations?
<p>
US laws place restrictions on the export of defense articles, which
includes some types of cryptographic software. PGP and ssh fall into
this category.
<p>
To prevent anyone from taking unnecessary legal risks, certain Debian
GNU/Linux packages are only available from a non-US site <url
url="ftp://non-us.debian.org/pub/debian-non-US/">, there is a list of
mirror sites <url
url="ftp://non-us.debian.org/pub/debian-non-US/README.mirrors">


<sect>The Debian FTP archives
<P>
<sect1>What are all those directories at the Debian FTP archives?
<label id="dirtree"><P>
<P>
The software that has been packaged for Debian GNU/Linux is
available in one of several directory trees on each Debian mirror site.

The directory <tt>dists</tt> contains the &dquot;distributions&dquot;,
and it is now the canonical way to access them.

<sect1>How many Debian distributions are there in the <tt>dists</tt> 
directory?
<P>
Normally there are two distributions, the &dquot;stable&dquot; 
distribution and the &dquot;unstable&dquot; distribution. Sometimes there
is also a &dquot;frozen&dquot; distribution.

<sect1>What are all those names like slink, potato, etc.?
<P>
They are just &dquot;codenames&dquot;. When a Debian distribution is in
the development stage, it has no version number but a codename. The
purpose of these codenames is to make easier the mirroring of the Debian
distributions (if a real directory like <tt>unstable</tt> suddenly changed
its name to <tt>stable</tt>, lot of Megabytes would have to be downloaded
again).
<P>
Currently, <tt>stable</tt> is a symlink to <tt>slink</tt> (i.e. Debian
2.1) and <tt>unstable</tt> is a symlink to <tt>potato</tt>, which means
that <tt>slink</tt> is the current stable
distribution and <tt>potato</tt> is the current unstable distribution.

<sect1>What about &dquot;frozen&dquot;?
<P>
When the unstable distribution is mature enough, it becomes frozen, and a
new unstable is created in the <tt>dists</tt> directory, having a new
codename. After a month or two of testing, the frozen distribution becomes
stable, it is released, and the previous stable distribution becomes
obsolete.

<sect1>Which other codenames have been used in the past?
<P>
Other codenames that have been already used are: <tt>buzz</tt> for Debian
1.1, <tt>rex</tt> for Debian 1.2, <tt>bo</tt> for Debian 1.3.x, and
<tt>hamm</tt> for Debian 2.0.

<sect1>Where do these codenames come from?
<P>So far they have been characters taken from the movie &dquot;Toy
Story&dquot; by Pixar.

<sect1>What about &dquot;sid&dquot;?
<P>
It is a special distribution for architectures which haven't yet been
released for the first time.
<P>
When sid did not exist, the ftp organization had one major flaw: there was
an assumption that when an architecture is created in the current
unstable, it will be released when that distribution becomes the new
stable. For many architectures that isn't the case, with the result that
those directories had to be moved at release time, chewing up lots of
bandwidth.
<P>
For those architectures not yet released, the first time they are
released there will be a link from the current stable to sid, and from then on
they will be created inside the unstable tree as normal.  sid will
never be released nor even accessed directly - only through symlinks
in the current stable, frozen, or unstable trees.  It will be a mix of
released and unreleased architectures.

<sect1>Where does the &dquot;sid&dquot; name come from?
<P>
Sid was the boy next door who destroyed toys :-)

<sect1>What does the stable directory contain?
<P>

<itemize>
<item>stable/main/:
This directory contains the packages which formally constitute the most
recent release of the Debian Linux system.

<item>stable/non-free/:  This directory contains
packages whose distribution is restricted in a way which requires that
distributors take careful account of the specified copyright requirements.
For example, some packages have licenses which prohibit commercial
distribution.  Others can be redistributed but are in fact shareware
and not freeware.  The licenses of each of these packages must be
studied, and possibly negotiated, before the packages are included in
any redistribution (e.g., in a CD-ROM).

<item>stable/contrib/: This directory contains packages which
are <em>freely distributable</em>, but do not meet the policy requirements for
distribution by the Debian project for some reason, e.g., the packages
have some unusual restriction on modification by other users, or are
only available in binary form.  For such packages, the project cannot given
the user any means to assure that they are free of Trojan horses, and
cannot port them to other architectures.  Binary-only packages which
are not freely redistributable are placed in the <tt>non-free</tt> directory.
</itemize>
<P>

<sect1>What does the unstable directory contain?
<P>
Unstable contains a snapshot of the current development system. Users are
welcome to use and test these packages, but are warned about their state
of readiness.

There are also main, contrib and non-free subdirectories in unstable.

<sect1>What are all those directories inside <tt>dists/stable/main</tt>?
<P>
Within each of the major directory trees (<tt>dists/stable/main</tt>,
<tt>dists/stable/contrib</tt>, <tt>dists/stable/non-free</tt>, and
<tt>dists/unstable/main/</tt>, etc.
but
not <tt>project/experimental/</tt>, which is too small to subdivide),
the binary packages reside in sub-directories whose names indicate the
chip architecture for which they were compiled:
<itemize>
<item>binary-all/, for packages which are architecture-independent.  These
include, for example, Perl scripts.

<item>binary-i386/, for packages which execute on 80x86 machines.

<item>binary-m68k/, for packages which execute on machines based on one
of the Motorola 680x0 processors.  Currently this is done mainly for
Atari and Amiga computers, and also for some VME based industry standard
boards.  There is no port of Linux to the old m68k based Macintoshes,
because Apple did not supply the needed hardware information.

<item>binary-sparc/, for packages which execute on Sun Sparcstations.

<item>binary-alpha/, for packages which execute on DEC Alpha machines.

<item>binary-powerpc/, for packages which execute on PowerPC machines.

<item>binary-arm/, for packages which execute on ARM machines.

<item>binary-hurd-i386/, for GNU/Hurd packages which execute on
80x86 machines.
</itemize>


<sect1>Where is the source code?
<P>
Source code is included for everything in the Debian system.
Most of the license terms of programs in the system <em>require</em> that
source code be distributed along with the programs, or that an offer to
provide the source code accompany the programs.
<P>
Normally the source code is distributed in the "source" directories,
which are parallel to all the architecture-specific binary
directories.
<P>
Source code may or may not be available for packages in the
&dquot;contrib&dquot; and &dquot;non-free&dquot; directories, which are
not formally part of the Debian system.

<sect1>Ok, what about the other directories not inside <tt>dists</tt>?
<P>
There are the following supplementary directories:

<itemize>

<item>&dquot;tools/&dquot;:  DOS utilities for creating boot disks, partitioning
your disk drive, compressing/decompressing files, and booting Linux.


<!-- Obsolete!

<item>&dquot;upgrades/&dquot;: Files needed for upgrading a debian-0.93 system
(based on <tt>a.out</tt> binary format files) to Debian-1.1 (or later,
based on <tt>ELF</tt> binary files).
Included are instructions for upgrading (either &dquot;manually&dquot; using
<tt>dpkg</tt>, or more automatically, using <tt>dselect</tt>),
along with a copy of the particular version of the package management
tool, <tt>dpkg</tt> that must be used in <tt>a.out</tt> systems to
start the upgrade,
and a list of files that will be needed in order to do the upgrade.

-->

<item>&dquot;doc/&dquot;:  Documentation, instructions on how to submit
bug reports.

</itemize>

Of particular interest to developers:

<itemize>
<item>&dquot;project/experimental/&dquot;: This directory contains packages
and tools which are being developed specifically for the Debian project,
and are still in the testing stage.  Users are welcome to use and test these
packages, but warned about their state of readiness.

<item>&dquot;private/project/Incoming/&dquot;:  Packages that have been
uploaded by developers, and which are awaiting placement in the directory
hierarchy by the distribution maintainer.

<item>&dquot;indices/&dquot;:  Various lists, including the
<tt>Packages-Master</tt> file.

</itemize>

<!-- </descrip> -->
