# Nothing in here should require any modification
# If you feel you need to modify something send mail
# to debian-www explaining why so that others can benefit
# from your improvements

RELHTMLBASE=../../debian.org
RELTEMPLDIR=../english/template/debian
CUR_YEAR=$(shell date +%Y)

HTMLDIR=$(WMLBASE)/$(RELHTMLBASE)/$(CUR_DIR)
TEMPLDIR=$(WMLBASE)/$(RELTEMPLDIR)
# Do Not modify the following line
ENGLISHSRCDIR=$(WMLBASE)/../english

WMLFILES := $(wildcard *.wml)

# Intermediate HTML files (.zh.html)
# to be converted to .zh-tw.html and .zh-cn.html
#
#HTMLFILES := $(patsubst %.wml,%.$(LANGUAGE).html,$(WMLFILES))
HTMLFILES := $(foreach i, $(SUBLANG), \
	$(patsubst %.wml,%.$(LANGUAGE)-$(i).html,$(WMLFILES)))

#HTMLDESTFILES := $(patsubst %.wml,$(HTMLDIR)/%.$(LANGUAGE).html,$(WMLFILES))
HTMLDESTFILES := $(foreach i, $(SUBLANG), \
	$(patsubst %.wml,$(HTMLDIR)/%.$(LANGUAGE)-$(i).html,$(WMLFILES)))

JPGSOURCE := $(wildcard *.jpg)
JPGDESTFILES := $(patsubst %,$(HTMLDIR)/%,$(JPGSOURCE))
GIFSOURCE := $(wildcard *.gif)
GIFDESTFILES := $(patsubst %,$(HTMLDIR)/%,$(GIFSOURCE))
PNGSOURCE := $(wildcard *.png)
PNGDESTFILES := $(patsubst %,$(HTMLDIR)/%,$(PNGSOURCE))
PSSOURCE := $(wildcard *.ps.gz)
PSDESTFILES := $(patsubst %,$(HTMLDIR)/%,$(PSSOURCE))
EPSSOURCE := $(wildcard *.eps)
EPSDESTFILES := $(patsubst %,$(HTMLDIR)/%,$(EPSSOURCE))
PDFSOURCE := $(wildcard *.pdf)
PDFDESTFILES := $(patsubst %,$(HTMLDIR)/%,$(PDFSOURCE))
FIGSOURCE := $(wildcard *.fig)
FIGDESTFILES := $(patsubst %,$(HTMLDIR)/%,$(FIGSOURCE))
XCFSOURCE := $(wildcard *.xcf.gz)
XCFDESTFILES := $(patsubst %,$(HTMLDIR)/%,$(XCFSOURCE))
CSSSOURCE := $(wildcard *.css)
CSSDESTFILES := $(patsubst %,$(HTMLDIR)/%,$(CSSSOURCE))
IMGFILES := $(JPGSOURCE) $(GIFSOURCE) $(PNGSOURCE) $(PSSOURCE) $(EPSSOURCE) $(PDFSOURCE) $(FIGSOURCE) $(XCFSOURCE) $(CSSSOURCE)
IMGDESTFILES := $(JPGDESTFILES) $(GIFDESTFILES) $(PNGDESTFILES) $(PSDESTFILES) $(EPSDESTFILES) $(PDFDESTFILES) $(FIGDESTFILES) $(XCFDESTFILES) $(CSSDESTFILES)

all:: $(HTMLFILES)
	@for i in $(SUBS) ''; do \
		if [ -d "$$i" ]; then \
			$(MAKE) -C $$i ; \
		fi ; \
	done

install::
	test -d $(HTMLDIR) || mkdir -p $(HTMLDIR)
install:: $(HTMLDESTFILES) $(IMGDESTFILES)
	rm -f $(HTMLDIR)/*.imgdot-1x1-transp.gif
	@for i in $(SUBS) ''; do \
		if [ -d "$$i" ]; then \
			$(MAKE) -C $$i install; \
		fi ; \
	done

$(IMGDESTFILES): $(IMGFILES)
	cp $(@F) $(HTMLDIR)

clean::
	-rm -f *.$(LANGUAGE).html
ifeq ($(LANGUAGE),zh)
	rm -f $(foreach i, cn tw, *.$(LANGUAGE)-$(i).html)
	rm -f $(foreach i, cn tw, *.$(LANGUAGE)-$(i).html.tmp)
endif
	@for i in $(SUBS) ''; do \
		if [ -d "$$i" ]; then \
			$(MAKE) -C $$i clean; \
		fi ; \
	done

cleandest::
	rm -f $(HTMLDIR)/*.$(LANGUAGE).html
ifeq ($(LANGUAGE),zh)
	rm -f $(foreach i, cn tw, $(HTMLDIR)/*.$(LANGUAGE)-$(i).html)
endif
	@for i in $(SUBS) ''; do \
		if [ -d "$$i" ]; then \
			$(MAKE) -C $$i cleandest; \
		fi ; \
	done


ifeq ($(LANGUAGE),zh)
cleansub::
	-rm -f $(foreach i, cn tw, *.$(LANGUAGE)-$(i).html)
	@for i in $(SUBS) ''; do \
		if [ -d "$$i" ]; then \
			$(MAKE) -C $$i cleansub; \
		fi ; \
	done

# Is there anyway to combine the following two rules into one?
$(HTMLDIR)/%.zh-cn.html: %.zh-cn.html
	@echo copying $(@F) to $(HTMLDIR)
	-@cp $(@F) $(HTMLDIR)
$(HTMLDIR)/%.zh-tw.html: %.zh-tw.html
	@echo copying $(@F) to $(HTMLDIR)
	-@cp $(@F) $(HTMLDIR)
# Create %.html -> %.zh-tw.html symlink if no English version of %.wml exists
	@if [ ! -f "$(WMLBASE)/../english/$(CUR_DIR)/$(*F).wml" ]; then \
		echo "Making a link $(@D)/$(*F).html -> $(@F)"; \
		ln -f -s $(@F) $(@D)/$(*F).html; \
	fi
endif
