#use wml::debian::template title="Push Mirroring"
#use wml::debian::translation-check translation="1.6" maintainer="Giuseppe Sacco"

<p>Il push mirroring è una modalità di mirroring basata su rsync che 
minimizza il tempo richiesto perché le modifiche all'archivio
principale raggiungano i mirror. Il server mirror usa un meccanismo
di attivazione per informare i client mirror che è richiesto un
aggiornamento.

<p>Il push mirroring richiede uno impegno di configurazione un po'
maggiore dal momento che gli amministratori dei mirror sorgente 
e destinazione devono scambiarsi delle informazioni. Il beneficio è che il
mirror sorgente fa partire il processo di copia immediatamente dopo
che il proprio archivio è stato aggiornato. Questo consente di propagare
in modo estremamente rapido le modifiche all'archivio.

<h2>Spiegazione della tecnica</h2>

<p>Prima qualche informazione su ssh. Ssh consente la connessione 
sicura ad account su macchine diverse. Non solo le password non sono
mai passate in chiaro, ma una volta connessi a una macchina hai la
garanzia di base che le connessioni successive avverrano sulla stessa
macchina. Questo previene molti attacchi di tipo man-in-the-middle.

<p>Una capacità che ha ssh è quella di estrarre la chiave pubblica
di identificazione di un utente su un'altra macchina ed aggiungerla
a un file di chiavi autorizzate sulla tua macchina.
Di default, l'utente sull'altra macchina (che ha la chiave privata
di identifacazione associata con quella pubblica fornita)
ha privilegi di accesso al tuo account. &Egrave; possibile però 
aggiungere del testo a una chiave registrata per restringere il tipo
di accesso consentito a chi usa tale chiave con il tuo account.

<p>Così per proteggere il  mirror destinazione, la chiave fornita
dal mirror sorgente ha del testo aggiunto ad essa per limitare chi 
accede all'account destinazione dando il permesso di fare una sola cosa - far
partire sulla macchina il programma che aggiorna il mirror.
Anche se qualcuno (una terza parte malintenzionata) fosse in grado
di forzare la chiave il massimo che potrebbe fare sarebbe far 
partire il programma di mirror sulla tua macchina.

Non hai neanche da preoccuparti che copie multiple del programma possano
essere avviate poiché viene usato un file di lock.

<p>Sulla sorgente, rsync può essere configurato per limitare chi può
accedere a una data area per username e password. Questi ultimi
sono totalmente indipendenti da <kbd>/etc/passwd</kbd> cosicché
un server push non deve preoccuparsi della possibilità di dare ad
altri accesso alla macchina. Come viene configurato, username e 
password sono passati in chiaro. Questo non dovrebbe essere un
problema però, poiché il peggio che possa accadere è che altri
possano copiare le pagine Debian da quel sito.

<h2>Configurare un client di push mirror</h2>

<p>&Egrave; meglio configurare usanto un account di utente ordinario,
invece di root. Il contenuto della chiave pubblica per ssh data 
dal mirror sorgente, dovrebbe essere copiato in 
<kbd>~&lt;user&gt;/.ssh/authorized_keys</kbd>.

<p>Per diventare un client push per l'archivio FTP, avrai bisogno
dei file <a href="ftpsync">ftpsync</a> e <a href="ftpsync.conf">ftpsync.conf</a>.
Apri con un editor ftpsync.conf e segui le direttive ivi contenute
usando le informazioni fornite dal mirror sorgente.

<p>Per diventare un client push per l'archivio FTP non-US, avrai bisogno
dei file <a href="ftpsync-non-US">ftpsync-non-US</a> e
<a href="ftpsync-non-US.conf">ftpsync-non-US.conf</a>.
Questi file hanno nomi diversi in modo che tu possa usare lo stesso
account per il mirror di entrambi gli archivi.

<p>Per diventare un client push delle pagine WWW, avrai bisogno
dei file
<a href="websync">websync</a> e <a href="websync.conf">websync.conf</a>.
Apri con un editor websync.conf e segui le direttive ivi contenute
usando le informazioni fornite dal mirror sorgente.

<h2>Siti client di tipo Push-Primary</h2>

<p>I mirror client di tipo Push-Primary, definiti anche mirror Tier-1, 
sono dei mirror push client ai quali è consentita la copia dai
nostri archivi master.

<p>Se il tuo sito è <strong>molto</strong> ben connesso (con banda
molto buona e ben connesso con i maggiori backbone) e hai la volontà
di lasciare che altri siti facciano mirroring dal tuo sito, puoi
farcelo sapere in modo da poterti prendere in considerazione come
push mirror.
Tuttavia, non ti aspettare che questo accada molto presto, perché
abbiamo già una certo numero di mirror Tier-1.

<p>Se il tuo sito sta diventando un Push-Primary per l'archivio
FTP, avrai bisogno della chiave pubblica per archvsync@ftp-master.debian.org;
una tra la versione <a href="identity.pub.master.ftp">SSH1</a> e la
<a href="id_rsa.pub.ftp-master">SSH2</a>.</p>

<p>Se il tuo sito sta diventando un Push-Primary per l'archivio FTP
non-US, ti occorrerà la chiave pubblica per archvsync@non-us.debian.org;
una tra la versione <a href="identity.pub.non-US.ftp">SSH1</a> e la
<a href="id_rsa.pub.non-US">SSH2</a>.</p>


<p>Se il tuo sito sta diventando un Push-Primary per le pagine WWW,
ti occorrerà la chiave pubblica per archvsync@www-master.debian.org;
una tra la versione <a href="identity.pub.master.web">SSH1</a> e la
<a href="id_dsa.pub.www-master">SSH2</a>.</p>

<h2>Configurare un server push mirror</h2>

<p>
Dato il gran numero di mirror e la dimensione dell'archivio Debian,
non è opportuno per tutti i mirror usare l'archivio del sito 
master come sorgente per Debian (cioè come proprio server push
mirror). &Egrave; molto più efficiente se il carico è distribuito
tra una serie di push mirror distribuiti nel mondo.

<p>I server push mirror dovrebbero essere client push mirror
dell'archivio master (o forse di un altro push server) e dovrebbero
contenere un mirror dell'intero archivio Debian.

<p>Vedi i <a href="push_server">dettagli di cofigurazione di un push server</a>.
