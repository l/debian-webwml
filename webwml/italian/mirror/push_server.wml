#use wml::debian::template title="Configurazione di un server push"
#use wml::debian::toc
#use wml::debian::translation-check translation="1.22" maintainer="Luca Monducci"

<p>La configurazione di un server <q>push</q> consiste essenzialmente di
due attività: la configurazione dell'accesso rsync (come per un normale
mirror di tipo <q>pull</q>) e la configurazione del meccanismo di
attivazione via ssh (per avviare il mirroring push).</p>

<p><small>(Per maggiori informazioni su cosa è un server push si veda
<a href="push_mirroring">la spiegazione sul push mirroring</a>.)</small></p>

<toc-display />

<toc-add-entry name="rsync">Configurazione di rsync</toc-add-entry>

<p>Installare <code>rsync</code> 2.1.1 o superiore. Se sul proprio
sito si utilizza Debian, è sufficiente installare il pacchetto
<a href="https://packages.debian.org/stable/net/rsync">rsync</a>
più recente.</p>

<p>Creare il file <code>rsyncd.conf</code> e inserirvi qualcosa di
simile a questo:</p>

<pre>
uid = nobody
gid = nogroup
max connections = 25
socket options = SO_KEEPALIVE

[debian]
  path = /srv/debian/mirror
  comment = The Debian Archive (~250 GB)
  auth users = authorized_account1,authorized_account2,authorized_accountN
  read only = true
  secrets file = /etc/rsyncd/debian.secrets
</pre>

<p>Aggiungere nel file <code>/etc/rsyncd/debian.secrets</code> una voce per
ogni sito verso cui si vuole effettuare il pushing:</p>

<pre>
authorized_account1:a_password
authorized_account2:another_password
authorized_accountN:password
</pre>

<p>Con questo si è dato accesso ai mirror destinazione all'archivio
sulla propria macchina.</p>

<p>Per far avviare il demone rsync da inetd si deve aggiungere il servizio
rsync nel file <code>/etc/services</code> (se non fosse già presente), in
questo modo:</p>

<pre>
rsync           873/tcp
</pre>

<p>Per abilitare il demone da inetd, aggiungere quanto segue al proprio file
<code>/etc/inetd.conf</code>:</p>

<pre>
rsync      stream      tcp         nowait      root /usr/bin/rsync rsyncd --daemon
</pre>

<p>(Ricordasi di inviare a inetd un segnale HUP per forzare la rilettura
del file di configurazione dopo la modifica).</p>

<toc-add-entry name="sshtrigger">Configurazione del meccanismo di attivazione con ssh</toc-add-entry>

<p>Creare una nuova chiave ssh per l'account usato dal mirror Debian.
Assicurarsi di non sovrascrivere la chiave ssh originale usando
l'opzione -f, per esempio:</p>

<pre>
ssh-keygen -f ~/.ssh/identity.mysite
</pre>

<p>Assicurarsi che la nuova chiave pubblica (~/.ssh/identity.mysite.pub)
contenga all'inizio questo, dove IPADDRESS è l'indirizzo IP del proprio
mirror di origine:</p>

<pre>
no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty,command="~/bin/ftpsync",from="IPADDRESS"
</pre>

<p>Occorre configurare uno script che contatterà i mirror destinazione.
Il tarball ftpsync contiene lo script <code>runmirrors</code> che si
occupa di tutte le operazioni. Semplicemente cambiando il proprio
ftpsync.conf in modo da includere l'impostazione <code>HUB=true</code>,
copiare <code>runmirrors.conf.sample</code> in <code>runmirrors.conf</code>
e <code>runmirrors.mirror.sample</code> in <code>runmirrors.mirror</code>
e modificare il file di configurazione in modo da adattarlo al proprio
sistema. Poi in runmirrors.mirror elencare tutti i mirror di downstream
e la coppia ftpsync/runmirror farà tutto il lavoro.</p>

<p>L'effetto sarà che il proprio sistema tenterà di collegarsi con ssh
ai mirror di downstram dopo aver completato l'aggiornato del proprio
mirror. Per effettuare questa operazione si assume di aver dato a chi
gestisce i mirror di downstream la chiave ssh che è stata configurata
in runmirrors e che loro abbiano aggiunto la chiave nei propri
~/.ssh/authorized_keys come descritto in precedenza.</p>

<p>In caso di problemi, <a href="mailto:mirrors@debian.org">\
contatteci</a>.</p>
