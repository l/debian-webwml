#use wml::debian::template title="Come lavorare sulle pagine web Debian"
<!--translation 1.3-->

<p>Le pagine web Debian sono generate in tre modi diversi:
<ul>
  <li>la maggior parte &egrave; generata usando WML, dal modulo `webwml' del CVS
  <li>la documentaizione &egrave; generata usando DebianDoc-SGML, dal modulo
      `debian-doc' del CVS
  <li>parte del sito &egrave; generata usando script, ad esempio le pagine per
      la sottoscrizione alle liste di messaggi
</ul>

<p>Per quelli che non conoscono questi programmi, sarebbe meglio leggere le pagine
che abbiamo scritto per chi ci si avvicina per la prima volta:
<ul>
  <li><a href="using_wml">usare WML</a>
  <li><a href="using_cvs">usare CVS</a>
</ul>

<h2>Aggiungere nuove pagine</h2>

<p>Aggiungere nuove pagine a Debian è molto semplice. Tutto il lavoro di
creazione dell'intestazione e del pie' di pagina è fatto da wml. Tutto quello
che devi fare è includere una linea come la seguente all'inizio del tuo file:

<pre><protect>
#use wml::debian::template title="Titolo della pagina" 
</protect></pre>

<p>seguita dal corpo del tuo testo. Tutte le pagine dovrebbero usare il modello
<code>wml::debian::template</code> a meno che non ne usino uno particolare creato per
quella particolare sezione (come le news e le pagine sulla sicurezza.)

<p>Il modello che abbiamo ti permette di definire alcune variabili che
influenzano la pagina creata. Questo dovrebbe evitare di rendere
necessario creare altri modelli: molti cambiamenti dovrebbero essere fatti
semplicemente. Le variabili attualmente disponibili sono:
<dl>
<dt>NOHEADER="yes"
	<dd>Rimuove l'intestazione iniziale dalla pagina. Una intestazione
	   personalizzata può essere inclusa nel corpo.
<dt>NOHOMELINK="yes"
	<dd>Rimuove il collegamento in basso alla pagina che fa tornare alla
	   pagina principale.
<dt>NOLANGUAGES="yes"
	<dd>Rimuove i collegamenti alla stessa pagina, ma in lingua diverse.
<dt>NOCOPYRIGHT="yes"
	<dd>Rimuove il copyright dal pie' di pagina.
</dl>

<p>Un esempio si ha nelle pagine dei port che hanno la loro intestazione.
<code>ports/arm/index.wml</code> usa:
<pre><protect>
#use wml::debian::template title="ARM Port" NOHEADER="yes"
</protect></pre>

<p>Se vuoi fare qualcosa che non è prevista dal modello attuale, prova a
considerare l'ipotesi di estendere il modello. Se non è possibile estenderlo
mantenendo la compatibilità con l'attuale allora prova a farne uno nuovo che
sia un superset di uno esistente. Questo permetterà di convertire la pagine al
tuo modello al prossimo grosso aggiornamento (In genere ogni 6 mesi massimo.)

<p>Se stai creando una pagina che è generata da uno script prova a vedere se è
possibile gestiarla tramite il meccanismo delle ``slice'' di wml per
permetterne una facile traduzione. Un buon esempio è in
<kbd>distrib/vendors.wml</kbd>. Nuovi venditori possono essere aggiunti e la
nuova pagina verrà automaticamente creata in tutte le lingue.
<kbd>vendors.wml</kbd> include <kbd>vendors.CD</kbd> che contiene la vera
lista di venditori. Questo file include a sua volta
<kbd>distrib/vendors.CD.def</kbd> che contiene la definizione di tutte le
frasi usate in <kbd>vendors.CD</kbd>.

<p>I traduttori dovranno quindi aggiungere la traduzione delle ``slice'':
<pre><protect>
	[EN:Country:]
	[ES:Pa-is:]
	[DE:Land:]
</protect></pre>

<h2>Aggiungere nuove directory</h2>

<p>Nota: <strong>Non</strong> create alcuna directory che si chiami <code>install</code>.
Questo confonderebbe il programma make e le pagine in quella directory non
sarebbero aggiornate automaticamente.

<p>Segue un esempio di come si aggiunge una directory al sito web.
<pre>
   mkdir foo
   cvs add foo
   cd foo
   cp ../intro/Makefile .
   cvs add Makefile
</pre>

<p>Edita il Makefile nella directory padre e aggiungi la directory attuale
nella variabile <code>SUBS</code>. Questo far&agrave; s&igrave; che la
directory sia considerata durante la creazione del sito.

<p>Alla fine fai il commit al repository di tutti i cambiamenti
<pre>
   cvs commit Makefile foo
</pre>
