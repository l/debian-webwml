#use wml::debian::template title="Hvordan man arbejder på Debians websider" BARETITLE=true
#use wml::debian::toc
#use wml::debian::translation-check translation="1.39"

<toc-display/>

<toc-add-entry name="general">Generelle oplysninger</toc-add-entry>


<h3>Pladskrav</h3>

<p>Hvis du vil arbejde på vores websted, skal du være forberedt på at afsætte
mindst 250 megabyte til data på din harddisk.  Dette svarer til arkivets 
nuværende størrelse.  Hvis du (fejlagtigt) genopbygger alle siderne, skal der 
bruges mindst to gange så megen plads.  Foretager du en delvis <q>checkout</q>,
skal du bruge langt mindre plads, for eksempel 50 megabyte for mappen 
/english .</p>


<h3>Delvis <q>checkout</q></h3>

<p>Mange behøver ikke hele CVS-træet <code>webwml</code>, hvilket nogle gange 
medfører manglende filer eller opbygninger som ikke fungerer i tilfælde af at en 
ny, vigtig fil bliver tilføjet og man ikke kører den fuldstændige 
<kbd>cvs update</kbd> i den pågældende mappe.  Husk at kontrollere, om du har
alle krævede filer (så som .wmlrc-filer) før du klager din nød.</p>


<h3><q>Hvad er det for nogle linjer som begynder med <q>#</q>?</q></h3>

<p>I WML begynder kommentarlinjer med <q>#</q>.  Disse foretrækkes frem for 
almindelige HTML-kommentarer, da de ikke medtages i den endelige side.</p>

<p>Læs om at <a href="using_wml">anvende WML</a> for flere oplysninger om 
WML.</p>


<toc-add-entry name="etiquette">Etikette for redaktører</toc-add-entry>

<h3><q>Kan jeg rette denne side?</q></h3>

<p>Måske.  Hvis du opdager en lille fejl, såsom en tastefejl, så ret den 
bare.</p>

<p>Hvis du bemærker at der mangler nogle få oplysninger, så er du også 
velkommen til at rette det.</p>

<p>Hvis du mener at noget er helt forkert og bør skrives om, så tag det op på
debian-www så vi kan diskutere det.  Formentlig vil vi være enige med dig.</p>

<p>Hvis du opdager, at der er problemer med en skabelon (dvs. en fil i mappen
webwml/english/template/debian), så overvej ændringen inden, du overfører den
til CVS, da ændringer af skabeloner ofte medfører at store dele af webstedet
genopbygges.</p>


<h3>Ved tilføjelse af nye mapper skal der også tilføjes Makefiler!</h3>

<p>Man skal være omhyggelig når man tilføjer en ny mappe til CVS.  Hvis den
aktuelle mappe er anført i ../Makefile så <strong>skal</strong> du oprette en 
Makefile i mappen &mdash; ellers vil <tt>make</tt> afslutte med en 
fejlmeddelelse.</p>


<h3>Brug letforståeligt engelsk</h3>

<p>Da Debians websider læses af folk, der ikke har engelsk som modersmål og 
oversættes til andre sprog, er det bedst at skrive på et letforståeligt 
engelsk, og undgå at bruge slang, smilyer og sjældne idiomatiske udtryk.</p>

<p>Hvis du bruger den slags, så tilføj en kommentar til filen som beskriver 
meningen.</p>

<p>Hvis du er det mindst i tvivl, eller for at få gennemlæst dit forslag, så 
kontakt <a href="mailto:debian-l10n-english@lists.debian.org">holdet der 
lokaltilpasser til engelsk</a>.</p>


<h3>Kig efter README-filer</h3>

<p>Nogle af mapperne indeholder en README-fil, som en hjælp til at forstå
hvordan den pågældende mappe er organiseret.  Disse filer skulle gerne
indeholde eventuelle særlige oplysninger, som man skal bruge for at arbejde 
inden for det pågældende område.</p>


<h3>Adskil indholdsændringer fra formateringsændringer</h3>

<p>Foretag altid separate rettelser eller commits fra indholdsændringer og
formateringsændringer.  Når de kombineres, er det meget sværere for 
oversætterne at få øje på, hvad der er ændret.  Hvis du kører 
<kbd>cvs diff</kbd> med sådanne blandede ændringer, kan du selv konstatere
hvor uoverskueligt det bliver.</p>

<p>Generelt skal man undgå formateringsændringer.  At få ældre dele af websider
til at overholde XHTML-/XML-standarderne, bør ikke ske samtidig med at man
commit'er andre ændringer.  (Nye ting kan og skal naturligvis laves korrekt 
fra første færd.)</p>


<h3>Opdatér også oversættelser, om muligt</h3>

<p>Nogle ændringer er uafhængige af sproget i WML-filen, så som ændringer af
URL'er eller indlejret Perl-kode.  Rettelser af tastefejl hører også til denne 
kategori, da oversættere normalt ignorerer dem, når de oversætter.  Med sådanne
sproguafhængige ændriger, kan man foretage den samme ændring i alle oversatte
filer, uden at have kendskab til de andre sprog, og trygt forhøje 
versionsnummeret i <q>translation-check</q>-linjen.</p>

<p>Det er ikke særligt krævende for oversætterne, selv at gøre arbejdet, og det
kan være upraktisk for engelsktalende redaktører, at have en komplet checkout at 
arbejde på.  Vi opfordrer dog stadig folk til at gøre dette, for ikke at 
ulejlige et 20-25 personer vedrørende ting, der hurtigt kan klares af en enkelt 
person.</p>

<p>For at gøre den slags ændringer nemmere at foretage, kan man desuden anvende
skriptet <code>smart_change.pl</code>, der ligger i den øverste mappe i webwmls 
CVS-modul.</p>


<h4>Anvendelse af smart_change.pl</h4>

<pre>smart_change.pl [parametre] original-fil</pre>

<p>Pt. tillades kun filer i <code>/english/</code> som <var>original-fil</var>. 
<code>smart_change.pl</code> kender følgende parametre:</p>

<dl>
  <dt><code>-s, --substitute=<var>REGEXP</var></code></dt>
  <dd>Skriv et regulært udtryk i Perl, som vil blive kørt på kildekodefilerne
      (kan anvendes mere end én gang). Eksempel:
      <pre>
      $&gt; ./smart_change.pl -s "s,http://gammel-url/,http://ny-url/,g" english/devel/index.wml
      $&gt; cvs diff -u */devel/index.wml | less
      $&gt; cvs ci -m "1.23: Updated gammel-url to current location" */devel/index.wml
      </pre>
      Den første kommando foretager ændringen, den anden kommando kontrollerer
      den engelsksprogede originale fil og alle oversættelser af den.  Du bør
      gøre dette for at gennemse de egentlige ændringer før du commit'er dine
      ændringer.  Hvis alt ser ud som forventet, kan du commit'e ændringerne
      med den tredje kommando.
  </dd>

  <dt><code>-l, --lang=<var>STRING</var></code></dt>
  <dd>Dette sprog behandles (kan anvendes mere end én gang).  Hvis der ikke er
      angivet et sprog, vil alle tilgængelige sprog blive behandlet.</dd>

  <dt><code>-n, --no-bump</code></dt>
  <dd>Opdatér ikke <q>translation-check</q>-linjer.  
      Normalt forøges versionen i hver <q>translation-check</q>-linje med én, hvis
      de oversatte filer er ajourførte, og ændres ikke i filer, som ikke er ført
      ajour.  Hvis paremeteret er angivet, røres der ikke ved nogen 
      <q>translation-check</q>-linjer.  Se <q>om at holde oversættelser ajour</q> 
      for en <a href="uptodate">beskrivelse af <q>translation-check</q>-linjerne</a>.
      </dd>

  <dt><code>-p, --previous</code></dt>
  <dd>Vis foregående CVS-revision.  Dette er primært nyttigt, hvis den engelske 
      fil allerede er commit'et og man ønsker at kontrollere 
      <q>translation-check</q>-linjerne mod den foregående version.</dd>

  <dt><code>-h, --help</code></dt>
  <dd>Vis en kort brugsanvisning.</dd>

  <dt><code>-v, --verbose</code></dt>
  <dd>Vis alle meddelelser under kørsel.</dd>
</dl>


<toc-add-entry name="links">Links</toc-add-entry>

<h3><q>Dette link ser ikke rigtigt ud. Skal jeg ændre det?</q></h3>

<p>På grund af den måde webservere opsættes (anvendelse af 
<a href="content_negotiation">indholdsforhandling</a>) bør du ikke ændre nogen 
af de interne links.  Faktisk anbefaler vi, at du ikke gør det.  Skriv først til 
debian-www, hvis du mener at et link er forkert.</p>


<h3>Rettelse af links</h3>

<p>Hvis du opdager at et link til et eksternt websted medfører en viderestilling 
(<q>redirection</q> - 301, 302, en &lt;meta&gt;-viderestilling, eller en 
side, der fortæller at <q>Denne side er flyttet.</q>) så fortæl om det på
debian-www.</p>

<p>Hvis du opdager et link, som ikke virker (404, 403, eller en side som ikke
viser det, linket oplyser), så ret linket og fortæl om det på debian-www, så
oversætterne bliver gjort opmærksomme på det.  Eller endnu bedre, ret linket i 
alle de andre oversættelser og opdater translation-check-linjen, om muligt.</p>


<toc-add-entry name="special">Adskillelse af tekst fra data</toc-add-entry>

<h3><q>Hvad er foo.def- og foo.data-filerne?</q></h3>

<p>For at gøre det nemmere at holde oversættelserne ajour adskiller vi på nogle 
sider fælles ting (data) fra selve teksten.  Oversætterne behøver kun at kopiere
og oversætte selve teksten, de fælles ting vil automatisk blive tilføjet.</p>

<p>Et eksempel vil måske gør dette nemmere at forstå.  Det kræver tre filer at
generere siden med forhandlerlisten i <code>CD/vendors</code>:</p>

<dl>
  <dt><code>index.wml</code>:</dt>
      <dd>Teksten øverst på siden er i denne fil.
      En oversat kopi placeres i hvert sprogmappe.</dd>
  <dt><code>vendors.CD.def</code>:</dt>
      <dd>Filen indeholder alle de tekstbidder som er nødvendige i hver enkelt 
      forhandlers post. Oversættelser tilføjes via 
      <code>&lt;<var>sprog</var>&gt;/po/vendors.<var>xy</var>.po</code>.</dd>
  <dt><code>vendors.CD</code>:</dt>
      <dd>Denne fil indeholder de egentlige forhandlerposter og er 
      sproguafhængige, hvorfor oversættere ikke skal ændre noget i denne fil.</dd>
</dl>

<p>Når en af dem der har ansvaret for <email "cdvendors@debian.org"> tilføjer 
en ny forhandler, føjer de forhandleren til <code>debiancd.db</code>, 
konverterer den til WML-format som <code>vendors.CD</code> (ved hjælp af 
<code>getvendors.pl</code>) og lader dernæst WML og makefilerne klare resten.
Alle oversættelser bliver genopbygget med anvendelse af den allerede oversatte
tekst, men med de nye forhandleroplysninger.  (En ajourført oversættelse, kvit
og frit!)</p>


<toc-add-entry name="newpage">Tilføjelse af en ny side</toc-add-entry>

<p>Det er ganske nemt at føje nye sider til Debian.  WML sørger for at 
sidehoved og -fod bliver korrekt.  Alt du skal gøre er at indsætte en linje som
den følgende øverst i den nye fil:</p>

<pre><protect>
#use wml::debian::template title="NAVN PÅ SIDEN"
</protect></pre>

<p>efterfulgt af sidens indhold.  Alle sider skal anvende skabelonsfilen
<code>wml::debian::template</code> med mindre de anvender en særlig skabelon
lavet til denne sektion, for eksempel nyhederne eller sikkerhedsbulletinerne.</p>

<p>Vores skabeloner giver dig mulighed for at definere bestemte variabler, som 
vil påvirke de oprettede sider.  Det forhindrer nødvendigheden af at skulle
oprette forskellige skabeloner til enhver situation og gør det nemmere at 
foretage forbedringer.  De pt. tilgængelige variabler og deres formål:</p>

<dl>
<dt>BARETITLE="true"</dt>
	<dd>Fjerner "Debian GNU/Linux --"-delen som normalt indsættes foran
	alle &lt;title&gt;-mærkerne (tags).</dd>
<dt>NOHEADER="true"</dt>
	<dd>Fjerner det indledende sidehoved fra siden.  Et særligt sidehoved 
	kan naturligvis tilføjes i selve teksten.</dd>
<dt>NOMIRRORS="true"</dt>
	<dd>Fjerner listen over webspejle fra siden.  Det anbefales generelt 
	ikke, bortset fra for en håndfuld siders vedkommende.</dd>
<dt>NOHOMELINK="true"</dt>
	<dd>Fjerner linket til Debians hovedside, som normalt tilføjes nederst
	på siden.
<dt>NOLANGUAGES="true"</dt>
	<dd>Fjerner links til udgaver af siden på andre sprog, som normalt
	tilføjes nederst på siden.</dd>
<dt>GEN_TIME="true"
	<dd>Opsætter datoen på resultatfilerne til de genererede filers 
	tidsstempling i stedet for kildefilens tidsstempling.</dd>
<dt>NOCOPYRIGHT="true"
	<dd>Fjerner ophavsretbemærkningen nederst på siden.</dd>
</dl>

<p>Bemærk at du kan anvende enhver streng som disse variablers værdi, 
<q>true</q>, <q>yes</q>, <q>foo</q>, det spiller ingen rolle.</p>

<p>Et eksempel på hvordan dette kan bruges er på tilpasningssiderne, der har 
deres egne sidehoveder. <code>ports/arm/index.wml</code> anvender:</p>

<pre><protect>
#use wml::debian::template title="ARM-tilpasning" NOHEADER="yes"
</protect></pre>

<p>Ønsker du at lave noget, som ikke kan lade sig gøre med de eksisterende 
skabeloner, skal du først overveje om en af dem kan udvides.  Hvis det ikke er 
muligt at udvide en skabelon og bibeholde bagudkompatibiliteten, så prøv at 
lave en ny skabelon, der indeholder alt hvad en eksisterende skabelon 
indeholder, således at siderne kan konverteres ved den næste større opgradering 
(forhåbentlig aldrig hyppigere end hver sjette måned).</p>

<p>Hvis du er ved at oprette en side, som genereres af et skript eller kun
indeholder en smule tekst, kan du overveje at bruge &lt;gettext&gt;-mærker 
(tags) for at lette arbejdet med at holde oversættelserne ajour.</p>

# think of a good example for <gettext> in new pages


<toc-add-entry name="inclusion">Inkludering af andre filer</toc-add-entry>

<p>Ønsker du at adskille nogle dele af din side i en separat fil (som dernæst
inkluderes i din hovedfil), anvendes filudvidelsen <code>.src</code>, hvis din 
fil har indhold, der kan oversættes, da din inkluderede fil overvåges mht. 
ændringer som enhver almindelig <code>.wml</code>-fil.  Hvis du bruger en anden
filudvidelse, eksempelvis <code>.inc</code>, vil oversætterne ikke bemærke dine
opdateringer og forskellige sprogudgaver kan indeholde forskelligt indhold.</p>


<toc-add-entry name="newdir">Tilføjelse af en ny mappe</toc-add-entry>

<p>Bemærk:  Opret <strong>ikke</strong> en mappe med navnet 
<code>install</code>.  Det forvirrer programmet make og siderne i den pågældende
mappe vil ikke automatisk blive opdateret.</p>

<p>Nedenfor er der et kommenteret eksempel på hvordan man tilføjer en ny
mappe til webstedet.</p>

<pre>
   mkdir foo
   cvs add foo
   cd foo
   cp ../intro/Makefile .
   cvs add Makefile
</pre>

<p>Redigér filen Makefile i den overliggende mappe og tilføj mappen, du 
lige oprettede til variablen <code>SUBS</code>.  Det vil føje mappen til 
opbygningen af siderne når programmet make køres.</p>

<p>Til sidst skal alle dine ændringer commit'es til CVS-arkivet med</p>

<pre>
  cvs commit Makefile foo
</pre>
