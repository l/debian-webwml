#use wml::debian::cdimage title="Jak stworzyæ serwer lustrzany z obrazami p³yt Debiana" BARETITLE=true
#use wml::debian::toc
#use wml::debian::translation-check translation="1.7"

<p>
     Stworzenie serwera lustrzanego z obrazami p³yt instalacyjnych
     Debiana wymaga posiadania Linuksa lub innego uniksowego systemu
     ze sta³ym, solidnym ³±czem do Internetu.
</p>

<p>
     Serwery lustrzane z obrazami p³yt zazwyczaj dostarczaj±
     szablony systemu tworzenia obrazów <i>jigdo</i>, a niektóre
     tak¿e pe³ne obrazy. Szablony s± zazwyczaj aktualizowane
     przy pomocy rsync z <a href="../jigdo-cd/#which">jednego z
     oficjalnych ¼róde³</a>, a pe³ne obrazy tworzone z u¿yciem
     <kbd>jigdo-mirror</kbd>.</p>

<toc-display/>

<hr>

<toc-add-entry name="httpftp">Dlaczego FTP i HTTP <strong>nie</strong> s± w³a¶ciwe</toc-add-entry>

<p>
     <em>Nie</em> powinno siê u¿ywaæ FTP ani HTTP do pobierania obrazów.
     Te metody przesy³ania obarczone s± wysokim ryzykiem niepowodzenia,
     z uwagi na ogromny rozmiar plików.
</p>

<p>
     Ponadto, nawet je¶li obrazy uleg³y jedynie niewielkiej zmianie
     (jak to ma miejsce w przypadku podwydañ), ca³o¶æ pobierana jest
     ponownie. Nak³ada to wysokie obci±¿enie na komputer oraz na
     po³±czenie sieciowe.
</p>

<toc-add-entry name="download">Pobieranie przy pomocy rsync</toc-add-entry>

<p>
     Z powodów przedstawionych powy¿ej, nale¿y u¿ywaæ programu
     <a href="http://rsync.samba.org/"><tt>rsync</tt></a>,
     który istotnie dokona tylko uaktualnienia. Dziêki u¿yciu
     <tt>rsync</tt>, obrazy podwersji s± uaktualniane bardzo efektywnie,
     gdy¿ tylko zmienione fragmenty s± przesy³ane poprzez sieæ, a
     pozosta³a czê¶æ jest pobierana ze starego obrazu.
</p>

<p>
     W miejscach, w których maj± byæ przechowywane tylko obrazy
     p³yt (bez ¿adnych kopii lustrzanych innych czê¶ci Debiana)
     i w których brak jest dostêpu do niedalekich/szybkich kopii
     lustrzanych Debiana (<kbd>debian/</kbd>), <kbd>rsync</kbd>
     powinien byæ wykonywany jako codzienne zadanie crona.
</p>

<p>
     Mo¿liwe jest wykonywanie kopii lustrzanej z dowolnego miejsca
     podanego <a href="rsync-mirrors">na tej li¶cie</a>.
</p>

<p>
     Powinno siê u¿ywaæ przynajmniej tych opcji:
     <strong><kbd>--times --links --hard-links --block-size=8192</kbd></strong>.
     To zachowa czas modyfikacji, dowi±zania (tak¿e symboliczne) oraz
     wymusi u¿ycie bloku o rozmiarze 8192 bajtów (najbardziej
     efektywne dla obrazów p³yt). Gdy czas modyfikacji oraz rozmiar
     nie ulegn± zmianie, <kbd>rsync</kbd> pominie ten plik,
     wiêc parametr <tt>--times</tt> jest naprawdê konieczny.</p>

<toc-add-entry name="jigdomirror">Tworzenie obrazów przy pomocy jigdo-mirror</toc-add-entry>

<p>
     Wielu ludzi utrzymuje &#8222;regularne&#8221; kopie lustrzane
     Debiana (<kbd>debian/</kbd>), lub po prostu ma dostêp do takiej
     kopii w pobli¿u. Oznacza to, ¿e maj± ju¿ pliki .deb, które wchodz±
     w sk³ad obrazów p³yt. Oczywistym pytaniem jest wiêc: Dlaczego by nie
     u¿yæ tych samych plików do tworzenia obrazów p³yt?
</p>

<p>
     <kbd>jigdo-mirror</kbd> to program, który umo¿liwia tworzenie
     obrazów p³yt z u¿yciem plików dostêpnych w &#8222;normalnej&#8221;
     kopii lustrzanej oraz kilku dodatkowych plików tworz±cych szablon
     jigdo.
</p>

<p>
     Nale¿y zauwa¿yæ, ¿e <kbd>jigdo-mirror</kbd> jest dostarczany wraz
     z jigdo 0.6.8, a ta wersja nie wchodzi w sk³ad Debiana 3.0
     (&#8222;woody&#8221;). Oznacza to, ¿e konieczne jest jego
     oddzielne pozyskanie. Ten problem nie dotyczy nowej wersji
     &#8222;woody'ego&#8221;.
</p>

<p>
     Na sam pocz±tek, potrzebne s± pliki szablonu jigdo.
     Mo¿na je znale¼æ na wiêkszo¶ci oficjalnych stron, jednak¿e
     dwie podstawowe lokalizacje to:
</p>

<ul compact>
     <li><kbd>rsync us.cdimage.debian.org::jigdo-area/</kbd> (USA)
     <li><kbd>rsync non-us.cdimage.debian.org::jigdo-area/</kbd> (Europa)
</ul>

<p>
     Nale¿y pobraæ pliki z podkatalogu:
     &lt;<var>version</var>&gt;/jigdo/&lt;<var>architecture</var>&gt;
     dla ka¿dej z architektur sprzêtowych, dla jakiej maj± powstaæ
     obrazy p³yt.
</p>

<p>
     Teraz trzeba utworzyæ plik <kbd>~/.jigdo-mirror</kbd>
     w celu konfiguracji programu. Oto przyk³ad:</p>

<pre>
     jigdoDir="/gdzie/s±/kopie/lustrzane/p³yt-debiana/current/jigdo"
     imageDir="/gdzie/s±/kopie/lustrzane/p³yt-debiana/current/images"
     tmpDir="/gdzie/s±/kopie/lustrzane/p³yt-debiana/current/images"
     debianMirror="file:/gdzie/s±/kopie/lustrzane/debiana/"
     nonusMirror="file:/gdzie/s±/kopie/lustrzane/debiana-non-US"
     include='i386/|sparc/|powerpc/|source/'; exclude='-1\.'
</pre>

<p>
     Zmienne <i>include</i> oraz <i>exclude</i> zawieraj± listê
     (a raczej wyra¿enia regularne j± opisuj±ce) architektur
     dla których maj± powstaæ obrazy. Wiêcej informacji na ten temat
     mo¿na znale¼æ na stronach podrêcznika systemowego po¶wiêconych
     programowi <kbd>jigdo-mirror</kbd> oraz w jego ¼ród³ach
     (to skrypt pow³oki systemowej z du¿± ilo¶ci± komentarzy)
</p>

<p>
     Po konfiguracji, wystarczy po prostu uruchomiæ <kbd>jigdo-mirror</kbd>
     i wszystko zostanie wykonane automatycznie. Powstanie sporo plików
     oraz prawdopodobnie zabierze to wiele czasu, wiêc warto pomy¶leæ
     na przyk³ad o uruchomieniu tego zadania w sesji screena lub
     przekierowaniu standardowego wyj¶cia do pliku.
</p>

<toc-add-entry name="pik">Tworzenie obrazów przy pomocy pseudo-image oraz debcdmirror</toc-add-entry>

<p>
     <tt>rsync</tt> nadal pobiera wszystko dla &#8222;ca³kowicie
     nowych&#8221; wydañ, jako ¿e te obrazy prawie nie zawieraj±
     nie zmienionych czê¶ci. Jednak¿e przy pomocy narzêdzi
     pseudo-image mo¿na utworzyæ &#8222;udawane&#8221; obrazy p³yt
     z danych dostêpnych ju¿ na pobliskim (mo¿liwe, ¿e nawet dostêpnym
     na lokalnym dysku) lutrzanym serwerze FTP Debiana.

     Teraz <tt>rsync</tt> próbuje zaktualizowaæ te &#8222;udawane&#8221;
     do wersji oficjalnej. Nawet dla wiêkszo¶ci podwydañ, ta metoda jest
     bardziej efektywna od ³atania starych obrazów.
</p>

<p>
     <strong>Informacje z tej czê¶ci mog± byæ przestarza³e!
     Rekomendujemy raczej u¿ywanie samego rsync lub wypróbowanie
     jigdo-mirror.</strong>
</p>

<p>
     <tt>pseudo-image-kit</tt> zosta³ stworzony g³ównie w celu
     pobierania wy³±cznie jednego lub bardzo niewielu obrazów,
     tak jak wiêkszo¶æ ludzi to robi. Istnieje tak¿e skrypt
     <tt>debcdmirror</tt>, który czyni tworzenie kopii lustrzanych
     <em>naprawdê</em> ³atwym, gdy¿ automatycznie u¿ywa
     <tt>pseudo-image-kit</tt> oraz <tt>rsync</tt> w celu zachowania
     wci±¿ aktualnej zawarto¶ci kopii lustrzanej, w³acznie z
     automatycznym uwzglênianiem sum MD5 dla ka¿dego pobieranego
     obrazu. Przy pomocy <tt>debcdmirror</tt>, mo¿na tak¿e sprecyzowaæ
     dok³adnie, co ma byæ przechowywane w kopii.
</p>

<p>
     Rêczne u¿ycie pseudo-image-kit (mo¿liwe, ¿e z <tt>rsync</tt> do
     uaktualnienia podwydañ) oznacza wiele pracy oraz k³opotów, wiêc
     zdecydowanie tego nie polecamy.
</p>

<p>
     Zamiast tego, powinno siê u¿ywaæ skryptu <tt>debcdmirror</tt>,
     który wewnêtrznie odwo³uje siê do pseudo-image-kit oraz <tt>rsync</tt>)
     (codzienne zadanie crona).
</p>

<p>
     Najnowsza wersja
     <a href="http://cdimage.debian.org/~costar/pseudo-image-kit/">pseudo-image-kit</a>
     oraz <a href="http://cdimage.debian.org/~costar/debcdmirror/"><tt>debcdmirror</tt></a>
     jest dostêpna na stronach WWW ich autorów. Wiêcej informacji na ten temat
     znajduje siê w plikach README tych pakietów.
</p>

<p>
     <strong>Uwagi:</strong>
</p>

<p>
     U¿ywaj±c <tt>debcdmirror</tt> nale¿y wybraæ kopiê lustrzan± dla
     <tt>rsync</tt>, która oferuje plik &#8222;<tt>ls-lR</tt>&#8221;.
     Adresy takich miejsc znajduj± siê na
     <a href="rsync-mirrors">li¶cie kopii lustrzanych rsync</a>.
</p>

<p>
     Je¶li brak jest lokalnego
     <a href="$(HOME)/mirror/">systematycznego lustrzanego serwera FTP Debiana</a>,
     mo¿na skorzystaæ z
     <a href="$(HOME)/mirror/list">listy serwerów lustrzanych</a>.</p>

<p>
     <tt>debcdmirror</tt> wymaga pow³oki <tt>bash</tt> w wersji 2 lub wy¿szej.
     To nie k³opot w ¿adnej nowoczesnej wersji Debiana. Je¶li to konieczne,
     <tt>bash</tt> mo¿e byæ zainstalowany w nietypowej lokalizacji, jednak
     wtedy nale¿y zaktualizowaæ ¶cie¿kê do niego umieszczon±
     w pierwszej linii skryptu.
</p>

<toc-add-entry name="test">Testowanie obrazów</toc-add-entry>

<p>
     Katalog &#8222;<tt><i>nazwakodowa</i>_test</tt>&#8221; zawiera obrazy
     dowi±zane do takich samych obrazów w katalogu oznaczaj±cym wersjê
     (przyk³adowo <tt>2.2_r4</tt>). Katalog z wersj± w nazwie zmienia siê
     pomiêdzy (pod)wydaniami, ale nazwy w katalogu <tt>test</tt> pozostaj±
     niezmienne.
</p>

<p>
     W przypadku wykorzystywania tylko metody <tt>rsync</tt>,
     przechowywanie kopii lustrzanej zarówno katalogów z numerami
     wersji, jak i stosownego katalogu <tt>test</tt>, <em>oraz</em>
     u¿ycie opcji <tt>--hard-links</tt> jest jedynym sposobem, ¿eby
      rsync uaktualni³ podwydania w³a¶ciwie.     [<em>Nie</em> powinno siê
     do³±czaæ katalogu <tt>test</tt> w przypadku <tt>debcdmirror</tt>,
     poniewa¿ <tt>debcdmirror</tt> przechowuje rzeczy odmiennie i
     bardziej efektywnie.
</p>

<toc-add-entry name="ls-lR">Pliki ls-lR</toc-add-entry>

<p>
     Pliki <tt>ls-lR</tt> opisuj± strukturê katalogów kopii
     lustrzanej na której siê znajduje.
     <strong>Nie powinno siê</strong> robiæ kopii
     pliku <tt>ls-lR</tt>; lepiej jest raczej tworzyæ swój w³asny (przy
     pomocy <tt>Makels-lR</tt>, co godzinê z u¿yciem
     <tt>crona</tt>) lub po prostu nie mieæ tego pliku (<tt>ls-lR</tt>)
     wcale!. <tt>debcdmirror</tt> tworzy lokalny <tt>ls-lR</tt>
     automatycznie, po wykonaniu kopii.
</p>

<toc-add-entry name="serve">Serwowanie plików</toc-add-entry>

<p>
     Gdy obrazy p³yt, które maj± byæ czê¶ci± kopii lustrzanej,
     zostan± pobrane (i386 oraz p³yty ze ¼ród³ami s± najbardziej
     popularne), powinno siê uruchomiæ serwer <tt>rsync</tt>.
     Nie spowoduje to zbyt du¿ego obci±¿enia maszyny, a wytworzy
     o wiele mniej ruchu sieciowego ni¿ us³uga FTP/HTTP.</p>

<p>
     Instrukcje jak tego dokonaæ znajduj± siê w pliku README
     umiesczonym w pakiecie pseudo-image-kit. W skrócie, nale¿y
     dodaæ <kbd>rsync --daemon</kbd> do konfiguracji     <i>inetd</i>
     oraz skonfigurowaæ <kbd>rsyncd.conf</kbd> wed³ug potrzeb.
     Rekomendujemy limitowanie dostêpu (tylko kilka po³±czeñ) 
     dla ka¿dego adresu IP i maksymalnie dwucyfrow± liczbê po³±czeñ
     ³±cznie.
</p>

# TODO: include more stuff here rather than depending on pik, with examples

<toc-add-entry name="register">Rejestrowanie kopii lustrzanej na naszej li¶cie</toc-add-entry>

<p>
     Aby uczyniæ kopiê dostêpn± dla szerszej publiczno¶ci,
     mo¿na zarejestrowaæ j± na li¶cie takiej jak
     <a href="../http-ftp/">ta</a> lub <a href="rsync-mirrors">ta</a>.
     Nale¿y pamiêtaæ, ¿e pe³ne obrazy s± du¿ymi plikami i
     upublicznienie wiadomo¶ci o kopii lustrzanej mo¿e spowodowaæ
     ruch sieciowy siêgaj±cy wielu gigabajtów dziennie.
</p>

<p>
     Kopiê lustrzan± mo¿na zarejestrowaæ poprzez wype³nienie
     <a href="$(HOME)/mirror/submit">tego formularza</a>
     (pola: CDImage-* s± jednymi z wa¿niejszych) lub poprzez
     wys³anie zawiadomienia na adres:
     <a href="&#109;&#97;&#105;&#108;&#116;&#111;&#58;debian-cd&#64;lists.debian.org">\
     debian-cd&#64;lists.debian.org</a>.
</p>

<p>
     Wysoko cenimy wszystkie nowe kopie lustrzane obrazów p³yt Debiana.
     Z góry dziêkujemy!
</p>
