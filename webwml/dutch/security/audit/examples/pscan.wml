#use wml::debian::template title="Geautomatiseerd Audit Voorbeeld: pscan"
#use wml::debian::recent_list
#use wml::debian::translation-check translation="1.5"

# Last Translation Update by $Author$
# Last Translation Update at $Date$

<p><a href="http://packages.debian.org/pscan">pscan</a> is een pakket dat is
ontworpen om C- en C++-broncodebestanden aan een formaatstringaudit te 
onderwerpen.</p>
<p>Het is geen algemeen audithulpmiddel.</p>

<h2>pscan uitvoeren</h2>
<p>pscan uitvoeren is gewoon een kwestie van het op te geven met de 
bestandsnaam of -namen om te controleren. Bijvoorbeeld:</p>
<pre>
pscan <a href="test.c.html">test.c</a>
</pre>
<p>De uitvoer zal rechtstreeks naar de console worden uitgeschreven:</p>
<hr />
<samp>
test.c:42 SECURITY: printf call should have "%s" as argument 0
</samp>
<hr />

<h2>De Uitvoer</h2>
<p>De uitvoer is in dit geval gemakkelijk te begrijpen. Het heeft het feit dat
de <tt>printf</tt>-aanroep haar argumenten niet op de juiste manier "quote",
correct ge√Ødentificeerd.</p>
<p>De uitvoer toont ons ook wat we moeten doen om het op te lossen, wijzig de
code:
<pre>
printf( buff );
</pre>
<p>naar:</p>
<pre>
printf( "%s", buff );
</pre>
<p>Dit niet doen, kan een aanvaller die de uitvoer van <tt>ls</tt> kan 
controleren, toelaten om het programma aan te vallen, door een bestand genaamd
"%s", of gelijkaardig aan te maken.</p>
<p>Formaatstring-aanvallen worden bediscussieerd in deze 
<a href="http://www.securityfocus.com/guest/3342">Security Focus introduction</a>.</p>
<p>De <a href="http://www.dwheeler.com/secure-programs/">Secure Programming for Linux and Unix HOWTO</a> legt u uit hoe u zich kunt beschermen tegen deze 
aanvallen in veel gebruikte variadische functies zoals:</p>
<ul>
<li>printf</li>
<li>fprintf</li>
<li>syslog</li>
</ul>
<hr />
<p><a href="..">Terug naar het auditproject</a> | <a href="index">Terug naar de auditvoorbeeldenpagina</a></p>
