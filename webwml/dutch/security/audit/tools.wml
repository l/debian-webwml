#use wml::debian::template title="Hulpmiddelen voor de Veiligheidsaudit"
#use wml::debian::recent_list
#use wml::debian::translation-check translation="1.13"

# Last Translation Update by $Author$
# Last Translation Update at $Date$

<p>Er zijn verschillende pakketten beschikbaar in het Debian-archief die zijn
ontworpen om met veiligheidsaudits te helpen. Dit zijn onder andere:</p>

<ul>
<li><a href="http://packages.debian.org/flawfinder">Flawfinder</a>
<ul>
<li><a href="examples/flawfinder">Voorbeeld flawfinder-gebruik</a></li>
</ul></li>
<li><a href="http://packages.debian.org/its4">ITS4</a>
<ul>
<li>Er is geen voorbeeld voor ITS4 omdat het verwijderd is uit de onstabiele distributie.</li>
</ul></li>
<li><a href="http://packages.debian.org/rats">RATS</a>
<ul>
<li><a href="examples/RATS">Voorbeeld RATS-gebruik</a></li>
</ul></li>
<li><a href="http://packages.debian.org/pscan">pscan</a>
<ul>
<li><a href="examples/pscan">Voorbeeld pscan-gebruik</a></li>
</ul></li>
</ul>

<p>Geen enkel hulpmiddel is perfect en ze kunnen enkel gebruikt worden als
richtlijnen voor verdere studie, maar omdat ze eenvoudig zijn in gebruik, is 
het waard ze eens uit te proberen.</p>

<p>Elk hulpmiddel heeft andere sterktes en zwaktes, dus is het aangeraden meer
dan één te gebruiken.</p>

<h2>Flawfinder</h2>

<p>flawfinder is een Python-hulpmiddel dat is ontworpen om C- en C++-broncode
te inspecteren naar potentiële veiligheidslekken.</p>

<p>Wanneer uitgevoerd tegen een map die broncode bevat, zal het een rapport
geven van de potentiële problemen die het heeft gedetecteerd, gesorteerd naar
risico (waar <i>risico</i> een getal 1&ndash;5 is). Om kleine risico's niet te laten
zien, kunt u het programma problemen onder een bepaald risiconiveau laten
negeren. Standaard is de uitvoer in platte tekst, maar er is ook een 
HTML-rapport beschikbaar.</p>

<p>Het programma werkt door het scannen van de code en het bekijken van het
gebruik van functies die zich in haar databank bevinden als functies die
vaak verkeerd worden gebruikt.</p>

<p>Om het lezen van het rapport te vergemakkelijken, is het mogelijk om het 
rapport de regel waarop de functie wordt gebruikt te laten weergeven, dit kan
nuttig zijn om onmiddelijk te detecteren of er al dan niet een probleem is.</p>

<p>U kunt een voorbeeld van het gebruik van flawfinder en haar uitvoer bekijken
in de <a href="examples/">auditvoorbeeldensectie</a>.</p>

<h2>ITS4</h2>

<p>ITS4 is een hulpmiddel in de non-free sectie van het Debian-archief, het is
enkel beschikbaar in de stabiele distributie.</p>

<p>ITS4 kan gebruikt worden om C- and C++-code te scannen voor potentiële 
veiligheidslekken, ongeveer zoals flawfinder.</p> 

<p>De gegenereerde uitvoer probeert intelligent te zijn door sommige gevallen
waar de gevaarlijke functies voorzichtig zijn aangeroepen, te negeren.</p>


<h2>RATS</h2>

<p>RATS is een vergelijkbaar hulpmiddel met de uitzondering dat het 
ondersteuning biedt voor een veel groter bereik van talen. Momenteel heeft het
ondersteuning voor C, C++, Perl, PHP en Python.</p>

<p>Het hulpmiddel gebruikt een eenvoudig XML-bestand om haar veiligheidslekken
in te lezen wat het één van de gemakkelijkst aan te passen hulpmiddeln is.
Nieuwe functies kunnen gemakkelijk toegevoegd worden voor elk van de 
ondersteunde talen.</p>

<p>U kunt een voorbeeld van het gebruik van RATS en haar uivoer bekijken in de
<a href="examples/">auditvoorbeeldensectie</a>.</p>


<h2>pscan</h2>

<p>pscan verschilt van de vorige hulpmiddelen omdat het helemaal geen scanner is
voor algemeen gebruik. In plaats daarvan is het specifiek gericht op het 
detecteren van formaatstring-bugs.</p>

<p>Het hulpmiddelen zal proberen potentiële problemen te vinden door het
gebruik van variadische functies in C- en C++-broncode, zoals <tt>printf</tt>, 
<tt>fprintf</tt> en <tt>syslog</tt>.</p>

<p>Formaatstring-bugs zijn nogal gemakkelijk op te sporen en te herstellen, 
hoewel ze de recentste nieuwe klasse van softwareaanvallen zijn, is de 
meerderheid van hun waarschijnlijk al gevonden en hersteld.</p>

<p>U kunt een voorbeeld van het gebruik van pscan en haar uitvoer bekijken in de
<a href="examples/">auditvoorbeeldensectie</a>.</p>


<h2>Scanneruitvoer Begrijpen</h2>

<p>Alle algemene scanhulpmiddelen zullen uitvoer genereren die beschrijft 
welke problemen werden gedetecteerd en misschien advies geven om ze op te 
lossen.</p>

<p>Bijvoorbeeld is het volgende genomen uit de uitvoer van RATS wat de gevaren
van <tt>getenv</tt> beschrijft:</p>

<p>&quot;Omgevingsvariabelen zijn weinig betrouwbare invoer. Ze kunnen van om
het even welke lengte zijn en kunnen om het even welke data bevatten. Maak geen
veronderstellingen inzake inhoud of lengte. Als het enigzins mogelijk is, 
probeer ze dan te vermijden en als het gebruik noodzakelijk is, kuis ze dan en
trunceer ze op een redelijke lengte.&quot;</p>

<p>Als u meer advies nodig heeft bij het herstellen van een lek dat werd
gerapporteerd zou u een boek over veilig programmeren moeten bestuderen, zoals
de <a href="http://www.dwheeler.com/secure-programs/">Secure Programming for 
Linux and Unix HOWTO</a> by David A. Wheller.</p>

<p>(Onthou dat wanneer u veiligheidsproblemen rapporteert, een patch die het 
lek repareert sterk geapprecieerd wordt)</p>

<p>Discussie in verband met het bijwerken van een bepaald stuk problematische
code kan ook op de <a href="http://shellcode.org/mailman/listinfo/debian-audit">
debian-audit mailinglijst</a> gehouden worden, zorg er dan wel voor dat het 
niet duidelijk wordt over welk programma het gaat.</p>
