# Copyright (C) 2001  Craig Small <csmall@debian.org>
# Copyright (C) 2001, 2002, 2003, 2004, 2005  Martin Michlmayr <tbm@cyrius.com>
# This file may be distributed under the GPL v2 or higher.

<?
  /*
   * amprofile.wml : Edit an Application Managers profile
   * (C) 2000 SPI Inc.
   */

  session_start();
  include ("config.inc");
  include ("common.inc");
  
  function find_manager($db, $login) 
  {
    global $row, $query;
    $sql = "SELECT * from manager WHERE login='$login'";
    if (! ($query = pg_exec($db, $sql))) {
      echo "Problem with query", pg_ErrorMessage($db), "<BR>";
      echo "SQL was: $sql<BR>\n";
      return FALSE;
    }
    if (pg_NumRows($query) < 1) {
      echo "Could not find '", $login, "' in the manager database.<BR>\n";
      echo "SQL was: $sql<BR>\n";
      return FALSE;
    }
    $row = pg_Fetch_Array($query, 0);
    return TRUE;
  }

  function check_manpasswd($db, $login, $password) {
    $sql = "SELECT passwd FROM manager WHERE login = '$login'";
    if (! ($result = pg_exec($db, $sql))) {
      echo "Problem with query", pg_ErrorMessage($db), "<BR>";
      echo "SQL was: $sql<BR>\n";
      return FALSE;
    }
    if (pg_NumRows($result) == 1) {
      $row = pg_Fetch_Array($result, 0);
      if ($row["passwd"] == "") {
        return TRUE;
      }
      $salt = substr($row["passwd"], 0, 2);
      /*echo "comparing '", trim($row["passwd"]), "' with '", crypt($password, $salt), "'<BR>";*/
      // try MD5 first, and fall back to DES
      if (passwd_verify(trim($row["passwd"]), $password) ||
          trim($row["passwd"]) == crypt($password, substr($row["passwd"], 0, 2))) {
	return TRUE;
      }
    }
    return FALSE;
  }

  function update_db($db, $sql) {
    if (! ($result = pg_exec($db, $sql))) {
      echo "Problem with query", pg_ErrorMessage($db), "<BR>";
      echo "SQL was: $sql<BR>\n";
      return -1;
    }
    if (($tuples = pg_CmdTuples($result)) != 1) {
      echo "Only one row should be effected but $tuples rows were<BR>\n";
      echo "SQL was: $sql<BR>\n";
    }
    return $tuples;
  }
  function update_password($db, $passwda, $passwdb, $login, $cpasswd)
  {
    $passwda = trim($passwda);
    $passwdb = trim($passwdb);
    $cpasswd = trim($cpasswd);

    # Check ze values, any bad things we abort
    $errors = "";
    if ($passwda == "" || $passwdb == "" ) 
      { $errors .= "<LI>You must type new password in both boxes.\n"; }
    if ($passwda != $passwdb )
      { $errors .= "<LI>New passwords do not match.\n"; }
    if ($_SESSION['s_isfd'] != 't' && $cpasswd == "")
      { $errors .= "<LI>You didn't type your old passwd.\n"; }
    if ($_SESSION['s_isfd'] != 't' && $errors == "" && !check_manpasswd($db, $login, $cpasswd))
      { $errors .= "<LI>I cannot find that manager or you entered in wrong old passwd.\n"; }
    # Possibly more checks later
    if ($errors != "") 
    {
      echo "<P>There have been some problems with what you entered, please hit ",
           "the back button and correct the following errors:",
           "<UL>$errors</UL><HR>\n";
    } else {
      echo "<P>Submission has passed sanity checks.<BR>\n";
      $sql = "UPDATE manager SET passwd = '" . crypt($passwda) . "'" .
             "WHERE login = '". $login . "'"; 
      if (update_db($db, $sql) == 1)
      {
        echo "<P>Password update sucessfully!\n";
      } else {
        echo "<P>Could not update password for some reason.\n";
      }
    }
  } # update password  

  function insert_manager($db, $name, $email, $login, $passwda, $passwdb, $max_applicants, $isfd, $isdam)
  {
    # Check ze values, any bad things we abort
    $login = trim(strip_tags($login));
    $name = trim(strip_tags($name));
    $email = trim(strip_tags($email));
    $max_applicants = trim(strip_tags($max_applicants));
    $errors = "";

    if ($_SESSION['s_isfd'] != 't')
      { $errors .= "<LI>Only the front desk can add AMs."; }
    if ($name == "")
      { $errors .= "<LI>You need to supply a name."; }
    if ($email == "")
      { $errors .= "<LI>You need to supply a email address."; }
    if ($max_applicants == "")
      { $errors .= "<LI>You need to supply the maximum number of applicants the AM can handle."; }
    if ($passwda != $passwdb )
      { $errors .= "<LI>New passwords do not match.\n"; }
    # Possibly more checks later
    if ($errors != "") 
    {
      echo "<P>There have been some problems with what you entered, please hit ",
           "the back button and correct the following errors:",
           "<UL>$errors</UL><HR>\n";
      return FALSE;
    } else {
      echo "<P>Profile update has passed sanity checks.<BR>\n";
      if ($passwda == "") {
        $sql = "INSERT INTO manager (login, name, email, max_applicants, is_frontdesk, is_dam) VALUES ( '$login', '$name', '$email', $max_applicants, ";
      } else {
        $cpasswd = crypt($passwda);
        $sql = "INSERT INTO manager (login, name, email, passwd, max_applicants, is_frontdesk, is_dam) VALUES ( '$login', '$name', '$email','$cpasswd', $max_applicants, ";
      }
      if ($isfd == "t") { $sql .= "true, "; } else { $sql .= "false, "; }
      if ($isdam == "t") { $sql .= "true "; } else { $sql .= "false "; }
      $sql .= ")";
      if (($erows = update_db($db, $sql)) > 0)
      {
        echo "<P>$erows rows updated in database.<BR>\n";
	return TRUE;
      } else {
        return FALSE;
      }
    } #sanity ok
  } # insert_applicant

  function change_app_manager($db, $login, $loginkey)
  {
    $sql = "UPDATE applicant SET manager = '" . $login;
    $sql .= "' WHERE manager = '" . $loginkey ."'";
    if (! ($query = pg_exec($db, $sql))) {
      echo "Problem with query", pg_ErrorMessage($db), "<BR>";
      echo "SQL was: $sql<BR>\n";
      return FALSE;
    }
    $tuples = pg_cmdtuples($query);
    echo $tuples , " applicant(s) had their AM changed from '", $loginkey, "'";
    echo " to '", $login, "'.<BR>\n";
  } #change_app_manager

  function update_profile($db, $name, $email, $login, $loginkey, $max_applicants, $isactive, $isfd, $isdam)
  {
    # Check ze values, any bad things we abort
    $login = trim(strip_tags($login));
    $loginkey = trim(strip_tags($loginkey));
    $name = trim(strip_tags($name));
    $email = trim(strip_tags($email));
    $passwda = trim(strip_tags($passwda));
    $passwdb = trim(strip_tags($passwdb));
    $max_applicants = trim(strip_tags($max_applicants));
    $errors = "";

    if ($name == "")
      { $errors .= "<LI>You need to supply your name."; }
    if ($email == "")
      { $errors .= "<LI>You need to supply your email address."; }
    if ($max_applicants == "")
      { $errors .= "<LI>You need to supply the maximum number of applicants you can handle."; }
    if ($_SESSION['s_isfd'] != 't' && $_SESSION['s_username'] != $loginkey)
      { $errors .= "<LI>Form fails consistency test. You are not part of the front desk and '" .
            $_SESSION['s_username'] . "' cannot change '$loginkey' profile."; }
    # Possibly more checks later
    if ($errors != "") 
    {
      echo "<P>There have been some problems with what you entered, please hit ",
           "the back button and correct the following errors:",
           "<UL>$errors</UL><HR>\n";
    } else {
      echo "<P>Profile update has passed sanity checks.<BR>\n";
      $sql = "UPDATE manager SET name = '" . $name . "', " .
             "email = '" . $email . "', " .
	     "max_applicants = " . $max_applicants ; 
      if ($_SESSION['s_isfd'] == 't') {
        if ($login != $loginkey) {
	  $sql .= ", login = '". $login ."' ";
	}
        if ($isactive == "t") {
          $sql .= ", is_active = TRUE ";
        } else {
          $sql .= ", is_active = FALSE ";
        }
        if ($isfd == "t") {
	  $sql .= ", is_frontdesk = TRUE ";
	} else {
	  $sql .= ", is_frontdesk = FALSE ";
	}
        if ($isdam == "t") {
	  $sql .= ", is_dam = TRUE ";
	} else {
	  $sql .= ", is_dam = FALSE ";
	}
      }
        $sql .= "WHERE login = '". $loginkey . "'"; 
      if (($erows = update_db($db, $sql)) > 0)
      {
        echo "<P>$erows rows updated in database.<BR>\n";
        if ($_SESSION['s_isfd'] == 't' && $isactive != "t") {
            # lock password
            $sql = "UPDATE manager SET passwd = '*LK*' WHERE login = '$loginkey'";
            if (($erows = update_db($db, $sql)) > 0) {
                echo "Password locked.<BR>\n";
            }
        }
	if ($login != $loginkey && $_SESSION['s_isfd'] == 't')
	{
	  change_app_manager($db, $login, $loginkey);
	}
      }
    } #sanity ok
  } # update_profile
?>
#use wml::nmpage title="Debian New Maintainer - AM Profile"
<?

  if (!session_is_registered("s_username") || !session_is_registered("s_isam")) {
?>
<STRONG>
You should not be here!</STRONG>
<? } else { 
  session_register("s_username");
  session_register("s_isfd");

  if ( ($db = open_db())) {
?>
<H1>Debian New Maintainer - Profile</H1><BR>
<?
  if ($_REQUEST['what'] == "cpasswd") {
    update_password($db, $_REQUEST['passwda'], $_REQUEST['passwdb'],
        $_REQUEST['login'], $_REQUEST['cpasswd']);
  }
  if ($_REQUEST['what'] == "cprofile") {
    update_profile($db, $_REQUEST['name'], $_REQUEST['email'], $_REQUEST['login'],
        $_REQUEST['loginkey'], $_REQUEST['max_applicants'], $_REQUEST['isactive'],
	$_REQUEST['isfd'], $_REQUEST['isdam']);
  } 
  if ($_REQUEST['what'] == "new") {
    $insok = insert_manager($db, $_REQUEST['name'], $_REQUEST['email'], $_REQUEST['login'],
        $_REQUEST['passwda'], $_REQUEST['passwdb'], $_REQUEST['max_applicants'],
	$_REQUEST['isfd'], $_REQUEST['isdam']);
  }
  if ($_REQUEST['what'] == "blank" && $_SESSION['s_isfd'] == 't') {
?>
<FORM method="post" action="amprofile.php?<?=SID?>">
<INPUT type="hidden" name="what" value="new">
<TABLE width=80%>
<?
  print_text("Login", "login", "", TRUE);
  print_text("Name", "name", "", TRUE);
  print_text("Email", "email", "", TRUE );
  print_text("Maximum Applicants", "max_applicants", "1", TRUE);
  print_passwd("Password", "passwda");
  print_passwd("Password (again)", "passwdb");
  print_checkbox("FD Member", "isfd", "f", ($_SESSION['s_isfd'] == 't'));
  print_checkbox("DAM Member", "isdam", "f", ($_SESSION['s_isfd'] == 't'));
?>
<TR><TD> </TD><TD><INPUT type="submit" value="Add AM"></TD></TR>
</TABLE>
</FORM>
<?
  } else {#blank
  if ($_REQUEST['login']) { $login = $_REQUEST['login']; }
  if ($_SESSION['s_isfd'] != "t" || $_REQUEST['login'] == "") { $login = $_SESSION['s_username']; }
  if ($_REQUEST['what'] != "new" || $insok) {
    if (find_manager($db, $login)) {
?>
<H3>Change AM Details</H3>
<P>The folllowing details are stored in the AM system about the application
Managers.  Only Front Desk members are allowed to change the membership to
FD and DAM groups.
<FORM method="post" action="amprofile.php?<?=SID?>">
<INPUT type="hidden" name="what" value="cprofile">
<INPUT type="hidden" name="loginkey" value="<? echo $row["login"] ?>">
<TABLE width=80%>
<?
  print_text("Login", "login", $row["login"], ($_SESSION['s_isfd'] == 't'));
  print_text("Name", "name", $row["name"], TRUE);
  print_text("Email", "email", $row["email"], TRUE );
  print_text("Maximum Applicants", "max_applicants", $row["max_applicants"], TRUE);
  print_checkbox("Active", "isactive", $row["is_active"], ($_SESSION['s_isfd'] == 't'));
  print_checkbox("FD Member", "isfd", $row["is_frontdesk"], ($_SESSION['s_isfd'] == 't'));
  print_checkbox("DAM Member", "isdam", $row["is_dam"], ($_SESSION['s_isfd'] == 't'));
?>
<TR><TD> </TD><TD><INPUT type="submit" value="Change Profile"></TD></TR>
</TABLE>
</FORM>
<H3>Change Password</H3>
<P>The password for the NM site is different to your Debian account password.
Use the form below to change it for the NM site.
<FORM method="post" action="amprofile.php?<?=SID?>">
<INPUT type="hidden" name="what" value="cpasswd">
<INPUT type="hidden" name="login" value="<? echo $row["login"] ?>">
<TABLE width=80%>
<?
  print_passwd("Current Password", "cpasswd");
  print_passwd("New Password", "passwda");
  print_passwd("New Password (again)", "passwdb");
?>
<TR><TD> </TD><TD><INPUT value="Change Password" type="submit"></TD></TR>
</TABLE>
</FORM>
<? if ($_SESSION['s_isfd'] == 't') { ?>
<H3>Delete AM</H3>
<P>Front Desk members can delete Application Managers.
<FORM method="post" action="fddelete.php?<?=SID?>">
<INPUT name="login" type="hidden" value="<? echo $row["login"]; ?>">
<INPUT value="Delete" name="delete" type="submit">
</FORM>
<? } #isfd ?>
<? } else { # db access ok ?>
<STRONG>Sorry, there is a problem connecting to the applicantion manager
table in the database, please try again later.</STRONG>
<? } # db access not ok
   } # insok or new ?>
<? }#blank ?>
<? } else { #db open ok ?>
<P>Problem opening Database.
<? } #!db open ok ?>
<? } # session managerment ok ?>
