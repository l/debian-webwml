#!/usr/bin/python

# Remove a user (and associated place entries) from the database
# Copyright (C) 2002  Martin Michlmayr <tbm@cyrius.com>
# $Id$

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


import pg, sys
import gpg_utils
import apt_pkg

def help():
    print """Usage: gpg_remove_user [OPTION] EMAIL...
Remove a user (and associated places) from the database
"""
    sys.exit(1)

def parse_args():
    global Cnf

    apt_pkg.init()
    Cnf = apt_pkg.newConfiguration()
    apt_pkg.ReadConfigFileISC(Cnf, "gpg.conf")

    Arguments = [("h", "help", "RemoveUsers::Options::Help")]

    removals = apt_pkg.ParseCommandLine(Cnf, Arguments, sys.argv)

    if Cnf["RemoveUsers::Options::Help"]:
        help()
    if not removals: # not user given
        print "No user given!"
        help()
    return removals

# Remove one user and its places and (optionall) send mail
def remove_user(db, email):
    print "Removing user with the email address %s..." % email
    db.query("DELETE FROM places WHERE who IN (SELECT id FROM people WHERE email = '%s')" % email)
    db.query("DELETE FROM people WHERE email = '%s'" % email)


# main

removals = parse_args()
db = pg.connect(Cnf["MyDB"])
for email in removals:
    remove_user(db, email)

# vim:set ts=4:
# vim:set expandtab:
# vim:set shiftwidth=4:
