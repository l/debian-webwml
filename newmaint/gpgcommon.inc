<?
// Copyright (C) 2001, 2002, 2003, 2004, 2005  Martin Michlmayr <tbm@cyrius.com>
// This file may be distributed under the GPL v2 or higher.

    $iso = array("US" => "United States of America",
        "CA" => "Canada",
        "JP" => "Japan",
        "GB" => "United Kingdom",
        "AU" => "Australia",
        "DE" => "Germany",
        "FR" => "France",
        "CH" => "Switzerland",
        "IT" => "Italy",
        "NL" => "Netherlands",
        "AF" => "Afghanistan",
        "AL" => "Albania",
        "DZ" => "Algeria",
        "AS" => "American Samoa",
        "AD" => "Andorra",
        "AI" => "Anguilla",
        "AQ" => "Antartica",
        "AG" => "Antigua & Barbuda",
        "AR" => "Argentina",
        "AM" => "Armenia",
        "AW" => "Aruba",
        "AU" => "Australia",
        "AT" => "Austria",
        "AZ" => "Azerbaijan",
        "BS" => "Bahamas",
        "BH" => "Bahrain",
        "BD" => "Bangladesh",
        "BB" => "Barbados",
        "BY" => "Belarus",
        "BE" => "Belgium",
        "BZ" => "Belize",
        "BJ" => "Benin",
        "BM" => "Bermuda",
        "BT" => "Bhutan",
        "BO" => "Bolivia",
        "BW" => "Botswana",
        "BV" => "Bouvet Island",
        "BR" => "Brazil",
        "IO" => "British Indian Ocean Terr.",
        "BN" => "Brunei Darussalam",
        "BG" => "Bulgaria",
        "BF" => "Burkina Faso",
        "BI" => "Burundi",
        "KH" => "Cambodia",
        "CM" => "Cameroon",
        "CA" => "Canada",
        "CV" => "Cape Verde",
        "KY" => "Cayman Islands",
        "CF" => "Central African Republic",
        "TD" => "Chad",
        "CL" => "Chile",
        "CN" => "China",
        "CX" => "Christmas Island",
        "CC" => "Cocos (Keeling) Isl",
        "CO" => "Colombia",
        "KM" => "Comoros",
        "CG" => "Congo",
        "CK" => "Cook Isl",
        "CR" => "Costa Rica",
        "CI" => "Cote D'Ivoire",
        "HR" => "Croatia",
        "CY" => "Cyprus",
        "CZ" => "Czech Republic",
        "DK" => "Denmark",
        "DJ" => "Djibouti",
        "DM" => "Dominica",
        "DO" => "Dominican Republic",
        "TP" => "East Timor",
        "EC" => "Ecuador",
        "EG" => "Egypt",
        "SV" => "El Salvador",
        "GQ" => "Equatorial Guinea",
        "EE" => "Estonia",
        "ET" => "Ethiopia",
        "FO" => "Faeroe Islands",
        "FK" => "Falkland Isl. (Malvinas)",
        "FJ" => "Fiji",
        "FI" => "Finland",
        "FR" => "France",
        "GF" => "French Guiana",
        "PF" => "French Polynesia",
        "TF" => "French Southern Terr.",
        "GA" => "Gabon",
        "GM" => "Gambia",
        "GE" => "Georgia",
        "DE" => "Germany",
        "GH" => "Ghana",
        "GI" => "Gibraltar",
        "GR" => "Greece",
        "GL" => "Greenland",
        "GD" => "Grenada",
        "GP" => "Guadeloupe",
        "GU" => "Guam",
        "GT" => "Guatemala",
        "GG" => "Guernsey, C.I.",
        "GN" => "Guinea",
        "GW" => "Guinea-Bissau",
        "GY" => "Guyana",
        "HT" => "Haiti",
        "HM" => "Heard and McDonald Isl",
        "HN" => "Honduras",
        "HK" => "Hong Kong",
        "HU" => "Hungary",
        "IS" => "Iceland",
        "IN" => "India",
        "ID" => "Indonesia",
        "IE" => "Ireland",
        "IM" => "Isle of Man",
        "IL" => "Israel",
        "IT" => "Italy",
        "JM" => "Jamaica",
        "JP" => "Japan",
        "JE" => "Jersey, C.I.",
        "JO" => "Jordan",
        "KZ" => "Kazakhstan",
        "KE" => "Kenya",
        "KI" => "Kiribati",
        "KR" => "Korea, Republic of",
        "KW" => "Kuwait",
        "KG" => "Kyrgyzstan",
        "LA" => "Laos",
        "LV" => "Latvia",
        "LB" => "Lebanon",
        "LS" => "Lesotho",
        "LR" => "Liberia",
        "LI" => "Liechtenstein",
        "LT" => "Lithuania",
        "LU" => "Luxembourg",
        "MO" => "Macau",
        "MG" => "Madagascar",
        "MW" => "Malawi",
        "MY" => "Malaysia",
        "MV" => "Maldives",
        "ML" => "Mali",
        "MT" => "Malta",
        "MH" => "Marshall Isl",
        "MQ" => "Martinique",
        "MR" => "Mauritania",
        "MU" => "Mauritius",
        "MX" => "Mexico",
        "FM" => "Micronesia",
        "MD" => "Moldova, Republic of",
        "MC" => "Monaco",
        "MN" => "Mongolia",
        "MS" => "Montserrat",
        "MA" => "Morocco",
        "MZ" => "Mozambique",
        "MM" => "Myanmar",
        "NA" => "Namibia",
        "NR" => "Nauru",
        "NP" => "Nepal",
        "AN" => "Netherland Antilles",
        "NL" => "Netherlands",
        "NC" => "New Caledonia",
        "NZ" => "New Zealand",
        "NI" => "Nicaragua",
        "NE" => "Niger",
        "NG" => "Nigeria",
        "NU" => "Niue",
        "NF" => "Norfolk Isl",
        "MP" => "Northern Mariana Isl",
        "NO" => "Norway",
        "OM" => "Oman",
        "PK" => "Pakistan",
        "PW" => "Palau",
        "PA" => "Panama",
        "PZ" => "Panama Canal Zone",
        "PG" => "Papua New Guinea",
        "PY" => "Paraguay",
        "PE" => "Peru",
        "PH" => "Philippines",
        "PN" => "Pitcairn",
        "PL" => "Poland",
        "PT" => "Portugal",
        "PR" => "Puerto Rico",
        "QA" => "Qatar",
        "RE" => "Reunion",
        "RO" => "Romania",
        "RU" => "Russian Federation",
        "RW" => "Rwanda",
        "KN" => "Saint Kitts & Nevis",
        "LC" => "Saint Lucia",
        "WS" => "Samoa",
        "SM" => "San Marino",
        "ST" => "Sao Tome & Principe",
        "SA" => "Saudi Arabia",
        "SN" => "Senegal",
        "SC" => "Seychelles",
        "SL" => "Sierra Leone",
        "SG" => "Singapore",
        "SK" => "Slovakia",
        "SI" => "Slovenia",
        "SB" => "Solomon Islands",
        "SO" => "Somalia",
        "ZA" => "South Africa",
        "ES" => "Spain",
        "LK" => "Sri Lanka",
        "SH" => "St. Helena",
        "PM" => "St. Pierre and Miquelon",
        "VC" => "St. Vincent & Grenadines",
        "SR" => "Suriname",
        "SJ" => "Svalbard & Jan Mayen Isl",
        "SZ" => "Swaziland",
        "SE" => "Sweden",
        "CH" => "Switzerland",
        "TW" => "Taiwan",
        "TJ" => "Tajikistan",
        "TZ" => "Tanzania, United Republic ",
        "TH" => "Thailand",
        "TG" => "Togo",
        "TK" => "Tokelau",
        "TO" => "Tonga",
        "TT" => "Trinidad & Tobago",
        "TN" => "Tunisia",
        "TR" => "Turkey",
        "TM" => "Turkmenistan",
        "TC" => "Turks and Caicos Isl",
        "TV" => "Tuvalu",
        "AE" => "United Arab Emirates",
        "UM" => "U.S.Minor Outlying Isl",
        "UG" => "Uganda",
        "UA" => "Ukraine",
        "GB" => "United Kingdom",
        "US" => "United States",
        "UY" => "Uruguay",
        "UZ" => "Uzbekistan",
        "VU" => "Vanuatu",
        "VA" => "Vatican City State",
        "VE" => "Venezuela",
        "VN" => "Viet Nam",
        "VG" => "Virgin Isl (British)",
        "VI" => "Virgin Isl, (U.S.)",
        "WF" => "Wallis & Futuna Islands",
        "EH" => "Western Sahara",
        "YE" => "Yemen, Republic of",
        "ZR" => "Zaire",
        "ZM" => "Zambia",
        "ZW" => "Zimbabwe");

    function print_from_to($begin, $finish) {
        if (! $begin && ! $finish) {
            # don't show anything
        } else if ($begin && ! $finish) {
            echo ", starting from $begin";
        } else if (! $begin && $finish) {
            echo ", until $finish";
        } else {
            echo ", $begin to $finish";
        }
    }

    function print_place_compact($prefix, $begin, $finish, $city, $state, $country, $url) {
        global $iso;
        echo $prefix;
        if ($state) {
            echo "<b>$state</b>, ";
        }
        if ($city) {
            if ($url) {
                echo "<a href=\"$url\">$city</a>";
            } else {
                echo "$city";
            }
        } else {
            echo "$iso[$country]";
        }
        echo "<i>";
        print_from_to($begin, $finish);
        echo "</i>";
    }

    function print_place_long($begin, $finish, $city, $state, $country, $url) {
        global $iso;
        if ($city) {
            echo "$city";
        }
        if ($state) {
            echo ", <b>$state</b>";
        }
        if ($country) {
            echo ", <i>$iso[$country]</i>";
        }
        if ($url) {
            echo ", <kbd>$url</kbd>";
        }
        print_from_to($begin, $finish);
    }

    function print_all_places($id, $modify) {

        if (!($db = open_db())) {
            echo "Cannot open SQL database";
            return FALSE;
        }

        $sql = "SELECT id, begin, finish, city, state, country, url FROM places WHERE who = '$id' ORDER BY begin, finish";
        if (! ($query = pg_exec($db, $sql))) {
            echo "Problem with query", pg_ErrorMessage($db), "<BR>";
            return FALSE;
        }
        echo "<UL>";
        $rows = pg_NumRows($query);
        for ($i = 0; $i < $rows; $i++) {
            $row = pg_Fetch_Array($query, $i);
            print_place_long($row["begin"], $row["finish"], $row["city"], $row["state"], $row["country"], $row["url"]);
            if ($modify) {
                echo " <A HREF = \"gpgplace.php?id=", $row["id"], "\">[Modify]</A>";
                echo " <A HREF = \"gpgplace.php?remove=1&id=", $row["id"], "\">[Remove]</A>";
                echo "<br>\n";
            }
        }
        echo "</UL>";
    }

    function show_by_country($db, $offer) {
        global $iso;
        $shortlength = 3;   # the maximal length of a state to be displayed inline
        $indent="";         # indentation of location where state not inline
        for ($i=0; $i <= $shortlength; $i++) {
            $indent .= "&nbsp;";
        }
        $sql = "SELECT country, state, who, begin, finish, city, forename, surname, email, places.url, people.url as peopleurl, places.url as placesurl FROM places, people WHERE ";
        if ($offer) {
            $sql .= "offer is TRUE";
        } else {
            $sql .= "offer is FALSE";
        }
        $sql .= " AND places.who = people.id ORDER BY country, state, city, UPPER(surname)";

        if (! ($query = pg_exec($db, $sql))) {
            echo "Problem with query", pg_ErrorMessage($db), "<BR>";
            return FALSE;
        }
        $rows = pg_NumRows($query);
        $old_country = "";
        for ($i = 0; $i < $rows; $i++) {
            $row = pg_Fetch_Array($query, $i);
            if ($row["country"] != $old_country) {
                echo "\n";
                echo "<H2>";
                echo "<A NAME = \"", $row["country"], "\">";
                echo $row["country"], " - ", $iso[$row["country"]];
                echo "</A>";
                echo "</H2>";
                echo "\n";
                $old_state = "";
            }
            if ($row["state"] != $old_state) {
                echo "<p>\n";
                if (strlen($row["state"]) > $shortlength) {
                    echo "<b>", $row["state"], ",</b><br>\n";
                }
            }
            if (strlen($row["state"]) <= $shortlength) {
                print_place_compact("",$row["begin"], $row["finish"], $row["city"], $row["state"], $row["country"], $row["placesurl"]);
            } else {
                print_place_compact($indent,$row["begin"], $row["finish"], $row["city"], "", $row["country"], $row["placesurl"]);
            }
            echo ": ";
            if ($row["peopleurl"]) {
                echo "<a href=\"", $row["peopleurl"], "\">", $row["forename"], " ", $row["surname"], "</a>";
            } else {
                echo $row["forename"], " ", $row["surname"];
            }
            echo " &lt;", $row["email"], "&gt;";
            echo "<br>\n";

            $old_country = $row["country"];
            $old_state = $row["state"];
        }
    }

?>
