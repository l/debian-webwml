<?
  session_start();
  include("config.inc");
  include("common.inc");

  function email_manager($db, $login, $forename, $surname, $aemail) {
    $sql = "SELECT * FROM manager WHERE login = '$login'";
    if (! ($result = pg_exec($db, $sql))) {
      echo "Problem with query: ", pg_ErrorMessage($db), "<BR>";
      echo "SQL was: $sql <BR>\n";
      return FALSE;
    }
    if (pg_NumRows($result) == 0) {
      echo "Cannot find mananger in database.<BR>\n";
      echo "SQL was: $sql <BR>\n";
      return FALSE;
    }
    $row = pg_Fetch_Array($result, 0);
    $body = "Hello " . $row["name"] . ",\n\n";
    $body .= "This is an automatic message from the New Maintainer website found at\n";
    $body .= "http://nm.debian.org/  The Front Desk has assigned a new applicant to you:\n";
    $body .= "$forename $surname <" . $aemail . ">.  Please remember to visit the\n";
    $body .= "website to inform the front desk whether or not you accept this applicant.\n\n";
    $body .= "  - New Maintainer Website.\n";
    $headers = "From: NM Front Desk <new-maintainer@debian.org>\n";
    $headers .= "Reply-To: $forename $surname <" . $aemail . ">\n";
    $headers .= "Content-Type: text/plain; charset=iso-8859-1\n";
    $headers .= "X-Mailer: PHP/" . phpversion();
    mail($row["email"], "New Debian Maintainer: $aemail", $body, $headers);
    return TRUE;
  }

  function email_manager_approved($db, $login, $forename, $surname, $aemail) {
    $sql = "SELECT * FROM manager WHERE login = '$login'";
    if (! ($result = pg_exec($db, $sql))) {
      echo "Problem with query: ", pg_ErrorMessage($db), "<BR>";
      echo "SQL was: $sql <BR>\n";
      return FALSE;
    }
    if (pg_NumRows($result) == 0) {
      echo "Cannot find mananger in database.<BR>\n";
      echo "SQL was: $sql <BR>\n";
      return FALSE;
    }
    $row = pg_Fetch_Array($result, 0);
    $body = "Hello " . $row["name"] . ",\n\n";
    $body .= "This is an automatic message from the New Maintainer website found at\n";
    $body .= "http://nm.debian.org/  It seems that the DAM has approved your applicant\n";
    $body .= "$forename $surname <" . $aemail . ">.  Please remember that nm.d.o is\n";
    $body .= "not authoritative and this mail may be an error!  Make sure to use finger\n";
    $body .= "on a .d.o host to check whether an account is really there (also\n";
    $body .= "remember that the account information on .d.o is only updated every 15\n";
    $body .= "minutes and can take up to an hour).\n";
    $body .= "\n";
    $body .= "\n";
    $body .= "Thanks for going through the NM process with $forename.\n";
    $body .= "\n";
    $body .= "  - New Maintainer Website.\n";
    $headers = "From: NM Front Desk <new-maintainer@debian.org>\n";
    $headers .= "Reply-To: $forename $surname <" . $aemail . ">\n";
    $headers .= "Content-Type: text/plain; charset=iso-8859-1\n";
    $headers .= "X-Mailer: PHP/" . phpversion();
    mail($row["email"], "New Debian Developer: $aemail", $body, $headers);
    return TRUE;
  }

  function check_manager($db, $manager, $aemail)
  {
    $sql = "SELECT * FROM applicant WHERE email ='$aemail'";
    if (! ($result = pg_exec($db, $sql))) {
      echo "Problem with query: ", pg_ErrorMessage($db), "<BR>";
      echo "SQL was: $sql <BR>\n";
      return FALSE;
    }
    if (pg_NumRows($result) == 0) {
      echo "Could not find applicant $aemail in the database.<BR>\n";
      echo "SQL was: $sql <BR>\n";
      return FALSE;
    }
    $row = pg_Fetch_Array($result, 0);
    if (trim($row["manager"]) != $manager) {
      if ($manager != "") {
        echo "<P>Old manager was '", $row["manager"], "' new one is '$manager'. Emailling new manager.\n";
        return (email_manager($db, $manager, $row['forename'], 
	   $row['surname'],$aemail));
      } else {
        echo "<P>Old manager was '", $row["manager"], "' new one is blank.\n";
	return TRUE;
      }
    }
    return TRUE;
  } #check manager

  function find_manager($db, $login) {
    $sql = "SELECT * FROM manager WHERE login = '$login'";
    if (! ($result = pg_exec($db, $sql))) {
      echo "Problem with query", pg_ErrorMessage($db), "<BR>";
      return TRUE;
    }
    if (pg_NumRows($result) == 0) {
      return FALSE;
    }
    return TRUE;
  }

  function update_db($db, $sql) {
  if (! ($result = pg_exec($db, $sql))) {
    echo "Problem with query", pg_ErrorMessage($db), "<BR>";
    return -1;
  }
  if (($tuples = pg_CmdTuples($result)) != 1) {
    echo "Only one row should be effected but $tuples rows were<BR>\n";
  }
  return $tuples;
}
  function get_text($name, $value)
  {
    if ($value == "" ) {
      $str = $name . "= null";
    } else {
      if (trim($value) == "today") {
        $str = $name . "= CURRENT_DATE";
      } else {
        $str = $name . "='" . trim(strip_tags($value)) . "'";
      }
    }
    return $str;
  }
  function get_bool($name, $value)
  {
    if ($value == 't') 
    {
      $str = $name . "= true ";
    } else if ($value == 'f') {
      $str = $name . " = false ";
    } else {
      $str = $name . " = null ";
    }
    return $str;
  }
  function get_textarea($name, $value)
  {
    if ($value == "" ) {
      $str = $name . "= null";
    } else {
      $str = $name . "='" . trim(strip_tags($value)) . "'";
    }
    return $str;
  }
?>
#use wml::nmpage title="Debian New Maintainer - Applicant Status Update"
<?  
  if (!session_is_registered("s_username") || !session_is_registered("s_isam")) {
?>
<STRONG>
You should not be here!</STRONG>
<? } else { 
  session_register("s_username");
  session_register("s_isfd");
  session_register("s_isdam");


?>
<H1>Debian New Maintainer</H1><BR>
<H3>Updating Applicant's status</H3>
<?
  # Check ze values, any bad things we abort
  if ( ($db = open_db())) {
  $errors = "";
  if ($_REQUEST['emailkey'] == "") { $errors .= "<LI><STRONG>Blank old email address, problem with script!</STRONG>"; }
  if ($_SESSION['s_isdam'] == 't' || $_SESSION['s_isfd'] == 't') {
    if ($_REQUEST['email'] == "") { $errors .= "<LI>No new email address.\n"; }
    if ($_REQUEST['forename'] == "") { $errors .= "<LI>You must have a first name entered.\n"; }
    if ($_REQUEST['surname'] == "") { $errors .= "<LI>You must have a surname entered.\n"; }
    if ($_REQUEST['apply_date'] == "") { $errors .= "<LI>You must have a date of application.\n"; }
    if ($_REQUEST['manager'] != "" && $_REQUEST['manager_date'] == "")
      { $errors .= "<LI>A manager has been assigned but with no date.\n"; }
    if ($_REQUEST['manager'] == "" && $_REQUEST['manager_date'] != "")
      { $errors .= "<LI>A manager has not been assigned but there is a manager assigned date.\n"; }
    if ($_REQUEST['advocate_ok'] != "n" && $_REQUEST['advocate_checked'] == "")
      { $errors .= "<LI>Advocate check entered but no date given.\n"; }
    if ($_REQUEST['advocate_ok'] == "n" && $_REQUEST['advocate_checked'] != "")
      { $errors .= "<LI>Advocate Check Date given but Advocate check not changed.\n"; }
  } # end of fd or dam

  if ($_SESSION['s_isfd'] == 't') {
    if ($_REQUEST['application_ok'] != "n" && $_REQUEST['application_ok_date'] == "")
      { $errors .= "<LI>FD has checked report but there is no date.\n"; }
    if ($_REQUEST['application_ok'] != "n" && $_REQUEST['fd_member'] == "")
      { $errors .= "<LI>FD has checked report but not specified their login (FD member).\n"; }
  } # end of fd only

  if ($_REQUEST['am_confirm'] != "n" && $_REQUEST['am_confirm_date'] == "")
    { $errors .= "<LI>AM has confirmed applicant but not put a date in.\n"; }
  if ($_REQUEST['am_confirm'] == "n" && $_REQUEST['am_confirm_date'] != "")
    { $errors .= "<LI>AM has not confirmed applicant but there is a date set.\n"; }

  if ($_REQUEST['id_ok'] != "n" && $_REQUEST['id_checked'] == "")
    { $errors .= "<LI>ID has been checked but there is no date of checking.\n"; }
  if ($_REQUEST['id_ok'] == "n" && $_REQUEST['id_checked'] != "")
    { $errors .= "<LI>ID has not been checked but there is a date of checking.\n"; }
  if ($_REQUEST['pnp_ok'] != "n" && $_REQUEST['pnp_checked'] == "")
    { $errors .= "<LI>Philosophy and Procedures have been checked but there is no date of checking.\n"; }
  if ($_REQUEST['pnp_ok'] == "n" && $_REQUEST['pnp_checked'] != "")
    { $errors .= "<LI>Philosophy and Procedures have not been checked but there is a date of checking.\n"; }
  if ($_REQUEST['tns_ok'] != "n" && $_REQUEST['tns_checked'] == "")
    { $errors .= "<LI>Tasks and Skills have been checked but there is no date of checking.\n"; }
  if ($_REQUEST['tns_ok'] == "n" && $_REQUEST['tns_checked'] != "")
    { $errors .= "<LI>Tasks and Skills have not been checked but there is a date of checking.\n"; }
  if ($_REQUEST['approved'] != "n" && $_REQUEST['decision'] == "")
    { $errors .= "<LI>AM has approved applicant but there is no date.\n"; }
  if ($_REQUEST['approved'] == "n" && $_REQUEST['decision'] != "")
    { $errors .= "<LI>AM has not yet approved applicant but there is a date.\n"; }
  if (($_REQUEST['manager'] != "") && !(find_manager($db, $_REQUEST['manager'])))
    { $errors .= "<LI>I cannot find Application Manager $manager in the database.\n"; }
  # Possibly more checks later
  if ($errors != "") 
  {
    echo "<P>There have been some problems with what you entered, please hit ",
         "the back button and correct the following errors:",
	 "<UL>$errors</UL>\n";
  } else {
    echo "<P>Submission has passed sanity checks.<BR>\n";


    if ($_SESSION['s_isdam'] == 't') {
        $sql = "SELECT * FROM applicant WHERE email ='" . $_REQUEST['emailkey'] . "'";
        if (! ($result = pg_exec($db, $sql))) {
          echo "Problem with query: ", pg_ErrorMessage($db), "<BR>";
          echo "SQL was: $sql <BR>\n";
          return FALSE;
        }
        if (pg_NumRows($result) == 0) {
          echo "Could not find applicant $emailkey in the database.<BR>\n";
          echo "SQL was: $sql <BR>\n";
          return FALSE;
        }
        $row = pg_Fetch_Array($result, 0);
        $old_newmaint = trim($row["newmaint"]);
    }

    $sql = "UPDATE applicant SET ";
    if ($_SESSION['s_isdam'] == 't' || $_SESSION['s_isfd'] == 't') {
      $sql .= get_text("surname", $_REQUEST['surname']) .
              ", " . get_text("email", $_REQUEST['email']) .
              ", " . get_text("forename", $_REQUEST['forename']) .
	      ", " . get_text("apply_date", $_REQUEST['apply_date']) .
	      ", " . get_text("advocate", $_REQUEST['advocate']) .
	      ", " . get_text("advocate_date", $_REQUEST['advocate_date']) .
	      ", " . get_bool("advocate_ok", $_REQUEST['advocate_ok']) .
	      ", " . get_text("advocate_checked", $_REQUEST['advocate_checked']) .
	      ", " . get_text("manager", $_REQUEST['manager']) .
	      ", " . get_text("manager_date", $_REQUEST['manager_date']) .
              ", " . get_bool("application_ok", $_REQUEST['application_ok']) .
              ", " . get_text("application_ok_date", $_REQUEST['application_ok_date']) .
              ", " . get_text("fd_member", $_REQUEST['fd_member']) .
	      ", " . get_textarea("da_comment", $_REQUEST['da_comment']) . ", " ;
    } 
    $sql .=  get_bool("am_confirm", $_REQUEST['am_confirm']) . 
	   ", " . get_text("am_confirm_date", $_REQUEST['am_confirm_date']) .
	   ", " . get_text("am_contact", $_REQUEST['am_contact']) .
           ", " . get_bool("id_ok", $_REQUEST['id_ok']) .
	   ", " . get_text("id_checked", $_REQUEST['id_checked']) .
	   ", " . get_bool("pnp_ok", $_REQUEST['pnp_ok']) .
	   ", " . get_text("pnp_checked", $_REQUEST['pnp_checked']) .
	   ", " . get_bool("tns_ok", $_REQUEST['tns_ok']) .
	   ", " . get_text("tns_checked", $_REQUEST['tns_checked']) .
	   ", " . get_bool("approved", $_REQUEST['approved']) .
	   ", " . get_text("decision", $_REQUEST['decision']) .
	   ", " . get_textarea("man_comment", $_REQUEST['man_comment']) ;
    if ($_SESSION['s_isdam'] == 't') {
      $sql .= ", " . get_bool("da_phone_required", $_REQUEST['da_phone_required']) .
              ", " . get_text("da_phone", $_REQUEST['da_phone']) .
	      ", " . get_bool("da_approved", $_REQUEST['da_approved']) .
	      ", " . get_text("da_approved_date", $_REQUEST['da_approved_date']) .
	      ", " . get_text("da_member", $_REQUEST['da_member']) .
	      ", " . get_text("newmaint", $_REQUEST['newmaint']) ;
     }
     $sql .= " WHERE email = '" . $_REQUEST['emailkey'] . "'";
           if ($_SESSION['s_isfd'] == 't') {
	     if (!(check_manager($db, trim($_REQUEST['manager']), $_REQUEST['email']))) {
	       echo "<P>Problem emailling manager.\n";
	     }
	   }
	   if (($erows = update_db($db, $sql)) > 0)
	   {
	     echo "<P>$erows rows updated in database.<BR>\n";
             if ($_SESSION['s_isdam'] == 't') {
                 if ($_REQUEST['newmaint'] != '' && $_REQUEST['old_newmaint'] == '') {
                     $manager = trim($_REQUEST['manager']);
                     echo "Applicant got approved, mailing manager $manager<p>";
                     email_manager_approved($db, $manager, $_REQUEST['forename'],
                         $_REQUEST['surname'], $_REQUEST['emailkey']);
                 }
             }
	   } 
  }
?>
<? } #open database ?>
<? } #session management ?>
